{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/gpu.js/src/utils.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/index.js","../node_modules/gpu.js/src/backend/gl/texture/float.js","../node_modules/gl/src/javascript/native-gl.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/gl/src/javascript/linkable.js","../node_modules/gpu.js/src/input.js","../node_modules/gpu.js/src/texture.js","../node_modules/gpu.js/src/backend/function-builder.js","../node_modules/gpu.js/src/backend/web-gl/kernel.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned.js","../node_modules/gpu.js/src/backend/kernel.js","../node_modules/gpu.js/src/backend/function-node.js","../node_modules/process/browser.js","../node_modules/gpu.js/src/backend/web-gl/function-node.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/html-image.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/unsigned-array.js","../node_modules/gpu.js/src/gpu.js","../node_modules/gpu.js/node_modules/acorn/dist/acorn.es.js","../node_modules/gpu.js/src/backend/cpu/kernel.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/gpu.js/src/backend/cpu/function-node.js","../node_modules/gpu.js/src/backend/headless-gl/kernel.js","../node_modules/bit-twiddle/twiddle.js","../node_modules/glsl-tokenizer/lib/literals.js","../node_modules/glsl-tokenizer/lib/builtins.js","../node_modules/path-browserify/index.js","../node_modules/gl/src/javascript/utils.js","../node_modules/gl/src/javascript/webgl-uniform-location.js","../node_modules/gpu.js/src/backend/gl/kernel.js","../node_modules/gpu.js/src/backend/gl/kernel-string.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/boolean.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/float.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/integer.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-html-image.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array2.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array3.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array4.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel.js","../node_modules/gpu.js/src/backend/web-gl2/function-node.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/html-image-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array3d-i.js","../node_modules/gpu.js/src/index.js","../node_modules/gpu-mock.js/index.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/gpu.js/src/backend/function-tracer.js","../node_modules/gpu.js/src/backend/cpu/kernel-string.js","../node_modules/gl/index.js","../node_modules/gl/src/javascript/browser-index.js","../node_modules/gl/src/javascript/node-index.js","../node_modules/gl/src/javascript/webgl-context-attributes.js","../node_modules/gl/src/javascript/webgl-rendering-context.js","../node_modules/glsl-tokenizer/string.js","../node_modules/glsl-tokenizer/index.js","../node_modules/glsl-tokenizer/lib/operators.js","../node_modules/glsl-tokenizer/lib/literals-300es.js","../node_modules/glsl-tokenizer/lib/builtins-300es.js","../node_modules/bindings/bindings.js","../node_modules/file-uri-to-path/index.js","../node_modules/gl/src/javascript/extensions/angle-instanced-arrays.js","../node_modules/buffer/index.js","../node_modules/webpack/buildin/global.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/gl/src/javascript/extensions/oes-element-index-unit.js","../node_modules/gl/src/javascript/extensions/oes-texture-float.js","../node_modules/gl/src/javascript/extensions/stackgl-destroy-context.js","../node_modules/gl/src/javascript/extensions/stackgl-resize-drawing-buffer.js","../node_modules/gl/src/javascript/extensions/webgl-draw-buffers.js","../node_modules/gl/src/javascript/webgl-active-info.js","../node_modules/gl/src/javascript/webgl-framebuffer.js","../node_modules/gl/src/javascript/webgl-buffer.js","../node_modules/gl/src/javascript/webgl-drawing-buffer-wrapper.js","../node_modules/gl/src/javascript/webgl-program.js","../node_modules/gl/src/javascript/webgl-renderbuffer.js","../node_modules/gl/src/javascript/webgl-shader.js","../node_modules/gl/src/javascript/webgl-shader-precision-format.js","../node_modules/gl/src/javascript/webgl-texture.js","../node_modules/gl/src/javascript/webgl-texture-unit.js","../node_modules/gl/src/javascript/webgl-vertex-attribute.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized-2d.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized-3d.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned-2d.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned-3d.js","../node_modules/gpu.js/src/backend/gl/texture/graphical.js","../node_modules/gpu.js/src/plugins/triangle-noise.js","../node_modules/gpu.js/src/backend/web-gl/fragment-shader.js","../node_modules/gpu.js/src/backend/web-gl/vertex-shader.js","../node_modules/gl-wiretap/index.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value-maps.js","../node_modules/gpu.js/src/backend/kernel-value.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl2/fragment-shader.js","../node_modules/gpu.js/src/backend/web-gl2/vertex-shader.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value-maps.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/boolean.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/float.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/integer.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/html-image.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-html-image.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-html-image-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array2.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array3.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array4.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-unsigned-array.js","../node_modules/gpu.js/src/kernel-run-shortcut.js","../node_modules/gpu.js/src/alias.js","workloads/gpuMultiply.ts","workers/gpuworker.worker.ts"],"names":["gpuMultiply","input","accumulator","i","thread","x","ctx","self","n","n_2","gpu","GPU","doWork","createKernel","workload","setImmutable","setPipeline","setOutput","Array","fill","map","Math","random","addEventListener","event","forEach","_","console","log","postMessage"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACNA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACPA,cAAc,mBAAO,CAAC,EAAmB;;AAEzC,4BAA4B,mBAAO,CAAC,EAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4C;;;;;;ACZA,qBAAqB,mBAAO,CAAC,EAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2B;;;;;;ACjBA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,YAAY,mBAAO,CAAC,EAAO;;AAE3B,eAAe,mBAAO,CAAC,EAAS;AAChC;;AAEA,gBAAgB,mBAAO,CAAC,EAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,SAAS;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA,GAAG;AACH;AACA,+CAA+C,8BAA8B;AAC7E,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,aAAa;AAC5B;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,2BAA2B;AACxC,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,0BAA0B;AACvC;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,0BAA0B;AACvC;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,0BAA0B;AACvC;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC,qBAAqB,qBAAqB;AAC1C,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,oCAAoC;AACjD,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA,eAAe,SAAS;AACxB;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA,8BAA8B,cAAc;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA,aAAa,MAAM;AACnB,eAAe,OAAO;AACtB;AACA;AACA;AACA,0BAA0B,SAAS;AACnC,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,kBAAkB;AAC/B,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oCAAoC;;AAEpC,gCAAgC;;AAEhC;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,wDAAwD;;AAExD,oEAAoE;;AAEpE,6EAA6E;;AAE7E;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;;AAEA,qBAAqB,WAAW;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA,qBAAqB,YAAY;AACjC;;AAEA,uBAAuB,WAAW;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,sBAAsB;AAClD,oDAAoD;AACpD;;AAEA,qBAAqB,+BAA+B;AACpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA,mCAAmC,sBAAsB;AACzD;AACA;AACA;;AAEA,oGAAoG;AACpG;;AAEA;AACA;;AAEA,8CAA8C,0BAA0B;AACxE;;AAEA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,uDAAuD;;AAEvD;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA,qDAAqD,+BAA+B;;AAEpF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,qBAAqB,iCAAiC;AACtD;;AAEA;AACA;AACA;;AAEA,2GAA2G;AAC3G;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,mBAAO,CAAC,EAAU;AACtC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,E;;;;;;AC7jCA,oBAAoB,mBAAO,CAAC,EAAiB;;AAE7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sB;;;;;;ACtBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAgB;AACxC;;AAEA,gBAAgB,mBAAO,CAAC,GAAoB;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,oCAAoC;AACrD;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACjMA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7DA,iEAAkB,mBAAO,CAAC,EAAU;;AAEpC;AACA;AACA,+CAA+C;;AAE/C,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA,E;;;;;;;ACbA,qBAAqB,mBAAO,CAAC,EAAkB;;AAE/C,2BAA2B,mBAAO,CAAC,EAAwB;;AAE3D,sBAAsB,mBAAO,CAAC,EAAmB;;AAEjD;AACA;AACA;;AAEA,gC;;;;;;ACVA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC9EA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,CAAS;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;ACjFA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5DA,sBAAsB,mBAAO,CAAC,EAAyG;;AAEvI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;;AAEA,sBAAsB,6BAA6B;AACnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,yBAAyB;AAClD;AACA;;AAEA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wBAAwB;AAC/B,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;;AAEA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;;AAEA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA,iBAAiB,SAAS;AAC1B;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;;AAElC,yBAAyB,yCAAyC;AAClE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;;;AAGX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qBAAqB,iCAAiC;AACtD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qCAAqC,wDAAwD;AAC7F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,qCAAqC;;AAErC;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACxwBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAc;AACrC;;AAEA,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C;;AAEA,gBAAgB,mBAAO,CAAC,EAAiB;AACzC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA,oBAAoB,mBAAO,CAAC,GAA8B;;AAE1D,gBAAgB,mBAAO,CAAC,GAAmB;AAC3C;;AAEA,gBAAgB,mBAAO,CAAC,GAAiB;AACzC;;AAEA,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C;;AAEA,gBAAgB,mBAAO,CAAC,GAAqB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,QAAQ;AAClB,UAAU,OAAO;AACjB,UAAU,MAAM;AAChB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,gBAAgB;AAC/B;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,oBAAoB;AAC3C;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,4BAA4B;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;AACA;;AAEA;AACA,yBAAyB,2BAA2B;AACpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA,qFAAqF,cAAc;AACnG;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC,OAAO;AACP,mCAAmC;AACnC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA,4FAA4F,oEAAoE,kCAAkC,KAAK,iBAAiB,GAAG;AAC3N;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B,yBAAyB;AACtD;AACA;;AAEA;;AAEA;AACA,6BAA6B,yBAAyB;AACtD;AACA;;AAEA;;AAEA;AACA,6BAA6B,yBAAyB;AACtD;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,8BAA8B;AACzD;AACA;;AAEA;;AAEA;AACA,2BAA2B,8BAA8B;AACzD;AACA;;AAEA;;AAEA;AACA,2BAA2B,8BAA8B;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;;AAEA,GAAG;AACH;AACA;AACA,oEAAoE;AACpE;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;;AAEA;AACA,yBAAyB,2CAA2C;AACpE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC9pDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,eAAe,mBAAO,CAAC,CAAU;AACjC;;AAEA,gBAAgB,mBAAO,CAAC,EAAU;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;;AAEA,GAAG;AACH;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kDAAkD;AACnE;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB;AAChB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP,wBAAwB,gCAAgC;AACxD;AACA;AACA,WAAW;AACX;AACA,OAAO;;;AAGP;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC50BA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,YAAY,mBAAO,CAAC,EAAO;;AAE3B,eAAe,mBAAO,CAAC,CAAU;AACjC;;AAEA,gBAAgB,mBAAO,CAAC,EAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,kBAAkB;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,4GAA4G;AAC5G;AACA,OAAO,GAAG;;AAEV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qBAAqB,6BAA6B;AAClD;;AAEA;AACA,yBAAyB,8BAA8B;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,yBAAyB;AACpqBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,yBAAyB,gBAAgB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,uCAAuC;;AAEvC,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,yBAAyB,mBAAmB;AAC5C;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACnxDA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;AC/MA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAa;AACpC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkB;AAC1C,0CAA0C;AAC1C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,eAAe,MAAM;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,+BAA+B;AACtD;;AAEA;AACA;AACA;;AAEA,0FAA0F;;AAE1F;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP,sBAAsB,KAAK;;AAE3B,sBAAsB,2BAA2B;AACjD;AACA;AACA,OAAO;;;AAGP,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gEAAgE;AAChE,4BAA4B;AAC5B,OAAO;AACP,0FAA0F;AAC1F,kEAAkE;AAClE,OAAO;AACP,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB;AACA,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA,uDAAuD,8BAA8B,iCAAiC;AACtH;AACA,sBAAsB;AACtB,OAAO;AACP;;AAEA;AACA,0CAA0C;AAC1C;;AAEA,0DAA0D,oCAAoC,8BAA8B;;AAE5H;AACA,gEAAgE;AAChE;;AAEA;AACA,sDAAsD;AACtD,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,oCAAoC,8BAA8B;AAC1H;AACA;AACA,2BAA2B;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,oCAAoC,8BAA8B;AAC1H;AACA;AACA;AACA,2BAA2B;AAC3B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA,qCAAqC;;AAErC,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA,OAAO;AACP,sBAAsB;;AAEtB,yBAAyB,yBAAyB;AAClD;AACA;;AAEA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,WAAW;AACX,0BAA0B;AAC1B;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,uBAAuB;AACvB;AACA,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,OAAO;;;AAGP;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,gCAAgC;AAChC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,kBAAkB,MAAM;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD;;AAEvD;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA,uBAAuB,yBAAyB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP,gCAAgC;;AAEhC,uBAAuB;;AAEvB;AACA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AC5vDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5EA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACpFA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACtFA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACxEA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC3EA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5EA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACpFA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACpFA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACpFA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC9EA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,eAAe,mBAAO,CAAC,EAAa;AACpC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C;;AAEA,gBAAgB,mBAAO,CAAC,EAA8B;AACtD;;AAEA,gBAAgB,mBAAO,CAAC,EAA0B;AAClD;;AAEA,gBAAgB,mBAAO,CAAC,EAAyB;AACjD;;AAEA,gBAAgB,mBAAO,CAAC,GAAuB;AAC/C;AACA;AACA;AACA,UAAU;AACV;;;AAGA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,aAAa;AAC5B;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B,yBAAyB;AACnD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+EAA+E;;AAE/E;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,iFAAiF;;AAEjF;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yEAAyE;;AAEzE;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,SAAS;AAC1B;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,kBAAkB;AACjC,iBAAiB,IAAI;AACrB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,IAAI;AACrB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kEAAkE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA,gCAAgC;AAChC;;AAEA;AACA,uBAAuB,0BAA0B;AACjD,yCAAyC;;AAEzC,SAAS;;;AAGT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;AC3pBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;;AAEA,ulDAAulD;;AAEvlD,yyBAAyyB;AACzyB;AACA;;AAEA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,0BAA0B;AAC1B;AACA;AACA,GAAG;AACH,0BAA0B;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;AAGA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA,2BAA2B;;AAE3B,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;;AAGA,wBAAwB;;AAExB,oBAAoB;;AAEpB,mCAAmC,qCAAqC,aAAa;AACrF;;AAEA,mDAAmD;;AAEnD;AACA,iDAAiD;AACjD;AACA;;AAEA;AACA,0BAA0B;;AAE1B;AACA,gEAAgE;;AAEhE,6BAA6B;;AAE7B,4DAA4D;;AAE5D,oCAAoC;;AAEpC,mBAAmB;;AAEnB;AACA;AACA,GAAG;;;AAGH;AACA,4BAA4B;;AAE5B;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B,0DAA0D;;AAE1D;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,MAAM;;;AAGT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA,QAAQ,wBAAwB;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;;AAEA,8BAA8B,4BAA4B;AAC1D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,mBAAmB;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,sCAAsC,QAAQ;AAC9C;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH,eAAe,YAAY;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,6CAA6C,iBAAiB;AAC9D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA,GAAG;AACH,4CAA4C,qBAAqB;AACjE;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,mBAAmB,YAAY,YAAY;;AAE3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA,cAAc;;AAEd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA,iBAAiB,mEAAmE;AACpF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C,iBAAiB;AAChE;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;;AAEd;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6CAA6C,iBAAiB;AAC9D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,qBAAqB;AACpE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClyEAAyE;;AAEzE;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,iBAAiB;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;;AAEA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,iBAAiB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,eAAe;AACf,gBAAgB;AAChB;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,eAAe;AACf,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa;AACb;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa;AACb;;;AAGA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,iBAAiB;AACnE;;AAEA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,CAAC;AACD;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iCAAiC,KAAK;;;AAGtC;AACA;AACA,EAAE;AACF;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,oCAAoC;;AAEpC;;AAEA;AACA;AACA,GAAG,YAAY;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,mDAAmD,OAAO;AAC1D;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;;;AAGF;AACA;;AAEA,QAAQ,8BAA8B;AACtC;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA,iBAAiB;;AAEjB;AACA,uBAAuB;;AAEvB;AACA;AACA;;;;;;;;AC7nMA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAW;AAClC;;AAEA,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C;;AAEA,gBAAgB,mBAAO,CAAC,EAAiB;AACzC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA,gBAAgB,mBAAO,CAAC,EAAiB;AACzC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,4BAA4B;AACnD;AACA,kIAAkI,uEAAuE;AACzM;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA,2IAA2I,uBAAuB;AAClK;AACA,OAAO,qBAAqB,6SAA6S;AACzU;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA,qFAAqF,YAAY;AACjG;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iHAAiH;AACjH;;AAEA;AACA,iHAAiH;AACjH;;AAEA;AACA,iGAAiG;AACjG;;AAEA;AACA,2FAA2F;AAC3F;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,+BAA+B;AACpD;;AAEA;AACA;AACA,wGAAwG;AACxG;;AAEA;AACA,wGAAwG;AACxG;;AAEA;AACA,wFAAwF;AACxF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,kCAAkC,kCAAkC,gCAAgC,SAAS,mFAAmF,kCAAkC,qEAAqE,SAAS,OAAO,6DAA6D,0EAA0E,2DAA2D,SAAS,OAAO;AAC/kB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;;AAEA,uBAAuB,iBAAiB;AACxC;AACA,+CAA+C;;AAE/C,+CAA+C;;AAE/C,+CAA+C;;AAE/C,+CAA+C;;AAE/C;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mCAAmC;;;AAGnC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,8DAA8D,uDAAuD,aAAa;AAClI;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,gDAAgD,gEAAgE;AAChH,sGAAsG;AACtG,OAAO;AACP,+DAA+D;AAC/D,OAAO,sCAAsC,aAAa,OAAO,0BAA0B,0BAA0B,0BAA0B,wCAAwC;AACvL;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,gDAAgD,sCAAsC,wCAAwC;AAC9H,6EAA6E;AAC7E,OAAO;AACP,+DAA+D;AAC/D,OAAO,sCAAsC,aAAa,OAAO,0BAA0B,0BAA0B,gFAAgF;AACrM,+IAA+I;AAC/I,OAAO,oCAAoC,aAAa,OAAO,4BAA4B,4CAA4C,OAAO;AAC9I;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,gDAAgD,sCAAsC;AACtF,6EAA6E;AAC7E,OAAO;AACP,+DAA+D;AAC/D,OAAO,sCAAsC,aAAa,OAAO,0BAA0B,0BAA0B;AACrH,+IAA+I;AAC/I,OAAO,oCAAoC,aAAa,OAAO,4BAA4B,4CAA4C,OAAO;AAC9I;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,gDAAgD,sCAAsC,sCAAsC,wCAAwC;AACpK,6EAA6E;AAC7E,OAAO;AACP,+DAA+D;AAC/D,OAAO,sCAAsC,aAAa,OAAO,0BAA0B,uDAAuD;AAClJ,sHAAsH;AACtH,OAAO,0CAA0C,aAAa,OAAO,4BAA4B,mFAAmF;AACpL,gJAAgJ;AAChJ,OAAO,8CAA8C,aAAa,OAAO,8BAA8B,gDAAgD,SAAS,OAAO;AACvK;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA,4BAA4B;AAC5B;AACA,OAAO,8BAA8B;AACrC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACtlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;ACfA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB,uBAAuB,+BAA+B;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT,wBAAwB;AACxB,OAAO;;;AAGP,sBAAsB,2BAA2B;AACjD;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,8BAA8B;AAC9B,OAAO;AACP;AACA;AACA,sBAAsB;AACtB,kEAAkE;AAClE,OAAO;AACP;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA,uDAAuD,8BAA8B,iCAAiC;AACtH;AACA,sBAAsB;AACtB,OAAO;AACP;;AAEA;AACA,0CAA0C;AAC1C;;AAEA,0DAA0D,oCAAoC,8BAA8B;;AAE5H;AACA,gEAAgE;AAChE;;AAEA;AACA,sDAAsD;AACtD,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,cAAc,OAAO;AACvD;AACA;AACA,sBAAsB;AACtB;AACA,oBAAoB,OAAO;AAC3B,yBAAyB;AACzB,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,cAAc,OAAO;AACvD;AACA;AACA;AACA,sBAAsB;AACtB,yBAAyB;AACzB,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA,qCAAqC;;AAErC,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA,OAAO;AACP,sBAAsB;;AAEtB,yBAAyB,yBAAyB;AAClD;AACA;;AAEA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,uBAAuB;AACvB;AACA,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB,qBAAqB,kBAAkB;AACvC;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,kBAAkB,MAAM;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP,oEAAoE;;AAEpE;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA,OAAO;;;AAGP,gCAAgC;;AAEhC;AACA,6EAA6E;;AAE7E,qBAAqB,0BAA0B;AAC/C,wCAAwC;;AAExC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC/uBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,iBAAiB,mBAAO,CAAC,EAAI;;AAE7B,eAAe,mBAAO,CAAC,EAAkB;AACzC;;AAEA,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E,iDAAiD,sDAAsD,EAAE;AACzG;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;;AC7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,eAAe;;AAEf,kBAAkB;;AAElB;AACA;AACA,qCAAqC;;AAErC;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA,kBAAkB,GAAG;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,iBAAiB;;;AAGlB;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,E;;;;;;ACvMA;AACA;AACA,+b;;;;;;ACFA;AACA,qmF;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,QAAQ;AACxC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;;AAGH;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE,qDAAqD;;AAErD;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;;;AAGA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,EAAE;AACF;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;;AAEA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,QAAQ;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;;AAEA,+BAA+B,QAAQ;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA,CAAC;AACD;AACA;AACA,E;;;;;;;AC7TA,6DAAe,mBAAO,CAAC,CAAa;AACpC;;AAEA,gBAAgB,mBAAO,CAAC,EAA0B;AAClD;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;ACtNA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;AChBA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAW;AAClC;;AAEA,gBAAgB,mBAAO,CAAC,EAAe;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA,gBAAgB,mBAAO,CAAC,GAAyB;AACjD;;AAEA,gBAAgB,mBAAO,CAAC,GAA4B;AACpD;;AAEA,gBAAgB,mBAAO,CAAC,GAA4B;AACpD;;AAEA,gBAAgB,mBAAO,CAAC,GAAyB;AACjD;;AAEA,gBAAgB,mBAAO,CAAC,GAA4B;AACpD;;AAEA,gBAAgB,mBAAO,CAAC,GAA4B;AACpD;;AAEA,iBAAiB,mBAAO,CAAC,GAAyB;AAClD;;AAEA,iBAAiB,mBAAO,CAAC,GAA4B;AACrD;;AAEA,iBAAiB,mBAAO,CAAC,GAA4B;AACrD;;AAEA,iBAAiB,mBAAO,CAAC,CAAiB;AAC1C;;AAEA,iBAAiB,mBAAO,CAAC,GAAoB;AAC7C;;AAEA,iBAAiB,mBAAO,CAAC,GAAoB;AAC7C;;AAEA,iBAAiB,mBAAO,CAAC,GAA4B;AACrD;;AAEA,iBAAiB,mBAAO,CAAC,GAA+B;AACxD;;AAEA,iBAAiB,mBAAO,CAAC,GAA+B;AACxD;;AAEA,iBAAiB,mBAAO,CAAC,EAAoB;AAC7C;;AAEA,iBAAiB,mBAAO,CAAC,GAAuB;AAChD;;AAEA,iBAAiB,mBAAO,CAAC,GAAuB;AAChD;;AAEA,iBAAiB,mBAAO,CAAC,GAAqB;AAC9C;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,kBAAkB;AAClB;;AAEA,GAAG;AACH;AACA;AACA,qDAAqD,iBAAiB,OAAO;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yEAAyE;;AAEzE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA,wCAAwC;;AAExC;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA,sCAAsC;;AAEtC;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA,4CAA4C;;AAE5C;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA,iDAAiD;;AAEjD;AACA;AACA,mDAAmD;AACnD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AC1qCA,eAAe,mBAAO,CAAC,GAAY;AACnC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2DAA2D;AAC1G;AACA,SAAS;AACT;AACA,iKAAiK;AACjK;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA;AACA,oFAAoF;AACpF,OAAO;AACP,yCAAyC;AACzC;AACA,KAAK;AACL;AACA,qBAAqB,mCAAmC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,uGAAuG;AACvG;;AAEA;AACA;AACA;AACA,GAAG,kBAAkB;AACrB;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB,oLAAoL;AAClO;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,4DAA4D,yMAAyM;AACrQ;;AAEA,uBAAuB;AACvB;;AAEA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA,mDAAmD;AACnD;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA,GAAG;AACH,qCAAqC,WAAW,qBAAqB,YAAY,wIAAwI;AACzN;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,iBAAiB,uDAAuD,KAAK;AAC7E;;AAEA;AACA;AACA,E;;;;;;ACrTA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;;AAEA,+CAA+C;AAC/C;AACA,GAAG;AACH;AACA;AACA,kFAAkF;AAClF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,yEAAyE;AACzE;;AAEA,qEAAqE;AACrE;;AAEA,gDAAgD;AAChD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AChEA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,GAAG;AACH;AACA;AACA;AACA,6EAA6E;AAC7E;;AAEA,8CAA8C;AAC9C;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAc;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACvDA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AChEA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAmC;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACrDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACrDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mGAAmG;AACnG;;AAEA,+CAA+C;AAC/C;AACA,GAAG;AACH;AACA;AACA,kFAAkF;AAClF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yHAAyH;AACzH;;AAEA,+CAA+C;AAC/C;AACA,GAAG;AACH;AACA;AACA,kFAAkF;AAClF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+IAA+I;AAC/I;;AAEA,+CAA+C;AAC/C;AACA,GAAG;AACH;AACA;AACA,kFAAkF;AAClF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACzDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAkB;AACzC;;AAEA,gBAAgB,mBAAO,CAAC,EAAiB;AACzC;;AAEA,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA,gBAAgB,mBAAO,CAAC,GAAmB;AAC3C;;AAEA,gBAAgB,mBAAO,CAAC,GAAiB;AACzC;;AAEA,gBAAgB,mBAAO,CAAC,GAAqB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,4BAA4B;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;AACA;;AAEA;AACA,wBAAwB,0BAA0B;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;;AAE3E;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA,4CAA4C;;AAE5C;AACA;AACA,8CAA8C;AAC9C;AACA,OAAO;AACP;AACA;AACA,4CAA4C;;AAE5C;AACA,6CAA6C;;AAE7C;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACrvBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5EA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAiC;AACzD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;;AAEnD;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC5EA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAwC;AAChE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACxDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAwC;AAChE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA4C;AACpE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACvDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA4C;AACpE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACvDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA4C;AACpE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACvDA,eAAe,mBAAO,CAAC,EAAO;AAC9B;;AAEA,gBAAgB,mBAAO,CAAC,GAAS;AACjC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA,gBAAgB,mBAAO,CAAC,EAAS;AACjC;AACA;;AAEA,gBAAgB,mBAAO,CAAC,EAAW;AACnC;;AAEA,gBAAgB,mBAAO,CAAC,EAA4B;AACpD;;AAEA,gBAAgB,mBAAO,CAAC,EAAyB;AACjD;;AAEA,gBAAgB,mBAAO,CAAC,EAA6B;AACrD;;AAEA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C;;AAEA,iBAAiB,mBAAO,CAAC,EAA8B;AACvD;;AAEA,iBAAiB,mBAAO,CAAC,EAAgC;AACzD;;AAEA,iBAAiB,mBAAO,CAAC,EAAyB;AAClD;;AAEA,iBAAiB,mBAAO,CAAC,EAAiC;AAC1D;;AAEA,iBAAiB,mBAAO,CAAC,EAA0B;AACnD;;AAEA,iBAAiB,mBAAO,CAAC,EAAqB;AAC9C;;AAEA,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACnEA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;;AAEA,mBAAmB,mBAAmB;AACtC;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;;AAElC,8BAA8B;;AAE9B;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA,sDAAsD;;AAEtD,kEAAkE;;AAElE,2EAA2E;;AAE3E;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;AC7UA;AACA;AACA;;AAEA,iC;;;;;;ACJA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,+BAA+B;AAC5E;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA,uC;;;;;;AC1BA;AACA;AACA;;AAEA,kC;;;;;;ACJA,wBAAwB,2EAA2E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,8HAA8H,GAAG,EAAE,sBAAsB;;AAEnW;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;AChBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wC;;;;;;ACRA,qBAAqB,mBAAO,CAAC,CAAkB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gC;;;;;;ACXA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;ACTA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACvOA,eAAe,mBAAO,CAAC,CAAa;AACpC;;AAEA,gBAAgB,mBAAO,CAAC,EAAa;AACrC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,6BAA6B;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B,YAAY,8FAA8F,6EAA6E;AAC5O,iGAAiG,iBAAiB;;AAElH;AACA,iIAAiI;AACjI,oIAAoI;AACpI;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,oEAAoE;AACpE;;AAEA;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,8BAA8B,+DAA+D,oCAAoC,gCAAgC,gEAAgE,OAAO,+BAA+B,KAAK,gCAAgC,2CAA2C,eAAe,yCAAyC,EAAE,0DAA0D,GAAG;AAC9c;;AAEA;AACA;AACA,E;;;;;;ACzIA;AACA,mBAAmB,mBAAO,CAAC,EAAgC;AAC3D,CAAC;AACD,mBAAmB,mBAAO,CAAC,EAA6B;AACxD,C;;;;;;ACJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,+B;;;;;;ACtEA,WAAW,mBAAO,CAAC,EAAa;;AAEhC,eAAe,mBAAO,CAAC,EAA4B;AACnD;;AAEA,gBAAgB,mBAAO,CAAC,EAA2B;AACnD;AACA;;AAEA,gBAAgB,mBAAO,CAAC,GAAsB;AAC9C;;AAEA,gBAAgB,mBAAO,CAAC,GAA0B;AAClD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2MAA2M;;AAE3M;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA,GAAG;;;AAGH;AACA;AACA;AACA,uEAAuE;;AAEvE;AACA,yBAAyB;;AAEzB;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA,+B;;;;;;AC/GA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;ACnBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,WAAW,mBAAO,CAAC,EAAa;;AAEhC,eAAe,mBAAO,CAAC,EAAuB;;AAE9C,uBAAuB,mBAAO,CAAC,EAAoB;;AAEnD,eAAe,mBAAO,CAAC,CAAa;AACpC;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,EAAqC;AAC7D;;AAEA,gBAAgB,mBAAO,CAAC,EAAqC;AAC7D;;AAEA,gBAAgB,mBAAO,CAAC,EAAgC;AACxD;;AAEA,gBAAgB,mBAAO,CAAC,EAAsC;AAC9D;;AAEA,gBAAgB,mBAAO,CAAC,EAA4C;AACpE;;AAEA,gBAAgB,mBAAO,CAAC,EAAiC;AACzD;;AAEA,gBAAgB,mBAAO,CAAC,EAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,GAAqB;AAC7C;;AAEA,iBAAiB,mBAAO,CAAC,GAAqB;AAC9C;;AAEA,iBAAiB,mBAAO,CAAC,GAAgB;AACzC;;AAEA,iBAAiB,mBAAO,CAAC,GAAgC;AACzD;;AAEA,iBAAiB,mBAAO,CAAC,GAAiB;AAC1C;;AAEA,iBAAiB,mBAAO,CAAC,GAAsB;AAC/C;;AAEA,iBAAiB,mBAAO,CAAC,GAAgB;AACzC;;AAEA,iBAAiB,mBAAO,CAAC,GAAiC;AAC1D;;AAEA,iBAAiB,mBAAO,CAAC,GAAiB;AAC1C;;AAEA,iBAAiB,mBAAO,CAAC,EAA0B;AACnD,2DAA2D;;;AAG3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,2BAA2B,qBAAqB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;AACA,OAAO;;;AAGP,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,kBAAkB;AACzC;AACA;;AAEA;;AAEA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA,OAAO;;;AAGP,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,+CAA+C;;;AAG/C,qBAAqB,wBAAwB;AAC7C;AACA,OAAO;;;AAGP;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,oLAAoL;;;AAGpL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,yBAAyB,wBAAwB;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,0BAA0B;AACjD;;AAEA;AACA;;AAEA,uBAAuB,0BAA0B;AACjD;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAqE;;AAErE,4GAA4G;AAC5G;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qGAAqG;AACrG;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,qDAAqD;;;AAGrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,gCAAgC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP;;AAEA,qBAAqB,+BAA+B;AACpD;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,kDAAkD;AAClD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B,0BAA0B;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;;AAEnC;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;;AAEA,0BAA0B,oBAAoB;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,wBAAwB;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yBAAyB,8BAA8B;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE;;AAEpE;AACA;AACA,+BAA+B;AAC/B;AACA;;AAEA;;AAEA,6BAA6B,iCAAiC;AAC9D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,2FAA2F;AAC3F;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,OAAO;AACP,0BAA0B,yBAAyB;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,yBAAyB,aAAa;AACtC,8BAA8B,eAAe;AAC7C,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP,sJAAsJ;;;AAGtJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,OAAO;;;AAGP,oJAAoJ;;;AAGpJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,4CAA4C;AAC5C;AACA,GAAG;AACH;AACA,+CAA+C;AAC/C;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,qCAAqC;AAC5D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,qCAAqC;AAC5D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yCAAyC;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yCAAyC;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yCAAyC;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yCAAyC;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yCAAyC;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yCAAyC;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA,E;;;;;;ACphIA,eAAe,mBAAO,CAAC,EAAS;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;ACVA;;AAEA,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,gBAAgB,mBAAO,CAAC,EAAiB;AACzC,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,oBAAoB,mBAAO,CAAC,EAAsB;AAClD,oBAAoB,mBAAO,CAAC,EAAsB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH,uBAAuB;AACvB;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;ACvZA,6PAA6P,KAAK,KAAK,G;;;;;;ACAvQ,WAAW,mBAAO,CAAC,EAAY;;AAE/B,+sC;;;;;;ACFA;AACA,WAAW,mBAAO,CAAC,EAAY,EAAE;AACjC;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA,4iB;;;;;;;;;;;;ACVA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,EAAI;AACrB,WAAW,mBAAO,CAAC,EAAM;AACzB,oBAAoB,mBAAO,CAAC,EAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,CAAC;AACD;AACA,SAAS,uEAAW;AACpB,YAAY,uEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yPAAyP,SAAS,EAAE,SAAS,EAAE;AAC/Q;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;;;AAGH;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH,oBAAoB,KAAyC,GAAG,OAAuB,GAAG,SAAO;AACjG;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,OAAO;AACf;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA,kCAAkC,OAAO;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA,cAAc;;AAEd;AACA,kCAAkC;;AAElC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D;AAC7D;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,E;;;;;;;;;;;;;ACtLA;AACA;AACA;AACA,UAAU,mBAAO,CAAC,EAAM;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;;AAGA,wCAAwC;;AAExC;AACA;AACA;;AAEA,2BAA2B;AAC3B,GAAG;AACH;AACA;AACA;;AAEA;AACA,C;;;;;;ACxDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,eAAe,mBAAO,CAAC,CAAc;AACrC;;AAEA,gBAAgB,mBAAO,CAAC,EAAU;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;;AAEA,0BAA0B,oBAAoB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;ACnRA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACa;;AAEb,aAAa,mBAAO,CAAC,EAAW;;AAEhC,cAAc,mBAAO,CAAC,EAAS;;AAE/B,cAAc,mBAAO,CAAC,EAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,iBAAiB;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD,EAAE;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;;;AAGA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA,2BAA2B;;AAE3B;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA,uBAAuB;AACvB,GAAG;AACH,4BAA4B;AAC5B,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,qBAAqB;;AAErB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,wBAAwB,QAAQ;AAChC;;AAEA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,GAAG;AACH;AACA;AACA,eAAe;AACf,GAAG;AACH;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA,yDAAyD;AACzD,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;;AAE3D;AACA,yDAAyD;;AAEzD;AACA;AACA;;AAEA;AACA,+DAA+D;;AAE/D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA,EAAE;AACF;;;AAGA;;AAEA;AACA;AACA,uDAAuD;;AAEvD,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA,KAAK;AACL;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB;AACrB,C;;;;;;;AC5zDA,MAAM;;AAEN;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,4CAA4C;;;AAG5C,mB;;;;;;;ACjBa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,SAAS;AAC3C;AACA;AACA,CAAC;AACD;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA,6BAA6B;AAC7B;;AAEA,0CAA0C,UAAU;AACpD;AACA,GAAG;;;AAGH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,C;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;;AAEA,QAAQ,UAAU;;AAElB;AACA,E;;;;;;ACvFA,iBAAiB;;AAEjB;AACA;AACA,E;;;;;;ACJA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;ACtBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;ACtBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;ACjBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;ACjBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,eAAe,mBAAO,CAAC,CAAc;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;ACvFA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;ACdA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAY;AACnC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC3JA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAY;AACnC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACjDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;ACdA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAY;AACnC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACpDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAY;AACnC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACnDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAa;AACpC;;AAEA,gBAAgB,mBAAO,CAAC,EAAY;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACnDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;ACdA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAY;AACnC;;AAEA,gBAAgB,mBAAO,CAAC,CAAa;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACrDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;AChBA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,eAAe,mBAAO,CAAC,CAAa;AACpC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;AC3BA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,CAAS;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAY;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAY;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAY;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,0DAA0D,8CAA8C,gGAAgG,4BAA4B,oEAAoE,GAAG,yBAAyB,kBAAkB,+CAA+C,4CAA4C,GAAG,6BAA6B,kEAAkE,sCAAsC,sCAAsC,wCAAwC,sCAAsC,mDAAmD,6CAA6C,kBAAkB,GAAG;AAClyB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACtBA;AACA,iCAAiC,+BAA+B,6BAA6B,oCAAoC,sCAAsC,gBAAgB,gBAAgB,2BAA2B,wBAAwB,0BAA0B,GAAG,0BAA0B,0BAA0B,GAAG,6BAA6B,0BAA0B,2BAA2B,GAAG,iCAAiC,mBAAmB,cAAc,uBAAuB,eAAe,OAAO,mDAAmD,oBAAoB,OAAO,gBAAgB,gBAAgB,gBAAgB,6BAA6B,cAAc,OAAO,KAAK,kBAAkB,GAAG,gCAAgC,mBAAmB,cAAc,uBAAuB,eAAe,OAAO,mDAAmD,oBAAoB,OAAO,gBAAgB,gBAAgB,gBAAgB,6BAA6B,cAAc,OAAO,KAAK,kBAAkB,GAAG,gCAAgC,mBAAmB,cAAc,mBAAmB,eAAe,OAAO,mDAAmD,oBAAoB,OAAO,gBAAgB,gBAAgB,gBAAgB,6BAA6B,cAAc,OAAO,KAAK,kBAAkB,GAAG,yBAAyB,mBAAmB,cAAc,uBAAuB,eAAe,OAAO,4BAA4B,oBAAoB,WAAW,gBAAgB,gBAAgB,KAAK,kBAAkB,GAAG,kDAAkD,6BAA6B,mBAAmB,eAAe,OAAO,0BAA0B,cAAc,OAAO,oBAAoB,KAAK,mBAAmB,eAAe,OAAO,uBAAuB,cAAc,OAAO,aAAa,KAAK,qBAAqB,oBAAoB,mBAAmB,eAAe,OAAO,+BAA+B,2BAA2B,mBAAmB,EAAE,qBAAqB,mBAAmB,KAAK,kBAAkB,GAAG,sDAAsD,4DAA4D,GAAG,qDAAqD,6BAA6B,mBAAmB,eAAe,OAAO,0BAA0B,cAAc,OAAO,oBAAoB,KAAK,mBAAmB,eAAe,OAAO,uBAAuB,cAAc,OAAO,aAAa,KAAK,mBAAmB,oBAAoB,mBAAmB,eAAe,OAAO,+BAA+B,2BAA2B,mBAAmB,EAAE,qBAAqB,mBAAmB,KAAK,kBAAkB,GAAG,sCAAsC,gCAAgC,4CAA4C,GAAG,sCAAsC,gCAAgC,4CAA4C,GAAG,qCAAqC,gCAAgC,4CAA4C,GAAG,wCAAwC,iCAAiC,oDAAoD,GAAG,kCAAkC,gCAAgC,GAAG,kCAAkC,uMAAuM,2DAA2D,+EAA+E,mDAAmD,4BAA4B,mBAAmB,gBAAgB,4CAA4C,4CAA4C,oEAAoE,sCAAsC,yCAAyC,sEAAsE,iCAAiC,eAAe,GAAG,2CAA2C,uCAAuC,iEAAiE,iEAAiE,eAAe,GAAG,0CAA0C,uCAAuC,6CAA6C,6CAA6C,6CAA6C,6CAA6C,eAAe,GAAG,kCAAkC,qBAAqB,qCAAqC,oCAAoC,2CAA2C,yCAAyC,kEAAkE,2CAA2C,yCAAyC,kCAAkC,oEAAoE,yBAAyB,yBAAyB,qCAAqC,iBAAiB,GAAG,yFAAyF,8CAA8C,qBAAqB,mBAAmB,iBAAiB,cAAc,8BAA8B,uBAAuB,oCAAoC,+CAA+C,8BAA8B,6BAA6B,qCAAqC,uCAAuC,oCAAoC,yCAAyC,2CAA2C,yCAAyC,yCAAyC,2CAA2C,2CAA2C,wBAAwB,GAAG,mCAAmC,iBAAiB,4CAA4C,6CAA6C,wCAAwC,gCAAgC,2CAA2C,0BAA0B,GAAG,kFAAkF,kDAAkD,sBAAsB,wEAAwE,oDAAoD,2BAA2B,GAAG,kFAAkF,kDAAkD,0BAA0B,wEAAwE,qEAAqE,kCAAkC,GAAG,iFAAiF,kDAAkD,0BAA0B,wEAAwE,qEAAqE,iCAAiC,GAAG,iGAAiG,kDAAkD,uCAAuC,sBAAsB,sBAAsB,wEAAwE,oDAAoD,qCAAqC,qCAAqC,qCAAqC,qCAAqC,eAAe,GAAG,sFAAsF,kDAAkD,sBAAsB,wEAAwE,8CAA8C,GAAG,kGAAkG,4DAA4D,qBAAqB,GAAG,gGAAgG,4DAA4D,sCAAsC,GAAG,kGAAkG,sDAAsD,uCAAuC,sBAAsB,sBAAsB,wEAAwE,oDAAoD,oDAAoD,oDAAoD,0BAA0B,GAAG,gGAAgG,4DAA4D,iDAAiD,GAAG,kGAAkG,6DAA6D,qCAAqC,oDAAoD,wCAAwC,gDAAgD,2EAA2E,gCAAgC,sBAAsB,KAAK,8BAA8B,sBAAsB,KAAK,OAAO,cAAc,+BAA+B,kBAAkB,gBAAgB,OAAO,qEAAqE,8BAA8B,4CAA4C,OAAO,OAAO,4CAA4C,OAAO,KAAK,GAAG,gGAAgG,qDAAqD,GAAG,kGAAkG,kDAAkD,uCAAuC,sBAAsB,wEAAwE,oDAAoD,oDAAoD,GAAG,qBAAqB,kDAAkD,gCAAgC,GAAG,2CAA2C,qBAAqB,GAAG,iCAAiC,8CAA8C,GAAG,uBAAuB,qBAAqB,aAAa,qBAAqB,qGAAqG,oBAAoB,GAAG;AACxtV;AACA;AACA,E;;;;;;ACJA;AACA,iDAAiD,6BAA6B,oCAAoC,wBAAwB,2BAA2B,2BAA2B,qBAAqB,qBAAqB,kEAAkE,0BAA0B,GAAG;AACzU;AACA;AACA,E;;;;;;ACJA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,kBAAkB;AAC7B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oJAAoJ;AACpJ,aAAa;AACb,gFAAgF,IAAI;AACpF;;AAEA;;AAEA;AACA;AACA;AACA,qJAAqJ;AACrJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,2KAA2K;AAC3K;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,yHAAyH;;AAEzH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;;AAEA;AACA;AACA,+FAA+F;AAC/F;;AAEA;AACA;AACA;AACA,kLAAkL;AAClL;AACA;AACA;;AAEA;AACA;AACA,kFAAkF;AAClF,aAAa;AACb,kLAAkL;AAClL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4FAA4F;AAC5F;AACA;AACA;;AAEA;AACA;AACA;AACA,+LAA+L;AAC/L,qDAAqD,uCAAuC,UAAU;AACtG,iMAAiM;AACjM,uCAAuC;AACvC,6EAA6E;AAC7E,qIAAqI;AACrI,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,uEAAuE,mEAAmE,oEAAoE,sCAAsC,kBAAkB,OAAO,+CAA+C,wEAAwE,qFAAqF,0BAA0B,wBAAwB,sBAAsB,sBAAsB,IAAI;AACzmB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,aAAa;AACb;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;;AAEA;AACA;AACA,+FAA+F;AAC/F;;AAEA;AACA;AACA;AACA,kLAAkL;AAClL;AACA,aAAa;AACb,kLAAkL;AAClL;AACA;;AAEA;;AAEA;AACA;AACA,kFAAkF;AAClF,aAAa;AACb,kLAAkL;AAClL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;ACtdA,sBAAsB,mBAAO,CAAC,EAAyG;;AAEvI;;AAEA,eAAe,mBAAO,CAAC,EAAwB;AAC/C;;AAEA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C;;AAEA,gBAAgB,mBAAO,CAAC,EAAwB;AAChD;;AAEA,gBAAgB,mBAAO,CAAC,EAA2B;AACnD;;AAEA,gBAAgB,mBAAO,CAAC,EAAmC;AAC3D;;AAEA,gBAAgB,mBAAO,CAAC,EAA6B;AACrD;;AAEA,gBAAgB,mBAAO,CAAC,GAAqC;AAC7D;;AAEA,gBAAgB,mBAAO,CAAC,EAA+B;AACvD;;AAEA,gBAAgB,mBAAO,CAAC,EAAuC;AAC/D;;AAEA,iBAAiB,mBAAO,CAAC,EAAgD;AACzE;;AAEA,iBAAiB,mBAAO,CAAC,EAAwD;AACjF;;AAEA,iBAAiB,mBAAO,CAAC,EAA+B;AACxD;;AAEA,iBAAiB,mBAAO,CAAC,EAAuC;AAChE;;AAEA,iBAAiB,mBAAO,CAAC,EAA6B;AACtD;;AAEA,iBAAiB,mBAAO,CAAC,GAAqC;AAC9D;;AAEA,iBAAiB,mBAAO,CAAC,EAAiC;AAC1D;;AAEA,iBAAiB,mBAAO,CAAC,GAAyC;AAClE;;AAEA,iBAAiB,mBAAO,CAAC,EAAiC;AAC1D;;AAEA,iBAAiB,mBAAO,CAAC,GAAyC;AAClE;;AAEA,iBAAiB,mBAAO,CAAC,EAAiC;AAC1D;;AAEA,iBAAiB,mBAAO,CAAC,GAAyC;AAClE;;AAEA,iBAAiB,mBAAO,CAAC,EAA8B;AACvD;;AAEA,iBAAiB,mBAAO,CAAC,EAA8B;AACvD;;AAEA,iBAAiB,mBAAO,CAAC,EAA8B;AACvD;;AAEA,iBAAiB,mBAAO,CAAC,EAA+B;AACxD;;AAEA,iBAAiB,mBAAO,CAAC,EAAuC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;AC1NA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC9FA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAgB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC9DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAgB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACvDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAoB;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACpDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAoB;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACpDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAoB;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACpDA;AACA,kDAAkD,+BAA+B,6BAA6B,oCAAoC,0CAA0C,sCAAsC,gBAAgB,gBAAgB,sBAAsB,6BAA6B,0BAA0B,2BAA2B,GAAG,iCAAiC,mBAAmB,cAAc,uBAAuB,eAAe,OAAO,mDAAmD,oBAAoB,OAAO,gBAAgB,gBAAgB,gBAAgB,6BAA6B,cAAc,OAAO,KAAK,kBAAkB,GAAG,gCAAgC,mBAAmB,cAAc,uBAAuB,eAAe,OAAO,mDAAmD,oBAAoB,OAAO,gBAAgB,gBAAgB,gBAAgB,6BAA6B,cAAc,OAAO,KAAK,kBAAkB,GAAG,gCAAgC,mBAAmB,cAAc,mBAAmB,eAAe,OAAO,mDAAmD,oBAAoB,OAAO,gBAAgB,gBAAgB,gBAAgB,6BAA6B,cAAc,OAAO,KAAK,kBAAkB,GAAG,yBAAyB,mBAAmB,cAAc,uBAAuB,eAAe,OAAO,4BAA4B,oBAAoB,WAAW,gBAAgB,gBAAgB,KAAK,kBAAkB,GAAG,kDAAkD,6BAA6B,mBAAmB,eAAe,OAAO,0BAA0B,cAAc,OAAO,oBAAoB,KAAK,mBAAmB,eAAe,OAAO,uBAAuB,cAAc,OAAO,aAAa,KAAK,qBAAqB,oBAAoB,mBAAmB,eAAe,OAAO,+BAA+B,2BAA2B,mBAAmB,EAAE,qBAAqB,mBAAmB,KAAK,kBAAkB,GAAG,sDAAsD,4DAA4D,GAAG,qDAAqD,6BAA6B,mBAAmB,eAAe,OAAO,0BAA0B,cAAc,OAAO,oBAAoB,KAAK,mBAAmB,eAAe,OAAO,uBAAuB,cAAc,OAAO,aAAa,KAAK,mBAAmB,oBAAoB,mBAAmB,eAAe,OAAO,+BAA+B,2BAA2B,mBAAmB,EAAE,qBAAqB,mBAAmB,KAAK,kBAAkB,GAAG,sCAAsC,gCAAgC,4CAA4C,GAAG,sCAAsC,gCAAgC,4CAA4C,GAAG,qCAAqC,gCAAgC,4CAA4C,GAAG,wCAAwC,iCAAiC,oDAAoD,GAAG,kCAAkC,8BAA8B,GAAG,kCAAkC,uMAAuM,2DAA2D,+EAA+E,mDAAmD,4BAA4B,mBAAmB,gBAAgB,4CAA4C,4CAA4C,oEAAoE,sCAAsC,yCAAyC,sEAAsE,iCAAiC,eAAe,GAAG,2CAA2C,uCAAuC,qEAAqE,GAAG,0CAA0C,uCAAuC,kCAAkC,GAAG,kCAAkC,qBAAqB,qCAAqC,oCAAoC,2CAA2C,yCAAyC,kEAAkE,2CAA2C,yCAAyC,kCAAkC,oEAAoE,yBAAyB,yBAAyB,qCAAqC,iBAAiB,GAAG,yFAAyF,8CAA8C,qBAAqB,mBAAmB,iBAAiB,cAAc,8BAA8B,uBAAuB,oCAAoC,+CAA+C,8BAA8B,6BAA6B,qCAAqC,uCAAuC,oCAAoC,yCAAyC,2CAA2C,yCAAyC,yCAAyC,2CAA2C,2CAA2C,wBAAwB,GAAG,mCAAmC,iBAAiB,4CAA4C,6CAA6C,wCAAwC,gCAAgC,2CAA2C,0BAA0B,GAAG,kFAAkF,kDAAkD,sBAAsB,wEAAwE,kDAAkD,2BAA2B,GAAG,kFAAkF,sDAAsD,0BAA0B,wEAAwE,mEAAmE,kCAAkC,GAAG,iFAAiF,sDAAsD,0BAA0B,wEAAwE,mEAAmE,iCAAiC,GAAG,iGAAiG,sDAAsD,uCAAuC,sBAAsB,sBAAsB,wEAAwE,sBAAsB,kDAAkD,0BAA0B,GAAG,sFAAsF,kDAAkD,sBAAsB,wEAAwE,4CAA4C,GAAG,2FAA2F,kDAAkD,sBAAsB,wEAAwE,qDAAqD,GAAG,kGAAkG,4DAA4D,qBAAqB,GAAG,gGAAgG,4DAA4D,sCAAsC,GAAG,kGAAkG,kDAAkD,uCAAuC,sBAAsB,sBAAsB,wEAAwE,kDAAkD,oDAAoD,oDAAoD,0BAA0B,GAAG,gGAAgG,4DAA4D,iDAAiD,GAAG,kGAAkG,6DAA6D,qCAAqC,oDAAoD,wCAAwC,gDAAgD,yEAAyE,8BAA8B,sBAAsB,KAAK,8BAA8B,sBAAsB,KAAK,OAAO,cAAc,+BAA+B,kBAAkB,gBAAgB,OAAO,mEAAmE,8BAA8B,4CAA4C,OAAO,OAAO,4CAA4C,OAAO,KAAK,GAAG,gGAAgG,qDAAqD,GAAG,kGAAkG,kDAAkD,uCAAuC,sBAAsB,wEAAwE,kDAAkD,oDAAoD,GAAG,qBAAqB,kDAAkD,gCAAgC,GAAG,2CAA2C,qBAAqB,GAAG,uBAAuB,qBAAqB,aAAa,qBAAqB,qGAAqG,oBAAoB,GAAG;AACrgV;AACA;AACA,E;;;;;;ACJA;AACA,kEAAkE,6BAA6B,oCAAoC,iBAAiB,oBAAoB,uBAAuB,qBAAqB,qBAAqB,kEAAkE,0BAA0B,GAAG;AACxU;AACA;AACA,E;;;;;;ACJA,eAAe,mBAAO,CAAC,GAAwB;AAC/C;;AAEA,gBAAgB,mBAAO,CAAC,GAAsB;AAC9C;;AAEA,gBAAgB,mBAAO,CAAC,GAAwB;AAChD;;AAEA,gBAAgB,mBAAO,CAAC,GAA2B;AACnD;;AAEA,gBAAgB,mBAAO,CAAC,GAAmC;AAC3D;;AAEA,gBAAgB,mBAAO,CAAC,EAAiC;AACzD;;AAEA,gBAAgB,mBAAO,CAAC,GAAyC;AACjE;;AAEA,gBAAgB,mBAAO,CAAC,EAA6B;AACrD;;AAEA,gBAAgB,mBAAO,CAAC,GAAqC;AAC7D;;AAEA,iBAAiB,mBAAO,CAAC,GAA+B;AACxD;;AAEA,iBAAiB,mBAAO,CAAC,GAAuC;AAChE;;AAEA,iBAAiB,mBAAO,CAAC,GAAgD;AACzE;;AAEA,iBAAiB,mBAAO,CAAC,GAAwD;AACjF;;AAEA,iBAAiB,mBAAO,CAAC,GAA+B;AACxD;;AAEA,iBAAiB,mBAAO,CAAC,GAAuC;AAChE;;AAEA,iBAAiB,mBAAO,CAAC,EAA6B;AACtD;;AAEA,iBAAiB,mBAAO,CAAC,GAAqC;AAC9D;;AAEA,iBAAiB,mBAAO,CAAC,EAAiC;AAC1D;;AAEA,iBAAiB,mBAAO,CAAC,GAAyC;AAClE;;AAEA,iBAAiB,mBAAO,CAAC,EAAiC;AAC1D;;AAEA,iBAAiB,mBAAO,CAAC,GAAyC;AAClE;;AAEA,iBAAiB,mBAAO,CAAC,EAAiC;AAC1D;;AAEA,iBAAiB,mBAAO,CAAC,GAAyC;AAClE;;AAEA,iBAAiB,mBAAO,CAAC,GAA8B;AACvD;;AAEA,iBAAiB,mBAAO,CAAC,GAA8B;AACvD;;AAEA,iBAAiB,mBAAO,CAAC,GAA8B;AACvD;;AAEA,iBAAiB,mBAAO,CAAC,GAA+B;AACxD;;AAEA,iBAAiB,mBAAO,CAAC,GAAuC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;ACrOA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAmC;AAC1D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7BA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAiC;AACzD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AChCA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAmC;AAC3D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G;AAC5G;;AAEA,6EAA6E;AAC7E;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACrDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAsC;AAC9D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA8C;AACtE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAoB;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACnDA,qBAAqB,mBAAO,CAAC,EAAwG;;AAErI,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAyC;AACjE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC/DA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA0C;AAClE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkD;AAC1E;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA2D;AACnF;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAmE;AAC3F;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACzCA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA0C;AAClE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkD;AAC1E;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAyC;AACjE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACxDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA6C;AACrE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACrDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA6C;AACrE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACrDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,WAAW,mBAAO,CAAC,CAA8F;;AAEjH,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA6C;AACrE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;ACrDA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAyC;AAChE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7BA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAyC;AAChE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7BA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,EAAyC;AAChE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC7BA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAA0C;AAClE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,mBAAmB,mBAAO,CAAC,CAAsG;;AAEjI,iCAAiC,mBAAO,CAAC,CAAoH;;AAE7J,sBAAsB,mBAAO,CAAC,CAAyG;;AAEvI,gBAAgB,mBAAO,CAAC,CAAmG;;AAE3H,eAAe,mBAAO,CAAC,CAAgB;AACvC;;AAEA,gBAAgB,mBAAO,CAAC,EAAkD;AAC1E;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,E;;;;;;AC1CA,eAAe,mBAAO,CAAC,CAAS;AAChC;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;ACvHA,eAAe,mBAAO,CAAC,CAAS;AAChC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;AACA,8HAA8H,6DAA6D;AAC3L;;AAEA;AACA;AACA,E;;;;;;;;;;;;;ACjBe,QAASA,YAAT,CAAqBC,KAArB,CAAsC,CACnD,GAAIC,YAAW,CAAG,CAAlB,CACA,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,IAArB,CAA2BA,CAAC,EAA5B,CAAgC,CAC9B;AACAD,WAAW,EAAI,CAACD,KAAK,CAAC,KAAKG,MAAL,CAAYC,CAAb,CAAL,CAAuB,CAAxB,EAA6BF,CAA5C,CACD,CACD,MAAOD,YAAP,CACD,E;;ACJD,GAAMI,IAAW,CAAGC,IAApB,CACA,GAAMC,EAAC,CAAG,KAAV,CACA,GAAMC,IAAG,CAAGD,CAAZ,CAEA,GAAME,IAAG,CAAG,GAAIC,WAAJ,EAAZ,CACA,GAAMC,OAAM,CAAGF,GAAG,CACfG,YADY,CACCC,WADD,EAEZC,YAFY,CAEC,IAFD,EAGZC,WAHY,CAGA,IAHA,EAIZC,SAJY,CAIF,CAACT,CAAD,CAJE,CAAf,CAMA,GAAMP,MAAK,CAAG,GAAIiB,MAAJ,CAAUT,GAAV,EAAeU,IAAf,CAAoB,CAApB,EAAuBC,GAAvB,CAA2B,iBAAMC,KAAI,CAACC,MAAL,EAAN,EAA3B,CAAd,CAEAhB,GAAG,CAACiB,gBAAJ,CAAqB,SAArB,CAAgC,SAAAC,KAAK,CAAI,CACvCN,KAAK,CAAC,GAAD,CAAL,CACGC,IADH,CACQ,CADR,EAEGM,OAFH,CAEW,SAACC,CAAD,CAAIvB,CAAJ,CAAU,CACjBwB,OAAO,CAACC,GAAR,CAAYhB,MAAM,CAACX,KAAD,CAAlB,EACAK,GAAG,CAACuB,WAAJ,CAAgB,SAAhB,EACD,CALH,EAMD,CAPD,EASevB,yFAAf,E","file":"13f138e84d943dd2e02c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/javascript-gpgpu-demo/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 166);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar acorn = require('acorn');\n\nvar _require = require('./input'),\n    Input = _require.Input;\n\nvar _require2 = require('./texture'),\n    Texture = _require2.Texture;\n\nvar FUNCTION_NAME = /function ([^(]*)/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n *\n * @desc Various utility functions / snippets of code that GPU.JS uses internally.\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n */\n\nvar utils = {\n  /**\n   *\n   * @desc Gets the system endianness, and cache it\n   * @returns {String} 'LE' or 'BE' depending on system architecture\n   * Credit: https://gist.github.com/TooTallNate/4750953\n   */\n  systemEndianness: function systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness: function getSystemEndianness() {\n    var b = new ArrayBuffer(4);\n    var a = new Uint32Array(b);\n    var c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  /**\n   * @descReturn TRUE, on a JS function\n   * @param {Function} funcObj - Object to validate if its a function\n   * @returns  {Boolean} TRUE if the object is a JS function\n   */\n  isFunction: function isFunction(funcObj) {\n    return typeof funcObj === 'function';\n  },\n\n  /**\n   * @desc Return TRUE, on a valid JS function string\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {String} fn - String of JS function to validate\n   * @returns {Boolean} TRUE if the string passes basic validation\n   */\n  isFunctionString: function isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return fn.slice(0, 'function'.length).toLowerCase() === 'function';\n    }\n\n    return false;\n  },\n\n  /**\n   * @desc Return the function name from a JS function string\n   * @param {String} funcStr - String of JS function to validate\n   * @returns {String} Function name string (if found)\n   */\n  getFunctionNameFromString: function getFunctionNameFromString(funcStr) {\n    return FUNCTION_NAME.exec(funcStr)[1].trim();\n  },\n  getFunctionBodyFromString: function getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  /**\n   * @desc Return list of argument names extracted from a javascript function\n   * @param {String} fn - String of JS function to validate\n   * @returns {String[]}  Array representing all the parameter names\n   */\n  getArgumentNamesFromString: function getArgumentNamesFromString(fn) {\n    var fnStr = fn.replace(STRIP_COMMENTS, '');\n    var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n\n    if (result === null) {\n      result = [];\n    }\n\n    return result;\n  },\n\n  /**\n   * @desc Returns a clone\n   * @param {Object} obj - Object to clone\n   * @returns {Object|Array} Cloned object\n   */\n  clone: function clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n    var temp = obj.constructor(); // changed\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  /**\n   * @desc Checks if is an array or Array-like object\n   * @param {Object} array - The argument object to check if is array\n   * @returns {Boolean}  true if is array or Array-like object\n   */\n  isArray: function isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  /**\n   * @desc Evaluate the argument type, to apply respective logic for it\n   * @param {Object} value - The argument object to evaluate type\n   * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\n   */\n  getVariableType: function getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n\n        return 'Float';\n\n      case Texture:\n        return value.type;\n\n      case Input:\n        return 'Input';\n    }\n\n    if (value.nodeName === 'IMG') {\n      return 'HTMLImage';\n    } else {\n      if (value.hasOwnProperty('type')) {\n        return value.type;\n      }\n\n      return 'Unknown';\n    }\n  },\n  getKernelTextureSize: function getKernelTextureSize(settings, dimensions) {\n    var _dimensions = _slicedToArray(dimensions, 3),\n        w = _dimensions[0],\n        h = _dimensions[1],\n        d = _dimensions[2];\n\n    var texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    } // if given dimensions == a 2d image\n\n\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  /**\n   *\n   * @param {Number} length\n   * @returns {TextureDimensions}\n   */\n  closestSquareDimensions: function closestSquareDimensions(length) {\n    var sqrt = Math.sqrt(length);\n    var high = Math.ceil(sqrt);\n    var low = Math.floor(sqrt);\n\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  /**\n   * A texture takes up four\n   * @param {OutputDimensions} dimensions\n   * @param {Number} bitRatio\n   * @returns {TextureDimensions}\n   */\n  getMemoryOptimizedFloatTextureSize: function getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    var totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    var texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  /**\n   *\n   * @param dimensions\n   * @param bitRatio\n   * @returns {*|TextureDimensions}\n   */\n  getMemoryOptimizedPackedTextureSize: function getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    var _dimensions2 = _slicedToArray(dimensions, 3),\n        w = _dimensions2[0],\n        h = _dimensions2[1],\n        d = _dimensions2[2];\n\n    var totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    var texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n  roundTo: function roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n\n  /**\n   * @desc Return the dimension of an array.\n   * @param {Array|String|Texture|Input} x - The array\n   * @param {Boolean} [pad] - To include padding in the dimension calculation\n   * @returns {OutputDimensions}\n   */\n  getDimensions: function getDimensions(x, pad) {\n    var ret;\n\n    if (utils.isArray(x)) {\n      var dim = [];\n      var temp = x;\n\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(\"Unknown dimensions of \".concat(x));\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  /**\n   * Puts a nested 2d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten2dArrayTo: function flatten2dArrayTo(array, target) {\n    var offset = 0;\n\n    for (var y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  /**\n   * Puts a nested 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten3dArrayTo: function flatten3dArrayTo(array, target) {\n    var offset = 0;\n\n    for (var z = 0; z < array.length; z++) {\n      for (var y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  /**\n   * Puts a nested 4d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten4dArrayTo: function flatten4dArrayTo(array, target) {\n    var offset = 0;\n\n    for (var l = 0; l < array.length; l++) {\n      for (var z = 0; z < array[l].length; z++) {\n        for (var y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  /**\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\n   * @param {Float32Array|Uint16Array|Uint8Array} array\n   * @param {Float32Array} target\n   */\n  flattenTo: function flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  /**\n   *\n   * @desc Splits an array into smaller arrays.\n   * Number of elements in one small chunk is given by `part`\n   *\n   * @param {Number[]} array - The array to split into chunks\n   * @param {Number} part - elements in one chunk\n   *\n   * @returns {Number[]} An array of smaller chunks\n   */\n  splitArray: function splitArray(array, part) {\n    var result = [];\n\n    for (var i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n\n    return result;\n  },\n  getAstString: function getAstString(source, ast) {\n    var lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    var start = ast.loc.start;\n    var end = ast.loc.end;\n    var result = [];\n\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n\n      for (var i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n\n    return result.join('\\n');\n  },\n  allPropertiesOf: function allPropertiesOf(obj) {\n    var props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  /**\n   * @param {Array} lines - An Array of strings\n   * @returns {String} Single combined String, separated by *\\n*\n   */\n  linesToString: function linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated: function warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(\"You are using a deprecated \".concat(type, \" \\\"\").concat(oldName, \"\\\". It has been replaced with \\\"\").concat(newName, \"\\\". Fixing, but please upgrade as it will soon be removed.\"));\n    } else {\n      console.warn(\"You are using a deprecated \".concat(type, \" \\\"\").concat(oldName, \"\\\". It has been removed. Fixing, but please upgrade as it will soon be removed.\"));\n    }\n  },\n\n  /**\n   *\n   * @param {String|Function} source\n   * @param {IFunctionSettings} [settings]\n   * @returns {IFunction}\n   */\n  functionToIFunction: function functionToIFunction(source, settings) {\n    settings = settings || {};\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    var sourceString = typeof source === 'string' ? source : source.toString();\n    var argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString).map(function (name) {\n        return settings.argumentTypes[name];\n      }) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      source: sourceString,\n      argumentTypes: argumentTypes,\n      returnType: settings.returnType || null\n    };\n  },\n  flipPixels: function flipPixels(pixels, width, height) {\n    // https://stackoverflow.com/a/41973289/1324039\n    var halfHeight = height / 2 | 0; // the | 0 keeps the result an int\n\n    var bytesPerRow = width * 4; // make a temp buffer to hold one row\n\n    var temp = new Uint8ClampedArray(width * 4);\n    var result = pixels.slice(0);\n\n    for (var y = 0; y < halfHeight; ++y) {\n      var topOffset = y * bytesPerRow;\n      var bottomOffset = (height - y - 1) * bytesPerRow; // make copy of a row on the top half\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow)); // copy a row from the bottom half to the top\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow); // copy the copy of the top half row to the bottom half\n\n      result.set(temp, bottomOffset);\n    }\n\n    return result;\n  },\n  erectPackedFloat: function erectPackedFloat(array, width) {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: function erect2DPackedFloat(array, width, height) {\n    var yResults = new Array(height);\n\n    for (var y = 0; y < height; y++) {\n      var xStart = y * width;\n      var xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n\n    return yResults;\n  },\n  erect3DPackedFloat: function erect3DPackedFloat(array, width, height, depth) {\n    var zResults = new Array(depth);\n\n    for (var z = 0; z < depth; z++) {\n      var yResults = new Array(height);\n\n      for (var y = 0; y < height; y++) {\n        var xStart = z * height * width + y * width;\n        var xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n\n      zResults[z] = yResults;\n    }\n\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: function erectMemoryOptimizedFloat(array, width) {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: function erectMemoryOptimized2DFloat(array, width, height) {\n    var yResults = new Array(height);\n\n    for (var y = 0; y < height; y++) {\n      var offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: function erectMemoryOptimized3DFloat(array, width, height, depth) {\n    var zResults = new Array(depth);\n\n    for (var z = 0; z < depth; z++) {\n      var yResults = new Array(height);\n\n      for (var y = 0; y < height; y++) {\n        var offset = z * height * width + y * width;\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n\n      zResults[z] = yResults;\n    }\n\n    return zResults;\n  },\n  erectFloat: function erectFloat(array, width) {\n    var xResults = new Float32Array(width);\n    var i = 0;\n\n    for (var x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n\n    return xResults;\n  },\n  erect2DFloat: function erect2DFloat(array, width, height) {\n    var yResults = new Array(height);\n    var i = 0;\n\n    for (var y = 0; y < height; y++) {\n      var xResults = new Float32Array(width);\n\n      for (var x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n\n      yResults[y] = xResults;\n    }\n\n    return yResults;\n  },\n  erect3DFloat: function erect3DFloat(array, width, height, depth) {\n    var zResults = new Array(depth);\n    var i = 0;\n\n    for (var z = 0; z < depth; z++) {\n      var yResults = new Array(height);\n\n      for (var y = 0; y < height; y++) {\n        var xResults = new Float32Array(width);\n\n        for (var x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n\n        yResults[y] = xResults;\n      }\n\n      zResults[z] = yResults;\n    }\n\n    return zResults;\n  },\n  erectArray2: function erectArray2(array, width) {\n    var xResults = new Array(width);\n    var xResultsMax = width * 4;\n    var i = 0;\n\n    for (var x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n\n    return xResults;\n  },\n  erect2DArray2: function erect2DArray2(array, width, height) {\n    var yResults = new Array(height);\n    var XResultsMax = width * 4;\n\n    for (var y = 0; y < height; y++) {\n      var xResults = new Array(width);\n      var offset = y * XResultsMax;\n      var i = 0;\n\n      for (var x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n\n      yResults[y] = xResults;\n    }\n\n    return yResults;\n  },\n  erect3DArray2: function erect3DArray2(array, width, height, depth) {\n    var xResultsMax = width * 4;\n    var zResults = new Array(depth);\n\n    for (var z = 0; z < depth; z++) {\n      var yResults = new Array(height);\n\n      for (var y = 0; y < height; y++) {\n        var xResults = new Array(width);\n        var offset = z * xResultsMax * height + y * xResultsMax;\n        var i = 0;\n\n        for (var x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n\n        yResults[y] = xResults;\n      }\n\n      zResults[z] = yResults;\n    }\n\n    return zResults;\n  },\n  erectArray3: function erectArray3(array, width) {\n    var xResults = new Array(width);\n    var xResultsMax = width * 4;\n    var i = 0;\n\n    for (var x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n\n    return xResults;\n  },\n  erect2DArray3: function erect2DArray3(array, width, height) {\n    var xResultsMax = width * 4;\n    var yResults = new Array(height);\n\n    for (var y = 0; y < height; y++) {\n      var xResults = new Array(width);\n      var offset = y * xResultsMax;\n      var i = 0;\n\n      for (var x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n\n      yResults[y] = xResults;\n    }\n\n    return yResults;\n  },\n  erect3DArray3: function erect3DArray3(array, width, height, depth) {\n    var xResultsMax = width * 4;\n    var zResults = new Array(depth);\n\n    for (var z = 0; z < depth; z++) {\n      var yResults = new Array(height);\n\n      for (var y = 0; y < height; y++) {\n        var xResults = new Array(width);\n        var offset = z * xResultsMax * height + y * xResultsMax;\n        var i = 0;\n\n        for (var x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n\n        yResults[y] = xResults;\n      }\n\n      zResults[z] = yResults;\n    }\n\n    return zResults;\n  },\n  erectArray4: function erectArray4(array, width) {\n    var xResults = new Array(array);\n    var xResultsMax = width * 4;\n    var i = 0;\n\n    for (var x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n\n    return xResults;\n  },\n  erect2DArray4: function erect2DArray4(array, width, height) {\n    var xResultsMax = width * 4;\n    var yResults = new Array(height);\n\n    for (var y = 0; y < height; y++) {\n      var xResults = new Array(width);\n      var offset = y * xResultsMax;\n      var i = 0;\n\n      for (var x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n\n      yResults[y] = xResults;\n    }\n\n    return yResults;\n  },\n  erect3DArray4: function erect3DArray4(array, width, height, depth) {\n    var xResultsMax = width * 4;\n    var zResults = new Array(depth);\n\n    for (var z = 0; z < depth; z++) {\n      var yResults = new Array(height);\n\n      for (var y = 0; y < height; y++) {\n        var xResults = new Array(width);\n        var offset = z * xResultsMax * height + y * xResultsMax;\n        var i = 0;\n\n        for (var x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n\n        yResults[y] = xResults;\n      }\n\n      zResults[z] = yResults;\n    }\n\n    return zResults;\n  },\n\n  /**\n   *\n   * @param {String} source\n   * @param {Object} settings\n   * @return {String}\n   */\n  flattenFunctionToString: function flattenFunctionToString(source, settings) {\n    var findDependency = settings.findDependency,\n        thisLookup = settings.thisLookup,\n        doNotDefine = settings.doNotDefine;\n    var flattened = settings.flattened;\n\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n\n    var ast = acorn.parse(source);\n    var functionDependencies = [];\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        var results = [];\n\n        for (var i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n\n        return results.join('');\n      }\n\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body);\n\n        case 'FunctionDeclaration':\n          return \"function \".concat(ast.id.name, \"(\").concat(ast.params.map(flatten).join(', '), \") \").concat(flatten(ast.body));\n\n        case 'BlockStatement':\n          {\n            var _result = [];\n\n            for (var _i = 0; _i < ast.body.length; _i++) {\n              _result.push(flatten(ast.body[_i]), ';\\n');\n            }\n\n            return \"{\\n\".concat(_result.join(''), \"}\");\n          }\n\n        case 'VariableDeclaration':\n          switch (ast.declarations[0].id.type) {\n            case 'ObjectPattern':\n              {\n                var _source = flatten(ast.declarations[0].init);\n\n                var properties = ast.declarations.map(function (declaration) {\n                  return declaration.id.properties.map(flatten);\n                })[0];\n\n                if (/this/.test(_source)) {\n                  var _result2 = [];\n                  var lookups = properties.map(thisLookup);\n\n                  for (var _i2 = 0; _i2 < lookups.length; _i2++) {\n                    var lookup = lookups[_i2];\n                    if (lookup === null) continue;\n                    var property = properties[_i2];\n\n                    _result2.push(\"\".concat(ast.kind, \" \").concat(property, \" = \").concat(lookup, \";\\n\"));\n                  }\n\n                  return _result2.join('');\n                }\n\n                return \"\".concat(ast.kind, \" { \").concat(properties, \" } = \").concat(_source);\n              }\n\n            case 'ArrayPattern':\n              return \"\".concat(ast.kind, \" [ \").concat(ast.declarations.map(function (declaration) {\n                return flatten(declaration.id);\n              }).join(', '), \" ] = \").concat(flatten(ast.declarations[0].init));\n          }\n\n          if (doNotDefine && doNotDefine.indexOf(ast.declarations[0].id.name) !== -1) {\n            return '';\n          }\n\n          return \"\".concat(ast.kind, \" \").concat(ast.declarations[0].id.name, \" = \").concat(flatten(ast.declarations[0].init));\n\n        case 'CallExpression':\n          {\n            if (ast.callee.property.name === 'subarray') {\n              return \"\".concat(flatten(ast.callee.object), \".\").concat(flatten(ast.callee.property), \"(\").concat(ast.arguments.map(function (value) {\n                return flatten(value);\n              }).join(', '), \")\");\n            }\n\n            if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n              return \"\".concat(flatten(ast.callee.object), \".\").concat(flatten(ast.callee.property), \"(\").concat(ast.arguments.map(function (value) {\n                return flatten(value);\n              }).join(', '), \")\");\n            }\n\n            if (ast.callee.object.type === 'ThisExpression') {\n              functionDependencies.push(findDependency('this', ast.callee.property.name));\n              return \"\".concat(ast.callee.property.name, \"(\").concat(ast.arguments.map(function (value) {\n                return flatten(value);\n              }).join(', '), \")\");\n            } else if (ast.callee.object.name) {\n              var foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n\n              if (foundSource === null) {\n                // we're not flattening it\n                return \"\".concat(ast.callee.object.name, \".\").concat(ast.callee.property.name, \"(\").concat(ast.arguments.map(function (value) {\n                  return flatten(value);\n                }).join(', '), \")\");\n              } else {\n                functionDependencies.push(foundSource); // we're flattening it\n\n                return \"\".concat(ast.callee.property.name, \"(\").concat(ast.arguments.map(function (value) {\n                  return flatten(value);\n                }).join(', '), \")\");\n              }\n            } else if (ast.callee.object.type === 'MemberExpression') {\n              return \"\".concat(flatten(ast.callee.object), \".\").concat(ast.callee.property.name, \"(\").concat(ast.arguments.map(function (value) {\n                return flatten(value);\n              }).join(', '), \")\");\n            } else {\n              throw new Error('unknown ast.callee');\n            }\n          }\n\n        case 'ReturnStatement':\n          return \"return \".concat(flatten(ast.argument));\n\n        case 'BinaryExpression':\n          return \"(\".concat(flatten(ast.left)).concat(ast.operator).concat(flatten(ast.right), \")\");\n\n        case 'UnaryExpression':\n          if (ast.prefix) {\n            return \"\".concat(ast.operator, \" \").concat(flatten(ast.argument));\n          } else {\n            return \"\".concat(flatten(ast.argument), \" \").concat(ast.operator);\n          }\n\n        case 'ExpressionStatement':\n          return \"(\".concat(flatten(ast.expression), \")\");\n\n        case 'ArrowFunctionExpression':\n          return \"(\".concat(ast.params.map(flatten).join(', '), \") => \").concat(flatten(ast.body));\n\n        case 'Literal':\n          return ast.raw;\n\n        case 'Identifier':\n          return ast.name;\n\n        case 'MemberExpression':\n          if (ast.object.type === 'ThisExpression') {\n            return thisLookup(ast.property.name);\n          }\n\n          if (ast.computed) {\n            return \"\".concat(flatten(ast.object), \"[\").concat(flatten(ast.property), \"]\");\n          }\n\n          return flatten(ast.object) + '.' + flatten(ast.property);\n\n        case 'ThisExpression':\n          return 'this';\n\n        case 'NewExpression':\n          return \"new \".concat(flatten(ast.callee), \"(\").concat(ast.arguments.map(function (value) {\n            return flatten(value);\n          }).join(', '), \")\");\n\n        case 'ForStatement':\n          return \"for (\".concat(flatten(ast.init), \";\").concat(flatten(ast.test), \";\").concat(flatten(ast.update), \") \").concat(flatten(ast.body));\n\n        case 'AssignmentExpression':\n          return \"\".concat(flatten(ast.left)).concat(ast.operator).concat(flatten(ast.right));\n\n        case 'UpdateExpression':\n          return \"\".concat(flatten(ast.argument)).concat(ast.operator);\n\n        case 'IfStatement':\n          return \"if (\".concat(flatten(ast.test), \") \").concat(flatten(ast.consequent));\n\n        case 'ThrowStatement':\n          return \"throw \".concat(flatten(ast.argument));\n\n        case 'ObjectPattern':\n          return ast.properties.map(flatten).join(', ');\n\n        case 'ArrayPattern':\n          return ast.elements.map(flatten).join(', ');\n\n        case 'DebuggerStatement':\n          return 'debugger;';\n\n        case 'ConditionalExpression':\n          return \"\".concat(flatten(ast.test), \"?\").concat(flatten(ast.consequent), \":\").concat(flatten(ast.alternate));\n\n        case 'Property':\n          if (ast.kind === 'init') {\n            return flatten(ast.key);\n          }\n\n      }\n\n      throw new Error(\"unhandled ast.type of \".concat(ast.type));\n    }\n\n    var result = flatten(ast);\n\n    if (functionDependencies.length > 0) {\n      var flattenedFunctionDependencies = [];\n\n      for (var i = 0; i < functionDependencies.length; i++) {\n        var functionDependency = functionDependencies[i];\n\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n\n        flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + ';\\n');\n      }\n\n      return flattenedFunctionDependencies.join('') + result;\n    }\n\n    return result;\n  },\n  splitHTMLImageToRGB: function splitHTMLImageToRGB(image, mode) {\n    var gpu = new GPU({\n      mode: mode\n    });\n    var rKernel = gpu.createKernel(function (a) {\n      var pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage']\n    });\n    var gKernel = gpu.createKernel(function (a) {\n      var pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage']\n    });\n    var bKernel = gpu.createKernel(function (a) {\n      var pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage']\n    });\n    var aKernel = gpu.createKernel(function (a) {\n      var pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage']\n    });\n    var result = [rKernel(image), gKernel(image), bKernel(image), aKernel(image)];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  /**\n   * A visual debug utility\n   * @param rgba\n   * @param width\n   * @param height\n   * @param mode\n   * @return {Object[]}\n   */\n  splitRGBAToCanvases: function splitRGBAToCanvases(rgba, width, height, mode) {\n    var _require3 = require('./gpu.js'),\n        GPU = _require3.GPU;\n\n    var visualGPUR = new GPU({\n      mode: mode\n    });\n    var visualKernelR = visualGPUR.createKernel(function (v) {\n      var pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: {\n        v: 'Array2D(4)'\n      }\n    });\n    visualKernelR(rgba);\n    var visualGPUG = new GPU({\n      mode: mode\n    });\n    var visualKernelG = visualGPUG.createKernel(function (v) {\n      var pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: {\n        v: 'Array2D(4)'\n      }\n    });\n    visualKernelG(rgba);\n    var visualGPUB = new GPU({\n      mode: mode\n    });\n    var visualKernelB = visualGPUB.createKernel(function (v) {\n      var pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: {\n        v: 'Array2D(4)'\n      }\n    });\n    visualKernelB(rgba);\n    var visualGPUA = new GPU({\n      mode: mode\n    });\n    var visualKernelA = visualGPUA.createKernel(function (v) {\n      var pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: {\n        v: 'Array2D(4)'\n      }\n    });\n    visualKernelA(rgba);\n    visualGPUR.destroy();\n    visualGPUG.destroy();\n    visualGPUB.destroy();\n    visualGPUA.destroy();\n    return [visualKernelR.canvas, visualKernelG.canvas, visualKernelB.canvas, visualKernelA.canvas];\n  }\n};\n\nvar _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils: utils\n};","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../../input'),\n    Input = _require2.Input;\n\nvar _require3 = require('../../kernel-value'),\n    KernelValue = _require3.KernelValue;\n\nvar WebGLKernelValue =\n/*#__PURE__*/\nfunction (_KernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValue, _KernelValue);\n\n  /**\n   *\n   * @param {IWebGLKernerlValueSettings} settings\n   */\n  function WebGLKernelValue(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValue).call(this, value, settings));\n    _this.dimensionsId = null;\n    _this.sizeId = null;\n    _this.initialValueConstructor = value.constructor;\n    _this.onRequestTexture = settings.onRequestTexture;\n    _this.onRequestIndex = settings.onRequestIndex;\n    _this.uploadValue = null;\n    _this.textureSize = null;\n    _this.bitRatio = null;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValue, [{\n    key: \"requestTexture\",\n    value: function requestTexture() {\n      this.texture = this.onRequestTexture();\n      this.setupTexture();\n    }\n  }, {\n    key: \"setupTexture\",\n    value: function setupTexture() {\n      this.contextHandle = this.onRequestContextHandle();\n      this.index = this.onRequestIndex();\n      this.dimensionsId = this.id + 'Dim';\n      this.sizeId = this.id + 'Size';\n    }\n  }, {\n    key: \"getTransferArrayType\",\n    value: function getTransferArrayType(value) {\n      if (Array.isArray(value[0])) {\n        return this.getTransferArrayType(value[0]);\n      }\n\n      switch (value.constructor) {\n        case Array:\n        case Int32Array:\n        case Int16Array:\n        case Int8Array:\n          return Float32Array;\n\n        case Uint8ClampedArray:\n        case Uint8Array:\n        case Uint16Array:\n        case Uint32Array:\n        case Float32Array:\n        case Float64Array:\n          return value.constructor;\n      }\n\n      console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n      return value.constructor;\n    }\n    /**\n     * @desc Adds kernel parameters to the Value Texture,\n     * binding it to the context, etc.\n     *\n     * @param {Array|Float32Array|Uint16Array} value - The actual Value supplied to the kernel\n     * @param {Number} length - the expected total length of the output array\n     * @param {Object} [Type]\n     * @returns {Float32Array|Uint16Array|Uint8Array} flattened array to transfer\n     */\n\n  }, {\n    key: \"formatArrayTransfer\",\n    value: function formatArrayTransfer(value, length, Type) {\n      if (utils.isArray(value[0]) || this.optimizeFloatMemory) {\n        // not already flat\n        var valuesFlat = new Float32Array(length);\n        utils.flattenTo(value, valuesFlat);\n        return valuesFlat;\n      } else {\n        switch (value.constructor) {\n          case Uint8ClampedArray:\n          case Uint8Array:\n          case Int8Array:\n          case Uint16Array:\n          case Int16Array:\n          case Float32Array:\n          case Int32Array:\n            {\n              var _valuesFlat = new (Type || value.constructor)(length);\n\n              utils.flattenTo(value, _valuesFlat);\n              return _valuesFlat;\n            }\n\n          default:\n            {\n              var _valuesFlat2 = new Float32Array(length);\n\n              utils.flattenTo(value, _valuesFlat2);\n              return _valuesFlat2;\n            }\n        }\n      }\n    }\n    /**\n     * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n     * @param value\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getBitRatio\",\n    value: function getBitRatio(value) {\n      if (Array.isArray(value[0])) {\n        return this.getBitRatio(value[0]);\n      } else if (value.constructor === Input) {\n        return this.getBitRatio(value.value);\n      }\n\n      switch (value.constructor) {\n        case Uint8ClampedArray:\n        case Uint8Array:\n        case Int8Array:\n          return 1;\n\n        case Uint16Array:\n        case Int16Array:\n          return 2;\n\n        case Float32Array:\n        case Int32Array:\n        default:\n          return 4;\n      }\n    }\n    /**\n     * Used for when we want a string output of our kernel, so we can still input values to the kernel\n     */\n\n  }, {\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      throw new Error(\"\\\"getStringValueHandler\\\" not implemented on \".concat(this.constructor.name));\n    }\n  }, {\n    key: \"getVariablePrecisionString\",\n    value: function getVariablePrecisionString() {\n      switch (this.tactic) {\n        case 'speed':\n          return 'lowp';\n\n        case 'performance':\n          return 'highp';\n\n        case 'balanced':\n        default:\n          return 'mediump';\n      }\n    }\n  }]);\n\n  return WebGLKernelValue;\n}(KernelValue);\n\nmodule.exports = {\n  WebGLKernelValue: WebGLKernelValue\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../../texture'),\n    Texture = _require2.Texture;\n\nvar GLTextureFloat =\n/*#__PURE__*/\nfunction (_Texture) {\n  \"use strict\";\n\n  _inherits(GLTextureFloat, _Texture);\n\n  function GLTextureFloat(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureFloat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureFloat).call(this, settings));\n    _this.type = 'ArrayTexture(1)';\n    return _this;\n  }\n\n  _createClass(GLTextureFloat, [{\n    key: \"renderRawOutput\",\n    value: function renderRawOutput() {\n      var gl = this.context;\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n      var result = new Float32Array(this.size[0] * this.size[1] * 4);\n      gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.FLOAT, result);\n      return result;\n    }\n  }, {\n    key: \"renderValues\",\n    value: function renderValues() {\n      return this.renderRawOutput();\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erectFloat(this.renderValues(), this.output[0]);\n    }\n  }]);\n\n  return GLTextureFloat;\n}(Texture);\n\nmodule.exports = {\n  GLTextureFloat: GLTextureFloat\n};","var NativeWebGL = require('bindings')('webgl');\n\nvar NativeWebGLRenderingContext = NativeWebGL.WebGLRenderingContext;\nprocess.on('exit', NativeWebGL.cleanup);\nvar gl = NativeWebGLRenderingContext.prototype; // from binding.gyp\n\ndelete gl['1.0.0']; // from binding.gyp\n\ndelete NativeWebGLRenderingContext['1.0.0'];\nmodule.exports = {\n  gl: gl,\n  NativeWebGL: NativeWebGL,\n  NativeWebGLRenderingContext: NativeWebGLRenderingContext\n};","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Linkable =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Linkable(_) {\n    _classCallCheck(this, Linkable);\n\n    this._ = _;\n    this._references = [];\n    this._refCount = 0;\n    this._pendingDelete = false;\n    this._binding = 0;\n  }\n\n  _createClass(Linkable, [{\n    key: \"_link\",\n    value: function _link(b) {\n      this._references.push(b);\n\n      b._refCount += 1;\n      return true;\n    }\n  }, {\n    key: \"_unlink\",\n    value: function _unlink(b) {\n      var idx = this._references.indexOf(b);\n\n      if (idx < 0) {\n        return false;\n      }\n\n      while (idx >= 0) {\n        this._references[idx] = this._references[this._references.length - 1];\n\n        this._references.pop();\n\n        b._refCount -= 1;\n\n        b._checkDelete();\n\n        idx = this._references.indexOf(b);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_linked\",\n    value: function _linked(b) {\n      return this._references.indexOf(b) >= 0;\n    }\n  }, {\n    key: \"_checkDelete\",\n    value: function _checkDelete() {\n      if (this._refCount <= 0 && this._pendingDelete && this._ !== 0) {\n        while (this._references.length > 0) {\n          this._unlink(this._references[0]);\n        }\n\n        this._performDelete();\n\n        this._ = 0;\n      }\n    }\n  }, {\n    key: \"_performDelete\",\n    value: function _performDelete() {}\n  }]);\n\n  return Linkable;\n}();\n\nmodule.exports = {\n  Linkable: Linkable\n};","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Input =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Input(value, size) {\n    _classCallCheck(this, Input);\n\n    this.value = value;\n\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    var _this$size = _slicedToArray(this.size, 3),\n        w = _this$size[0],\n        h = _this$size[1],\n        d = _this$size[2];\n\n    if (d) {\n      if (this.value.length !== w * h * d) {\n        throw new Error(\"Input size \".concat(this.value.length, \" does not match \").concat(w, \" * \").concat(h, \" * \").concat(d, \" = \").concat(h * w * d));\n      }\n    } else if (h) {\n      if (this.value.length !== w * h) {\n        throw new Error(\"Input size \".concat(this.value.length, \" does not match \").concat(w, \" * \").concat(h, \" = \").concat(h * w));\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(\"Input size \".concat(this.value.length, \" does not match \").concat(w));\n      }\n    }\n  }\n\n  _createClass(Input, [{\n    key: \"toArray\",\n    value: function toArray() {\n      var _require = require('./utils'),\n          utils = _require.utils;\n\n      var _this$size2 = _slicedToArray(this.size, 3),\n          w = _this$size2[0],\n          h = _this$size2[1],\n          d = _this$size2[2];\n\n      if (d) {\n        return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n      } else if (h) {\n        return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n      } else {\n        return this.value;\n      }\n    }\n  }]);\n\n  return Input;\n}();\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input: Input,\n  input: input\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * @desc WebGl Texture implementation in JS\n * @param {ITextureSettings} settings\n */\nvar Texture =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Texture(settings) {\n    _classCallCheck(this, Texture);\n\n    var texture = settings.texture,\n        size = settings.size,\n        dimensions = settings.dimensions,\n        output = settings.output,\n        context = settings.context,\n        _settings$type = settings.type,\n        type = _settings$type === void 0 ? 'NumberTexture' : _settings$type;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    this.texture = texture;\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = null;\n    this.type = type;\n  }\n  /**\n   * @desc Converts the Texture into a JavaScript Array\n   * @returns {Number[]|Number[][]|Number[][][]}\n   */\n\n\n  _createClass(Texture, [{\n    key: \"toArray\",\n    value: function toArray() {\n      throw new Error(\"Not implemented on \".concat(this.constructor.name));\n    }\n    /**\n     * @desc Deletes the Texture\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return this.context.deleteTexture(this.texture);\n    }\n  }]);\n\n  return Texture;\n}();\n\nmodule.exports = {\n  Texture: Texture\n};","var _defineProperty = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * @desc This handles all the raw state, converted state, etc. of a single function.\n * [INTERNAL] A collection of functionNodes.\n * @class\n */\nvar FunctionBuilder =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  _createClass(FunctionBuilder, null, [{\n    key: \"fromKernel\",\n\n    /**\n     *\n     * @param {Kernel} kernel\n     * @param {FunctionNode} FunctionNode\n     * @param {object} [extraNodeOptions]\n     * @returns {FunctionBuilder}\n     * @static\n     */\n    value: function fromKernel(kernel, FunctionNode, extraNodeOptions) {\n      var kernelArguments = kernel.kernelArguments,\n          kernelConstants = kernel.kernelConstants,\n          argumentNames = kernel.argumentNames,\n          argumentSizes = kernel.argumentSizes,\n          argumentBitRatios = kernel.argumentBitRatios,\n          constants = kernel.constants,\n          constantBitRatios = kernel.constantBitRatios,\n          debug = kernel.debug,\n          loopMaxIterations = kernel.loopMaxIterations,\n          nativeFunctions = kernel.nativeFunctions,\n          output = kernel.output,\n          optimizeFloatMemory = kernel.optimizeFloatMemory,\n          precision = kernel.precision,\n          plugins = kernel.plugins,\n          source = kernel.source,\n          subKernels = kernel.subKernels,\n          functions = kernel.functions,\n          leadingReturnStatement = kernel.leadingReturnStatement,\n          followingReturnStatement = kernel.followingReturnStatement,\n          dynamicArguments = kernel.dynamicArguments,\n          dynamicOutput = kernel.dynamicOutput,\n          warnVarUsage = kernel.warnVarUsage;\n      var argumentTypes = new Array(kernelArguments.length);\n      var constantTypes = {};\n\n      for (var i = 0; i < kernelArguments.length; i++) {\n        argumentTypes[i] = kernelArguments[i].type;\n      }\n\n      for (var _i = 0; _i < kernelConstants.length; _i++) {\n        var kernelConstant = kernelConstants[_i];\n        constantTypes[kernelConstant.name] = kernelConstant.type;\n      }\n\n      var needsArgumentType = function needsArgumentType(functionName, index) {\n        return functionBuilder.needsArgumentType(functionName, index);\n      };\n\n      var assignArgumentType = function assignArgumentType(functionName, index, type) {\n        functionBuilder.assignArgumentType(functionName, index, type);\n      };\n\n      var lookupReturnType = function lookupReturnType(functionName, ast, requestingNode) {\n        return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n      };\n\n      var lookupFunctionArgumentTypes = function lookupFunctionArgumentTypes(functionName) {\n        return functionBuilder.lookupFunctionArgumentTypes(functionName);\n      };\n\n      var lookupFunctionArgumentName = function lookupFunctionArgumentName(functionName, argumentIndex) {\n        return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n      };\n\n      var lookupFunctionArgumentBitRatio = function lookupFunctionArgumentBitRatio(functionName, argumentName) {\n        return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n      };\n\n      var triggerImplyArgumentType = function triggerImplyArgumentType(functionName, i, argumentType, requestingNode) {\n        functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n      };\n\n      var triggerTrackArgumentSynonym = function triggerTrackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex) {\n        functionBuilder.trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex);\n      };\n\n      var lookupArgumentSynonym = function lookupArgumentSynonym(originFunctionName, functionName, argumentName) {\n        return functionBuilder.lookupArgumentSynonym(originFunctionName, functionName, argumentName);\n      };\n\n      var onFunctionCall = function onFunctionCall(functionName, calleeFunctionName, args) {\n        functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n      };\n\n      var onNestedFunction = function onNestedFunction(ast, returnType) {\n        var argumentNames = [];\n\n        for (var _i2 = 0; _i2 < ast.params.length; _i2++) {\n          argumentNames.push(ast.params[_i2].name);\n        }\n\n        var nestedFunction = new FunctionNode(null, Object.assign({}, nodeOptions, {\n          returnType: null,\n          ast: ast,\n          name: ast.id.name,\n          argumentNames: argumentNames,\n          lookupReturnType: lookupReturnType,\n          lookupFunctionArgumentTypes: lookupFunctionArgumentTypes,\n          lookupFunctionArgumentName: lookupFunctionArgumentName,\n          lookupFunctionArgumentBitRatio: lookupFunctionArgumentBitRatio,\n          needsArgumentType: needsArgumentType,\n          assignArgumentType: assignArgumentType,\n          triggerImplyArgumentType: triggerImplyArgumentType,\n          triggerTrackArgumentSynonym: triggerTrackArgumentSynonym,\n          lookupArgumentSynonym: lookupArgumentSynonym,\n          onFunctionCall: onFunctionCall,\n          warnVarUsage: warnVarUsage\n        }));\n        nestedFunction.traceFunctionAST(ast);\n        functionBuilder.addFunctionNode(nestedFunction);\n      };\n\n      var nodeOptions = Object.assign({\n        isRootKernel: false,\n        onNestedFunction: onNestedFunction,\n        lookupReturnType: lookupReturnType,\n        lookupFunctionArgumentTypes: lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName: lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio: lookupFunctionArgumentBitRatio,\n        needsArgumentType: needsArgumentType,\n        assignArgumentType: assignArgumentType,\n        triggerImplyArgumentType: triggerImplyArgumentType,\n        triggerTrackArgumentSynonym: triggerTrackArgumentSynonym,\n        lookupArgumentSynonym: lookupArgumentSynonym,\n        onFunctionCall: onFunctionCall,\n        optimizeFloatMemory: optimizeFloatMemory,\n        precision: precision,\n        constants: constants,\n        constantTypes: constantTypes,\n        constantBitRatios: constantBitRatios,\n        debug: debug,\n        loopMaxIterations: loopMaxIterations,\n        output: output,\n        plugins: plugins,\n        dynamicArguments: dynamicArguments,\n        dynamicOutput: dynamicOutput\n      }, extraNodeOptions || {});\n      var rootNodeOptions = Object.assign({}, nodeOptions, {\n        isRootKernel: true,\n        name: 'kernel',\n        argumentNames: argumentNames,\n        argumentTypes: argumentTypes,\n        argumentSizes: argumentSizes,\n        argumentBitRatios: argumentBitRatios,\n        leadingReturnStatement: leadingReturnStatement,\n        followingReturnStatement: followingReturnStatement\n      });\n\n      if (typeof source === 'object' && source.functionNodes) {\n        return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n      }\n\n      var rootNode = new FunctionNode(source, rootNodeOptions);\n      var functionNodes = null;\n\n      if (functions) {\n        functionNodes = functions.map(function (fn) {\n          return new FunctionNode(fn.source, {\n            returnType: fn.returnType,\n            argumentTypes: fn.argumentTypes,\n            output: output,\n            plugins: plugins,\n            constants: constants,\n            constantTypes: constantTypes,\n            constantBitRatios: constantBitRatios,\n            optimizeFloatMemory: optimizeFloatMemory,\n            precision: precision,\n            lookupReturnType: lookupReturnType,\n            lookupFunctionArgumentTypes: lookupFunctionArgumentTypes,\n            lookupFunctionArgumentName: lookupFunctionArgumentName,\n            lookupFunctionArgumentBitRatio: lookupFunctionArgumentBitRatio,\n            needsArgumentType: needsArgumentType,\n            assignArgumentType: assignArgumentType,\n            triggerImplyArgumentType: triggerImplyArgumentType,\n            triggerTrackArgumentSynonym: triggerTrackArgumentSynonym,\n            lookupArgumentSynonym: lookupArgumentSynonym,\n            onFunctionCall: onFunctionCall\n          });\n        });\n      }\n\n      var subKernelNodes = null;\n\n      if (subKernels) {\n        subKernelNodes = subKernels.map(function (subKernel) {\n          var name = subKernel.name,\n              source = subKernel.source;\n          return new FunctionNode(source, Object.assign({}, nodeOptions, {\n            name: name,\n            isSubKernel: true,\n            isRootKernel: false\n          }));\n        });\n      }\n\n      var functionBuilder = new FunctionBuilder({\n        kernel: kernel,\n        rootNode: rootNode,\n        functionNodes: functionNodes,\n        nativeFunctions: nativeFunctions,\n        subKernelNodes: subKernelNodes\n      });\n      return functionBuilder;\n    }\n    /**\n     *\n     * @param {IFunctionBuilderSettings} [settings]\n     */\n\n  }]);\n\n  function FunctionBuilder(settings) {\n    _classCallCheck(this, FunctionBuilder);\n\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.argumentChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (var i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (var _i3 = 0; _i3 < this.subKernelNodes.length; _i3++) {\n        this.functionMap[this.subKernelNodes[_i3].name] = this.subKernelNodes[_i3];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (var _i4 = 0; _i4 < this.nativeFunctions.length; _i4++) {\n        var nativeFunction = this.nativeFunctions[_i4];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n  /**\n   * @desc Add the function node directly\n   *\n   * @param {FunctionNode} functionNode - functionNode to add\n   *\n   */\n\n\n  _createClass(FunctionBuilder, [{\n    key: \"addFunctionNode\",\n    value: function addFunctionNode(functionNode) {\n      if (!functionNode.name) throw new Error('functionNode.name needs set');\n      this.functionMap[functionNode.name] = functionNode;\n\n      if (functionNode.isRootKernel) {\n        this.rootNode = functionNode;\n      }\n    }\n    /**\n     * @desc Trace all the depending functions being called, from a single function\n     *\n     * This allow for 'unneeded' functions to be automatically optimized out.\n     * Note that the 0-index, is the starting function trace.\n     *\n     * @param {String} functionName - Function name to trace from, default to 'kernel'\n     * @param {String[]} [retList] - Returning list of function names that is traced. Including itself.\n     *\n     * @returns {String[]}  Returning list of function names that is traced. Including itself.\n     */\n\n  }, {\n    key: \"traceFunctionCalls\",\n    value: function traceFunctionCalls(functionName, retList) {\n      functionName = functionName || 'kernel';\n      retList = retList || [];\n\n      if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n        if (retList.indexOf(functionName) === -1) {\n          retList.push(functionName);\n        }\n\n        return retList;\n      }\n\n      var functionNode = this.functionMap[functionName];\n\n      if (functionNode) {\n        // Check if function already exists\n        var functionIndex = retList.indexOf(functionName);\n\n        if (functionIndex === -1) {\n          retList.push(functionName);\n          functionNode.toString(); //ensure JS trace is done\n\n          for (var i = 0; i < functionNode.calledFunctions.length; ++i) {\n            this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n          }\n        } else {\n          /**\n           * https://github.com/gpujs/gpu.js/issues/207\n           * if dependent function is already in the list, because a function depends on it, and because it has\n           * already been traced, we know that we must move the dependent function to the end of the the retList.\n           * */\n          var dependantFunctionName = retList.splice(functionIndex, 1)[0];\n          retList.push(dependantFunctionName);\n        }\n      }\n\n      return retList;\n    }\n    /**\n     * @desc Return the string for a function\n     * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n     * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n     */\n\n  }, {\n    key: \"getPrototypeString\",\n    value: function getPrototypeString(functionName) {\n      return this.getPrototypes(functionName).join('\\n');\n    }\n    /**\n     * @desc Return the string for a function\n     * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n     * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n     */\n\n  }, {\n    key: \"getPrototypes\",\n    value: function getPrototypes(functionName) {\n      if (this.rootNode) {\n        this.rootNode.toString();\n      }\n\n      if (functionName) {\n        return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n      }\n\n      return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n    }\n    /**\n     * @desc Get string from function names\n     * @param {String[]} functionList - List of function to build string\n     * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n     */\n\n  }, {\n    key: \"getStringFromFunctionNames\",\n    value: function getStringFromFunctionNames(functionList) {\n      var ret = [];\n\n      for (var i = 0; i < functionList.length; ++i) {\n        var node = this.functionMap[functionList[i]];\n\n        if (node) {\n          ret.push(this.functionMap[functionList[i]].toString());\n        }\n      }\n\n      return ret.join('\\n');\n    }\n    /**\n     * @desc Return string of all functions converted\n     * @param {String[]} functionList - List of function names to build the string.\n     * @returns {Array} Prototypes of all functions converted\n     */\n\n  }, {\n    key: \"getPrototypesFromFunctionNames\",\n    value: function getPrototypesFromFunctionNames(functionList) {\n      var ret = [];\n\n      for (var i = 0; i < functionList.length; ++i) {\n        var functionName = functionList[i];\n        var functionIndex = this.nativeFunctionNames.indexOf(functionName);\n\n        if (functionIndex > -1) {\n          ret.push(this.nativeFunctions[functionIndex].source);\n          continue;\n        }\n\n        var node = this.functionMap[functionName];\n\n        if (node) {\n          ret.push(node.toString());\n        }\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _this = this;\n\n      return this.traceFunctionCalls(this.rootNode.name).reverse().map(function (name) {\n        var nativeIndex = _this.nativeFunctions.indexOf(name);\n\n        if (nativeIndex > -1) {\n          return {\n            name: name,\n            source: _this.nativeFunctions[nativeIndex].source\n          };\n        } else if (_this.functionMap[name]) {\n          return _this.functionMap[name].toJSON();\n        } else {\n          throw new Error(\"function \".concat(name, \" not found\"));\n        }\n      });\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(jsonFunctionNodes, FunctionNode) {\n      this.functionMap = {};\n\n      for (var i = 0; i < jsonFunctionNodes.length; i++) {\n        var jsonFunctionNode = jsonFunctionNodes[i];\n        this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n      }\n\n      return this;\n    }\n    /**\n     * @desc Get string for a particular function name\n     * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n     * @returns {String} settings - The string, of all the various functions. Trace optimized if functionName given\n     */\n\n  }, {\n    key: \"getString\",\n    value: function getString(functionName) {\n      if (functionName) {\n        return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n      }\n\n      return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n    }\n  }, {\n    key: \"lookupReturnType\",\n    value: function lookupReturnType(functionName, ast, requestingNode) {\n      if (ast.type !== 'CallExpression') {\n        throw new Error(\"expected ast type of \\\"CallExpression\\\", but is \".concat(ast.type));\n      }\n\n      if (this._isNativeFunction(functionName)) {\n        return this._lookupNativeFunctionReturnType(functionName);\n      } else if (this._isFunction(functionName)) {\n        var node = this._getFunction(functionName);\n\n        if (node.returnType) {\n          return node.returnType;\n        } else {\n          for (var i = 0; i < this.lookupChain.length; i++) {\n            // detect circlical logic\n            if (this.lookupChain[i].ast === ast) {\n              // detect if arguments have not resolved, preventing a return type\n              // if so, go ahead and resolve them, so we can resolve the return type\n              if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n                var args = ast.arguments;\n\n                for (var j = 0; j < args.length; j++) {\n                  this.lookupChain.push({\n                    name: requestingNode.name,\n                    ast: args[i],\n                    requestingNode: requestingNode\n                  });\n                  node.argumentTypes[j] = requestingNode.getType(args[j]);\n                  this.lookupChain.pop();\n                }\n\n                return node.returnType = node.getType(node.getJsAST());\n              }\n\n              throw new Error('circlical logic detected!');\n            }\n          } // get ready for a ride!\n\n\n          this.lookupChain.push({\n            name: requestingNode.name,\n            ast: ast,\n            requestingNode: requestingNode\n          });\n          var type = node.getType(node.getJsAST());\n          this.lookupChain.pop();\n          return node.returnType = type;\n        }\n      } // function not found, maybe native?\n\n\n      return null;\n      /**\n       * first iteration\n       * kernel.outputs = Array\n       * kernel.targets = Array\n       * kernel.returns = null\n       * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n       * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n       * calcErrorOutput.output = null\n       * calcErrorOutput.targets = null\n       * calcErrorOutput.returns = null\n       * calcDeltasSigmoid.error = null\n       * calcDeltasSigmoid.output = Number\n       * calcDeltasSigmoid.returns = null\n       *\n       * resolvable are:\n       * calcErrorOutput.output\n       * calcErrorOutput.targets\n       * calcErrorOutput.returns\n       *\n       * second iteration\n       * kernel.outputs = Array\n       * kernel.targets = Array\n       * kernel.returns = null\n       * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n       * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n       * calcErrorOutput.output = Number\n       * calcErrorOutput.targets = Array\n       * calcErrorOutput.returns = Number\n       * calcDeltasSigmoid.error = null\n       * calcDeltasSigmoid.output = Number\n       * calcDeltasSigmoid.returns = null\n       *\n       * resolvable are:\n       * calcDeltasSigmoid.error\n       * calcDeltasSigmoid.returns\n       * kernel.returns\n       *\n       * third iteration\n       * kernel.outputs = Array\n       * kernel.targets = Array\n       * kernel.returns = Number\n       * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n       * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n       * calcErrorOutput.output = Number\n       * calcErrorOutput.targets = Array\n       * calcErrorOutput.returns = Number\n       * calcDeltasSigmoid.error = Number\n       * calcDeltasSigmoid.output = Number\n       * calcDeltasSigmoid.returns = Number\n       *\n       *\n       */\n    }\n  }, {\n    key: \"_getFunction\",\n    value: function _getFunction(functionName) {\n      if (!this._isFunction(functionName)) {\n        new Error(\"Function \".concat(functionName, \" not found\"));\n      }\n\n      return this.functionMap[functionName];\n    }\n  }, {\n    key: \"_isFunction\",\n    value: function _isFunction(functionName) {\n      return Boolean(this.functionMap[functionName]);\n    }\n  }, {\n    key: \"_getNativeFunction\",\n    value: function _getNativeFunction(functionName) {\n      for (var i = 0; i < this.nativeFunctions.length; i++) {\n        if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_isNativeFunction\",\n    value: function _isNativeFunction(functionName) {\n      return Boolean(this._getNativeFunction(functionName));\n    }\n  }, {\n    key: \"_lookupNativeFunctionReturnType\",\n    value: function _lookupNativeFunctionReturnType(functionName) {\n      var nativeFunction = this._getNativeFunction(functionName);\n\n      if (nativeFunction) {\n        return nativeFunction.returnType;\n      }\n\n      throw new Error(\"Native function \".concat(functionName, \" not found\"));\n    }\n  }, {\n    key: \"lookupFunctionArgumentTypes\",\n    value: function lookupFunctionArgumentTypes(functionName) {\n      if (this._isNativeFunction(functionName)) {\n        return this._getNativeFunction(functionName).argumentTypes;\n      } else if (this._isFunction(functionName)) {\n        return this._getFunction(functionName).argumentTypes;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"lookupFunctionArgumentName\",\n    value: function lookupFunctionArgumentName(functionName, argumentIndex) {\n      return this._getFunction(functionName).argumentNames[argumentIndex];\n    }\n  }, {\n    key: \"lookupFunctionArgumentBitRatio\",\n    value: function lookupFunctionArgumentBitRatio(functionName, argumentName) {\n      if (!this._isFunction(functionName)) {\n        throw new Error('function not found');\n      }\n\n      if (this.rootNode.name === functionName) {\n        var i = this.rootNode.argumentNames.indexOf(argumentName);\n\n        if (i !== -1) {\n          return this.rootNode.argumentBitRatios[i];\n        } else {\n          throw new Error('argument bit ratio not found');\n        }\n      } else {\n        var node = this._getFunction(functionName);\n\n        var argumentSynonym = node.argumentSynonym[node.synonymIndex];\n\n        if (!argumentSynonym) {\n          throw new Error('argument synonym not found');\n        }\n\n        return this.lookupFunctionArgumentBitRatio(argumentSynonym.functionName, argumentSynonym.argumentName);\n      }\n    }\n  }, {\n    key: \"needsArgumentType\",\n    value: function needsArgumentType(functionName, i) {\n      if (!this._isFunction(functionName)) return false;\n\n      var fnNode = this._getFunction(functionName);\n\n      return !fnNode.argumentTypes[i];\n    }\n  }, {\n    key: \"assignArgumentType\",\n    value: function assignArgumentType(functionName, i, argumentType, requestingNode) {\n      if (!this._isFunction(functionName)) return;\n\n      var fnNode = this._getFunction(functionName);\n\n      if (!fnNode.argumentTypes[i]) {\n        fnNode.argumentTypes[i] = argumentType;\n      }\n    }\n  }, {\n    key: \"trackArgumentSynonym\",\n    value: function trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex) {\n      if (!this._isFunction(calleeFunctionName)) return;\n\n      var node = this._getFunction(calleeFunctionName);\n\n      if (!node.argumentSynonym) {\n        node.argumentSynonym = {};\n      }\n\n      var calleeArgumentName = node.argumentNames[argumentIndex];\n\n      if (!node.argumentSynonym[calleeArgumentName]) {\n        node.argumentSynonym[calleeArgumentName] = {};\n      }\n\n      node.synonymIndex++;\n      node.argumentSynonym[node.synonymIndex] = {\n        functionName: functionName,\n        argumentName: argumentName,\n        calleeArgumentName: calleeArgumentName,\n        calleeFunctionName: calleeFunctionName\n      };\n    }\n  }, {\n    key: \"lookupArgumentSynonym\",\n    value: function lookupArgumentSynonym(originFunctionName, functionName, argumentName) {\n      if (originFunctionName === functionName) return argumentName;\n      if (!this._isFunction(functionName)) return null;\n\n      var node = this._getFunction(functionName);\n\n      var argumentSynonym = node.argumentSynonym[node.synonymUseIndex];\n      if (!argumentSynonym) return null;\n      if (argumentSynonym.calleeArgumentName !== argumentName) return null;\n      node.synonymUseIndex++;\n\n      if (originFunctionName !== functionName) {\n        return this.lookupArgumentSynonym(originFunctionName, argumentSynonym.functionName, argumentSynonym.argumentName);\n      }\n\n      return argumentSynonym.argumentName;\n    }\n  }, {\n    key: \"trackFunctionCall\",\n    value: function trackFunctionCall(functionName, calleeFunctionName, args) {\n      if (!this.functionNodeDependencies[functionName]) {\n        this.functionNodeDependencies[functionName] = new Set();\n        this.functionCalls[functionName] = [];\n      }\n\n      this.functionNodeDependencies[functionName].add(calleeFunctionName);\n      this.functionCalls[functionName].push(args);\n    }\n  }, {\n    key: \"getKernelResultType\",\n    value: function getKernelResultType() {\n      return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n    }\n  }, {\n    key: \"getSubKernelResultType\",\n    value: function getSubKernelResultType(index) {\n      var subKernelNode = this.subKernelNodes[index];\n      var called = false;\n\n      for (var functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n        var functionCall = this.rootNode.functionCalls[functionCallIndex];\n\n        if (functionCall.ast.callee.name === subKernelNode.name) {\n          called = true;\n        }\n      }\n\n      if (!called) {\n        throw new Error(\"SubKernel \".concat(subKernelNode.name, \" never called by kernel\"));\n      }\n\n      return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n    }\n  }, {\n    key: \"getReturnTypes\",\n    value: function getReturnTypes() {\n      var result = _defineProperty({}, this.rootNode.name, this.rootNode.getType(this.rootNode.ast));\n\n      var list = this.traceFunctionCalls(this.rootNode.name);\n\n      for (var i = 0; i < list.length; i++) {\n        var functionName = list[i];\n        var functionNode = this.functionMap[functionName];\n        result[functionName] = functionNode.getType(functionNode.ast);\n      }\n\n      return result;\n    }\n  }]);\n\n  return FunctionBuilder;\n}();\n\nmodule.exports = {\n  FunctionBuilder: FunctionBuilder\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../gl/kernel'),\n    GLKernel = _require.GLKernel;\n\nvar _require2 = require('../function-builder'),\n    FunctionBuilder = _require2.FunctionBuilder;\n\nvar _require3 = require('./function-node'),\n    WebGLFunctionNode = _require3.WebGLFunctionNode;\n\nvar _require4 = require('../../utils'),\n    utils = _require4.utils;\n\nvar triangleNoise = require('../../plugins/triangle-noise');\n\nvar _require5 = require('./fragment-shader'),\n    fragmentShader = _require5.fragmentShader;\n\nvar _require6 = require('./vertex-shader'),\n    vertexShader = _require6.vertexShader;\n\nvar _require7 = require('../gl/kernel-string'),\n    glKernelString = _require7.glKernelString;\n\nvar _require8 = require('./kernel-value-maps'),\n    _lookupKernelValueType = _require8.lookupKernelValueType;\n\nvar isSupported = null;\nvar testCanvas = null;\nvar testContext = null;\nvar testExtensions = null;\nvar features = null;\nvar plugins = [triangleNoise];\nvar canvases = [];\nvar maxTexSizes = {};\n/**\n * @desc Kernel Implementation for WebGL.\n * <p>This builds the shaders and runs them on the GPU,\n * the outputs the result back as float(enabled by default) and Texture.</p>\n *\n * @prop {Object} textureCache - webGl Texture cache\n * @prop {Object} programUniformLocationCache - Location of program variables in memory\n * @prop {Object} framebuffer - Webgl frameBuffer\n * @prop {Object} buffer - WebGL buffer\n * @prop {Object} program - The webGl Program\n * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n * @prop {Boolean} pipeline - Set output type to FAST mode (GPU to GPU via Textures), instead of float\n * @prop {String} endianness - Endian information like Little-endian, Big-endian.\n * @prop {Array} argumentTypes - Types of parameters sent to the Kernel\n * @prop {String} compiledFragmentShader - Compiled fragment shader string\n * @prop {String} compiledVertexShader - Compiled Vertical shader string\n * @extends GLKernel\n */\n\nvar WebGLKernel =\n/*#__PURE__*/\nfunction (_GLKernel) {\n  \"use strict\";\n\n  _inherits(WebGLKernel, _GLKernel);\n\n  _createClass(WebGLKernel, null, [{\n    key: \"setupFeatureChecks\",\n    value: function setupFeatureChecks() {\n      if (typeof document !== 'undefined') {\n        testCanvas = document.createElement('canvas');\n      } else if (typeof OffscreenCanvas !== 'undefined') {\n        testCanvas = new OffscreenCanvas(0, 0);\n      }\n\n      if (!testCanvas) return;\n      testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers')\n      };\n      features = this.getFeatures();\n    }\n  }, {\n    key: \"isContextMatch\",\n    value: function isContextMatch(context) {\n      if (typeof WebGLRenderingContext !== 'undefined') {\n        return context instanceof WebGLRenderingContext;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      var isDrawBuffers = this.getIsDrawBuffers();\n      return Object.freeze({\n        isFloatRead: this.getIsFloatRead(),\n        isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n        isTextureFloat: this.getIsTextureFloat(),\n        isDrawBuffers: isDrawBuffers,\n        kernelMap: isDrawBuffers,\n        channelCount: this.getChannelCount()\n      });\n    }\n  }, {\n    key: \"getIsTextureFloat\",\n    value: function getIsTextureFloat() {\n      return Boolean(testExtensions.OES_texture_float);\n    }\n  }, {\n    key: \"getIsDrawBuffers\",\n    value: function getIsDrawBuffers() {\n      return Boolean(testExtensions.WEBGL_draw_buffers);\n    }\n  }, {\n    key: \"getChannelCount\",\n    value: function getChannelCount() {\n      return testExtensions.WEBGL_draw_buffers ? testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) : 1;\n    }\n  }, {\n    key: \"lookupKernelValueType\",\n    value: function lookupKernelValueType(type, dynamic, precision, value) {\n      return _lookupKernelValueType(type, dynamic, precision, value);\n    }\n  }, {\n    key: \"isSupported\",\n    get: function get() {\n      if (isSupported !== null) {\n        return isSupported;\n      }\n\n      this.setupFeatureChecks();\n      isSupported = this.isContextMatch(testContext);\n      return isSupported;\n    }\n  }, {\n    key: \"testCanvas\",\n    get: function get() {\n      return testCanvas;\n    }\n  }, {\n    key: \"testContext\",\n    get: function get() {\n      return testContext;\n    }\n  }, {\n    key: \"features\",\n    get: function get() {\n      return features;\n    }\n  }, {\n    key: \"fragmentShader\",\n    get: function get() {\n      return fragmentShader;\n    }\n  }, {\n    key: \"vertexShader\",\n    get: function get() {\n      return vertexShader;\n    }\n    /**\n     *\n     * @param {String} source\n     * @param {IKernelSettings} settings\n     */\n\n  }]);\n\n  function WebGLKernel(source, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernel).call(this, source, settings));\n    _this.program = null;\n    _this.pipeline = settings.pipeline;\n    _this.endianness = utils.systemEndianness();\n    _this.extensions = {};\n    _this.subKernelOutputTextures = null;\n    _this.kernelArguments = null;\n    _this.argumentTextureCount = 0;\n    _this.constantTextureCount = 0;\n    _this.compiledFragmentShader = null;\n    _this.compiledVertexShader = null;\n    _this.fragShader = null;\n    _this.vertShader = null;\n    _this.drawBuffersMap = null;\n    _this.outputTexture = null;\n    /**\n     *\n     * @type {Int32Array|null}\n     */\n\n    _this.maxTexSize = null;\n    _this.switchingKernels = false;\n    _this.onRequestSwitchKernel = null;\n\n    _this.mergeSettings(source.settings || settings);\n    /**\n     * The thread dimensions, x, y and z\n     * @type {Array|null}\n     */\n\n\n    _this.threadDim = null;\n    _this.framebuffer = null;\n    _this.buffer = null;\n    _this.textureCache = {};\n    _this.programUniformLocationCache = {};\n    _this.uniform1fCache = {};\n    _this.uniform1iCache = {};\n    _this.uniform2fCache = {};\n    _this.uniform2fvCache = {};\n    _this.uniform2ivCache = {};\n    _this.uniform3fvCache = {};\n    _this.uniform3ivCache = {};\n    _this.uniform4fvCache = {};\n    _this.uniform4ivCache = {};\n    return _this;\n  }\n\n  _createClass(WebGLKernel, [{\n    key: \"initCanvas\",\n    value: function initCanvas() {\n      if (typeof document !== 'undefined') {\n        var canvas = document.createElement('canvas'); // Default width and height, to fix webgl issue in safari\n\n        canvas.width = 2;\n        canvas.height = 2;\n        return canvas;\n      } else if (typeof OffscreenCanvas !== 'undefined') {\n        return new OffscreenCanvas(0, 0);\n      }\n    }\n  }, {\n    key: \"initContext\",\n    value: function initContext() {\n      var settings = {\n        alpha: false,\n        depth: false,\n        antialias: false\n      };\n      return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n    }\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins(settings) {\n      // default plugins\n      var pluginsToUse = [];\n      var source = this.source;\n\n      if (typeof source === 'string') {\n        for (var i = 0; i < plugins.length; i++) {\n          var plugin = plugins[i];\n\n          if (source.match(plugin.functionMatch)) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      } else if (typeof source === 'object') {\n        // `source` is from object, json\n        if (settings.pluginNames) {\n          var _loop = function _loop(_i) {\n            var plugin = plugins[_i];\n            var usePlugin = settings.pluginNames.some(function (pluginName) {\n              return pluginName === plugin.name;\n            });\n\n            if (usePlugin) {\n              pluginsToUse.push(plugin);\n            }\n          };\n\n          //TODO: in context of JSON support, pluginNames may not exist here\n          for (var _i = 0; _i < plugins.length; _i++) {\n            _loop(_i);\n          }\n        }\n      }\n\n      return pluginsToUse;\n    }\n  }, {\n    key: \"initExtensions\",\n    value: function initExtensions() {\n      this.extensions = {\n        OES_texture_float: this.context.getExtension('OES_texture_float'),\n        OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float')\n      };\n    }\n    /**\n     * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n     * @param {IArguments} args\n     */\n\n  }, {\n    key: \"validateSettings\",\n    value: function validateSettings(args) {\n      if (!this.validate) {\n        this.texSize = utils.getKernelTextureSize({\n          optimizeFloatMemory: this.optimizeFloatMemory,\n          precision: this.precision\n        }, this.output);\n        return;\n      }\n\n      var features = this.constructor.features;\n\n      if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n        throw new Error('Float textures are not supported');\n      } else if (this.precision === 'single' && !features.isFloatRead) {\n        throw new Error('Single precision not supported');\n      } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n        this.precision = features.isFloatRead ? 'single' : 'unsigned';\n      }\n\n      if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n        throw new Error('could not instantiate draw buffers extension');\n      }\n\n      if (this.fixIntegerDivisionAccuracy === null) {\n        this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n      } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n        this.fixIntegerDivisionAccuracy = false;\n      }\n\n      this.checkOutput();\n\n      if (!this.output || this.output.length === 0) {\n        if (args.length !== 1) {\n          throw new Error('Auto output only supported for kernels with only one input');\n        }\n\n        var argType = utils.getVariableType(args[0], this.strictIntegers);\n\n        if (argType === 'Array') {\n          this.output = utils.getDimensions(argType);\n        } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n          this.output = args[0].output;\n        } else {\n          throw new Error('Auto output not supported for input type: ' + argType);\n        }\n      }\n\n      if (this.graphical) {\n        if (this.output.length !== 2) {\n          throw new Error('Output must have 2 dimensions on graphical mode');\n        }\n\n        if (this.precision === 'precision') {\n          this.precision = 'unsigned';\n          console.warn('Cannot use graphical mode and single precision at the same time');\n        }\n\n        this.texSize = utils.clone(this.output);\n        return;\n      } else if (this.precision === null && features.isTextureFloat) {\n        this.precision = 'single';\n      }\n\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision\n      }, this.output);\n    }\n  }, {\n    key: \"updateMaxTexSize\",\n    value: function updateMaxTexSize() {\n      var texSize = this.texSize,\n          canvas = this.canvas;\n\n      if (this.maxTexSize === null) {\n        var canvasIndex = canvases.indexOf(canvas);\n\n        if (canvasIndex === -1) {\n          canvasIndex = canvases.length;\n          canvases.push(canvas);\n          maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n        }\n\n        this.maxTexSize = maxTexSizes[canvasIndex];\n      }\n\n      if (this.maxTexSize[0] < texSize[0]) {\n        this.maxTexSize[0] = texSize[0];\n      }\n\n      if (this.maxTexSize[1] < texSize[1]) {\n        this.maxTexSize[1] = texSize[1];\n      }\n    } // TODO: move channel checks to new place\n\n  }, {\n    key: \"_oldtranslateSource\",\n    value: function _oldtranslateSource() {\n      var functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n        fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n      }); // need this line to automatically get returnType\n\n      var translatedSource = functionBuilder.getPrototypeString('kernel');\n\n      if (!this.returnType) {\n        this.returnType = functionBuilder.getKernelResultType();\n      }\n\n      var requiredChannels = 0;\n      var returnTypes = functionBuilder.getReturnTypes();\n\n      for (var i = 0; i < returnTypes.length; i++) {\n        switch (returnTypes[i]) {\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            requiredChannels++;\n            break;\n\n          case 'Array(2)':\n            requiredChannels += 2;\n            break;\n\n          case 'Array(3)':\n            requiredChannels += 3;\n            break;\n\n          case 'Array(4)':\n            requiredChannels += 4;\n            break;\n        }\n      }\n\n      if (features && requiredChannels > features.channelCount) {\n        throw new Error('Too many channels!');\n      }\n\n      return this.translatedSource = translatedSource;\n    }\n  }, {\n    key: \"setupArguments\",\n    value: function setupArguments(args) {\n      var _this2 = this;\n\n      this.kernelArguments = [];\n      this.argumentTextureCount = 0;\n      var needsArgumentTypes = this.argumentTypes === null; // TODO: remove\n\n      if (needsArgumentTypes) {\n        this.argumentTypes = [];\n      }\n\n      this.argumentSizes = [];\n      this.argumentBitRatios = []; // TODO: end remove\n\n      if (args.length < this.argumentNames.length) {\n        throw new Error('not enough arguments for kernel');\n      } else if (args.length > this.argumentNames.length) {\n        throw new Error('too many arguments for kernel');\n      }\n\n      var gl = this.context;\n      var textureIndexes = 0;\n\n      for (var index = 0; index < args.length; index++) {\n        var value = args[index];\n        var name = this.argumentNames[index];\n        var type = void 0;\n\n        if (needsArgumentTypes) {\n          type = utils.getVariableType(value, this.strictIntegers);\n          this.argumentTypes.push(type);\n        } else {\n          type = this.argumentTypes[index];\n        }\n\n        var KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n\n        if (KernelValue === null) {\n          return this.requestFallback(args);\n        }\n\n        var kernelArgument = new KernelValue(value, {\n          name: name,\n          type: type,\n          tactic: this.tactic,\n          origin: 'user',\n          context: gl,\n          checkContext: this.checkContext,\n          kernel: this,\n          strictIntegers: this.strictIntegers,\n          onRequestTexture: function onRequestTexture() {\n            return _this2.context.createTexture();\n          },\n          onRequestIndex: function onRequestIndex() {\n            return textureIndexes++;\n          },\n          onUpdateValueMismatch: function onUpdateValueMismatch() {\n            _this2.switchingKernels = true;\n          },\n          onRequestContextHandle: function onRequestContextHandle() {\n            return gl.TEXTURE0 + _this2.constantTextureCount + _this2.argumentTextureCount++;\n          }\n        });\n        this.kernelArguments.push(kernelArgument);\n        this.argumentSizes.push(kernelArgument.textureSize);\n        this.argumentBitRatios[index] = kernelArgument.bitRatio;\n      }\n    }\n  }, {\n    key: \"setupConstants\",\n    value: function setupConstants(args) {\n      var _this3 = this;\n\n      var gl = this.context;\n      this.kernelConstants = [];\n      var needsConstantTypes = this.constantTypes === null;\n\n      if (needsConstantTypes) {\n        this.constantTypes = {};\n      }\n\n      this.constantBitRatios = {};\n      var textureIndexes = 0;\n\n      for (var name in this.constants) {\n        var value = this.constants[name];\n        var type = void 0;\n\n        if (needsConstantTypes) {\n          type = utils.getVariableType(value, this.strictIntegers);\n          this.constantTypes[name] = type;\n        } else {\n          type = this.constantTypes[name];\n        }\n\n        var KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n\n        if (KernelValue === null) {\n          return this.requestFallback(args);\n        }\n\n        var kernelValue = new KernelValue(value, {\n          name: name,\n          type: type,\n          tactic: this.tactic,\n          origin: 'constants',\n          context: this.context,\n          checkContext: this.checkContext,\n          kernel: this,\n          strictIntegers: this.strictIntegers,\n          onRequestTexture: function onRequestTexture() {\n            return _this3.context.createTexture();\n          },\n          onRequestIndex: function onRequestIndex() {\n            return textureIndexes++;\n          },\n          onRequestContextHandle: function onRequestContextHandle() {\n            return gl.TEXTURE0 + _this3.constantTextureCount++;\n          }\n        });\n        this.constantBitRatios[name] = kernelValue.bitRatio;\n        this.kernelConstants.push(kernelValue);\n      }\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      this.initExtensions();\n      this.validateSettings(arguments);\n      this.setupConstants(arguments);\n      if (this.fallbackRequested) return;\n      this.setupArguments(arguments);\n      if (this.fallbackRequested) return;\n      this.updateMaxTexSize();\n      this.translateSource();\n      var failureResult = this.pickRenderStrategy(arguments);\n\n      if (failureResult) {\n        return failureResult;\n      }\n\n      var texSize = this.texSize,\n          gl = this.context,\n          canvas = this.canvas;\n      gl.enable(gl.SCISSOR_TEST);\n\n      if (this.pipeline && this.precision === 'single') {\n        gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n        canvas.width = this.maxTexSize[0];\n        canvas.height = this.maxTexSize[1];\n      } else {\n        gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n        canvas.width = this.maxTexSize[0];\n        canvas.height = this.maxTexSize[1];\n      }\n\n      var threadDim = this.threadDim = Array.from(this.output);\n\n      while (threadDim.length < 3) {\n        threadDim.push(1);\n      }\n\n      var compiledVertexShader = this.getVertexShader(arguments);\n      var vertShader = gl.createShader(gl.VERTEX_SHADER);\n      gl.shaderSource(vertShader, compiledVertexShader);\n      gl.compileShader(vertShader);\n      this.vertShader = vertShader;\n      var compiledFragmentShader = this.getFragmentShader(arguments);\n      var fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n      gl.shaderSource(fragShader, compiledFragmentShader);\n      gl.compileShader(fragShader);\n      this.fragShader = fragShader;\n\n      if (this.debug) {\n        console.log('GLSL Shader Output:');\n        console.log(compiledFragmentShader);\n      }\n\n      if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n        throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n      }\n\n      if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n        throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n      }\n\n      var program = this.program = gl.createProgram();\n      gl.attachShader(program, vertShader);\n      gl.attachShader(program, fragShader);\n      gl.linkProgram(program);\n      this.framebuffer = gl.createFramebuffer();\n      this.framebuffer.width = texSize[0];\n      this.framebuffer.height = texSize[1];\n      var vertices = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);\n      var texCoords = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n      var texCoordOffset = vertices.byteLength;\n      var buffer = this.buffer;\n\n      if (!buffer) {\n        buffer = this.buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n      } else {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      }\n\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n      gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n      var aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n      gl.enableVertexAttribArray(aPosLoc);\n      gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n      var aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n      gl.enableVertexAttribArray(aTexCoordLoc);\n      gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      var i = 0;\n      gl.useProgram(this.program);\n\n      for (var p in this.constants) {\n        this.kernelConstants[i++].updateValue(this.constants[p]);\n      }\n\n      if (!this.immutable) {\n        this._setupOutputTexture();\n\n        if (this.subKernels !== null && this.subKernels.length > 0) {\n          this._setupSubOutputTextures();\n        }\n      }\n    }\n  }, {\n    key: \"translateSource\",\n    value: function translateSource() {\n      var functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n        fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n      });\n      this.translatedSource = functionBuilder.getPrototypeString('kernel');\n\n      if (!this.graphical && !this.returnType) {\n        this.returnType = functionBuilder.getKernelResultType();\n      }\n\n      if (this.subKernels && this.subKernels.length > 0) {\n        for (var i = 0; i < this.subKernels.length; i++) {\n          var subKernel = this.subKernels[i];\n\n          if (!subKernel.returnType) {\n            subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var kernelArguments = this.kernelArguments;\n      var texSize = this.texSize;\n      var gl = this.context;\n      gl.useProgram(this.program);\n      gl.scissor(0, 0, texSize[0], texSize[1]);\n\n      if (this.dynamicOutput) {\n        this.setUniform3iv('uOutputDim', this.threadDim);\n        this.setUniform2iv('uTexSize', texSize);\n      }\n\n      this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n      this.switchingKernels = false;\n\n      for (var i = 0; i < kernelArguments.length; i++) {\n        kernelArguments[i].updateValue(arguments[i]);\n        if (this.switchingKernels) return;\n      }\n\n      if (this.plugins) {\n        for (var _i2 = 0; _i2 < this.plugins.length; _i2++) {\n          var plugin = this.plugins[_i2];\n\n          if (plugin.onBeforeRun) {\n            plugin.onBeforeRun(this);\n          }\n        }\n      }\n\n      if (this.graphical) {\n        if (this.pipeline) {\n          gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n          if (!this.outputTexture || this.immutable) {\n            this._setupOutputTexture();\n          }\n\n          gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n          return new this.TextureConstructor({\n            texture: this.outputTexture,\n            size: texSize,\n            dimensions: this.threadDim,\n            output: this.output,\n            context: this.context\n          });\n        }\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return;\n      }\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n      if (this.immutable) {\n        this._setupOutputTexture();\n      }\n\n      if (this.subKernels !== null) {\n        if (this.immutable) {\n          this._setupSubOutputTextures();\n        }\n\n        this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n      }\n\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n    /**\n     * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n     * @returns {Object} Output Texture Cache\n     */\n\n  }, {\n    key: \"getOutputTexture\",\n    value: function getOutputTexture() {\n      return this.outputTexture;\n    }\n    /**\n     * @desc Setup and replace output texture\n     */\n\n  }, {\n    key: \"_setupOutputTexture\",\n    value: function _setupOutputTexture() {\n      var gl = this.context;\n      var texSize = this.texSize;\n      var texture = this.outputTexture = this.context.createTexture();\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST); // if (this.precision === 'single') {\n      //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      // } else {\n      //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      // }\n\n      if (this.precision === 'single') {\n        if (this.pipeline) {\n          // TODO: investigate if webgl1 can handle gl.RED usage in gl.texImage2D, otherwise, simplify the below\n          switch (this.returnType) {\n            case 'Number':\n            case 'Float':\n            case 'Integer':\n              if (this.optimizeFloatMemory) {\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n              } else {\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n              }\n\n              break;\n\n            case 'Array(2)':\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n              break;\n\n            case 'Array(3)':\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n              break;\n\n            case 'Array(4)':\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n              break;\n\n            default:\n              if (!this.graphical) {\n                throw new Error('Unhandled return type');\n              }\n\n          }\n        } else {\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n        }\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    }\n    /**\n     * @desc Setup and replace sub-output textures\n     */\n\n  }, {\n    key: \"_setupSubOutputTextures\",\n    value: function _setupSubOutputTextures() {\n      var gl = this.context;\n      var texSize = this.texSize;\n      this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n      this.subKernelOutputTextures = [];\n\n      for (var i = 0; i < this.subKernels.length; i++) {\n        var texture = this.context.createTexture();\n        this.subKernelOutputTextures.push(texture);\n        this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n        gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        if (this.precision === 'single') {\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n        } else {\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        }\n\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n      }\n    }\n    /**\n     * @desc This uses *getTextureCache** to get the Texture Cache of the argument supplied\n     * @param {String} name - Name of the argument\n     */\n\n  }, {\n    key: \"getArgumentTexture\",\n    value: function getArgumentTexture(name) {\n      return this.getTextureCache(\"ARGUMENT_\".concat(name));\n    }\n    /**\n     * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\n     * @param {String} name - Name of the subkernel, argument, or kernel.\n     * @returns {Object} Texture cache\n     */\n\n  }, {\n    key: \"getTextureCache\",\n    value: function getTextureCache(name) {\n      if (this.textureCache.hasOwnProperty(name)) {\n        return this.textureCache[name];\n      }\n\n      return this.textureCache[name] = this.context.createTexture();\n    }\n    /**\n     * @desc removes a texture from the kernel's cache\n     * @param {String} name - Name of texture\n     */\n\n  }, {\n    key: \"detachTextureCache\",\n    value: function detachTextureCache(name) {\n      delete this.textureCache[name];\n    }\n  }, {\n    key: \"setUniform1f\",\n    value: function setUniform1f(name, value) {\n      if (this.uniform1fCache.hasOwnProperty(name)) {\n        var cache = this.uniform1fCache[name];\n\n        if (value === cache) {\n          return;\n        }\n      }\n\n      this.uniform1fCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform1f(loc, value);\n    }\n  }, {\n    key: \"setUniform1i\",\n    value: function setUniform1i(name, value) {\n      if (this.uniform1iCache.hasOwnProperty(name)) {\n        var cache = this.uniform1iCache[name];\n\n        if (value === cache) {\n          return;\n        }\n      }\n\n      this.uniform1iCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform1i(loc, value);\n    }\n  }, {\n    key: \"setUniform2f\",\n    value: function setUniform2f(name, value1, value2) {\n      if (this.uniform2fCache.hasOwnProperty(name)) {\n        var cache = this.uniform2fCache[name];\n\n        if (value1 === cache[0] && value2 === cache[1]) {\n          return;\n        }\n      }\n\n      this.uniform2fCache[name] = [value1, value2];\n      var loc = this.getUniformLocation(name);\n      this.context.uniform2f(loc, value1, value2);\n    }\n  }, {\n    key: \"setUniform2fv\",\n    value: function setUniform2fv(name, value) {\n      if (this.uniform2fvCache.hasOwnProperty(name)) {\n        var cache = this.uniform2fvCache[name];\n\n        if (value[0] === cache[0] && value[1] === cache[1]) {\n          return;\n        }\n      }\n\n      this.uniform2fvCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform2fv(loc, value);\n    }\n  }, {\n    key: \"setUniform2iv\",\n    value: function setUniform2iv(name, value) {\n      if (this.uniform2ivCache.hasOwnProperty(name)) {\n        var cache = this.uniform2ivCache[name];\n\n        if (value[0] === cache[0] && value[1] === cache[1]) {\n          return;\n        }\n      }\n\n      this.uniform2ivCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform2iv(loc, value);\n    }\n  }, {\n    key: \"setUniform3fv\",\n    value: function setUniform3fv(name, value) {\n      if (this.uniform3fvCache.hasOwnProperty(name)) {\n        var cache = this.uniform3fvCache[name];\n\n        if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n          return;\n        }\n      }\n\n      this.uniform3fvCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform3fv(loc, value);\n    }\n  }, {\n    key: \"setUniform3iv\",\n    value: function setUniform3iv(name, value) {\n      if (this.uniform3ivCache.hasOwnProperty(name)) {\n        var cache = this.uniform3ivCache[name];\n\n        if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n          return;\n        }\n      }\n\n      this.uniform3ivCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform3iv(loc, value);\n    }\n  }, {\n    key: \"setUniform3fv\",\n    value: function setUniform3fv(name, value) {\n      if (this.uniform3fvCache.hasOwnProperty(name)) {\n        var cache = this.uniform3fvCache[name];\n\n        if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n          return;\n        }\n      }\n\n      this.uniform3fvCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform3fv(loc, value);\n    }\n  }, {\n    key: \"setUniform4iv\",\n    value: function setUniform4iv(name, value) {\n      if (this.uniform4ivCache.hasOwnProperty(name)) {\n        var cache = this.uniform4ivCache[name];\n\n        if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2] && value[3] === cache[3]) {\n          return;\n        }\n      }\n\n      this.uniform4ivCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform4iv(loc, value);\n    }\n  }, {\n    key: \"setUniform4fv\",\n    value: function setUniform4fv(name, value) {\n      if (this.uniform4fvCache.hasOwnProperty(name)) {\n        var cache = this.uniform4fvCache[name];\n\n        if (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2] && value[3] === cache[3]) {\n          return;\n        }\n      }\n\n      this.uniform4fvCache[name] = value;\n      var loc = this.getUniformLocation(name);\n      this.context.uniform4fv(loc, value);\n    }\n    /**\n     * @desc Return WebGlUniformLocation for various variables\n     * related to webGl program, such as user-defined variables,\n     * as well as, dimension sizes, etc.\n     */\n\n  }, {\n    key: \"getUniformLocation\",\n    value: function getUniformLocation(name) {\n      if (this.programUniformLocationCache.hasOwnProperty(name)) {\n        return this.programUniformLocationCache[name];\n      }\n\n      return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n    }\n    /**\n     * @desc Generate Shader artifacts for the kernel program.\n     * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\n     *\n     * @param {Array} args - The actual parameters sent to the Kernel\n     * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\n     */\n\n  }, {\n    key: \"_getFragShaderArtifactMap\",\n    value: function _getFragShaderArtifactMap(args) {\n      return {\n        HEADER: this._getHeaderString(),\n        LOOP_MAX: this._getLoopMaxString(),\n        PLUGINS: this._getPluginsString(),\n        CONSTANTS: this._getConstantsString(),\n        DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n        ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n        DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n        MAIN_CONSTANTS: this._getMainConstantsString(),\n        MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n        KERNEL: this.getKernelString(),\n        MAIN_RESULT: this.getMainResultString(),\n        FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n        INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n        SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n        SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration()\n      };\n    }\n    /**\n     * @desc Generate Shader artifacts for the kernel program.\n     * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\n     *\n     * @param {Array} args - The actual parameters sent to the Kernel\n     * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\n     */\n\n  }, {\n    key: \"_getVertShaderArtifactMap\",\n    value: function _getVertShaderArtifactMap(args) {\n      return {\n        FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n        INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n        SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n        SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration()\n      };\n    }\n    /**\n     * @desc Get the header string for the program.\n     * This returns an empty string if no sub-kernels are defined.\n     *\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getHeaderString\",\n    value: function _getHeaderString() {\n      return this.subKernels !== null ? '#extension GL_EXT_draw_buffers : require\\n' : '';\n    }\n    /**\n     * @desc Get the maximum loop size String.\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getLoopMaxString\",\n    value: function _getLoopMaxString() {\n      return this.loopMaxIterations ? \" \".concat(parseInt(this.loopMaxIterations), \";\\n\") : ' 1000;\\n';\n    }\n  }, {\n    key: \"_getPluginsString\",\n    value: function _getPluginsString() {\n      var _this4 = this;\n\n      if (!this.plugins) return '\\n';\n      return this.plugins.map(function (plugin) {\n        return plugin.source && _this4.source.match(plugin.functionMatch) ? plugin.source : '';\n      }).join('\\n');\n    }\n    /**\n     * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getConstantsString\",\n    value: function _getConstantsString() {\n      var result = [];\n      var threadDim = this.threadDim,\n          texSize = this.texSize;\n\n      if (this.dynamicOutput) {\n        result.push('uniform ivec3 uOutputDim', 'uniform ivec2 uTexSize');\n      } else {\n        result.push(\"ivec3 uOutputDim = ivec3(\".concat(threadDim[0], \", \").concat(threadDim[1], \", \").concat(threadDim[2], \")\"), \"ivec2 uTexSize = ivec2(\".concat(texSize[0], \", \").concat(texSize[1], \")\"));\n      }\n\n      return utils.linesToString(result);\n    }\n    /**\n     * @desc Get texture coordinate string for the program\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getTextureCoordinate\",\n    value: function _getTextureCoordinate() {\n      var subKernels = this.subKernels;\n\n      if (subKernels === null || subKernels.length < 1) {\n        return 'varying vec2 vTexCoord;\\n';\n      } else {\n        return 'out vec2 vTexCoord;\\n';\n      }\n    }\n    /**\n     * @desc Get Decode32 endianness string for little-endian and big-endian\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getDecode32EndiannessString\",\n    value: function _getDecode32EndiannessString() {\n      return this.endianness === 'LE' ? '' : '  texel.rgba = texel.abgr;\\n';\n    }\n    /**\n     * @desc Get Encode32 endianness string for little-endian and big-endian\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getEncode32EndiannessString\",\n    value: function _getEncode32EndiannessString() {\n      return this.endianness === 'LE' ? '' : '  texel.rgba = texel.abgr;\\n';\n    }\n    /**\n     * @desc if fixIntegerDivisionAccuracy provide method to replace /\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getDivideWithIntegerCheckString\",\n    value: function _getDivideWithIntegerCheckString() {\n      return this.fixIntegerDivisionAccuracy ? \"float div_with_int_check(float x, float y) {\\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\\n    return float(int(x)/int(y));\\n  }\\n  return x / y;\\n}\" : '';\n    }\n    /**\n     * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n     * @param {Array} args - The actual parameters sent to the Kernel\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getMainArgumentsString\",\n    value: function _getMainArgumentsString(args) {\n      var results = [];\n      var argumentNames = this.argumentNames;\n\n      for (var i = 0; i < argumentNames.length; i++) {\n        results.push(this.kernelArguments[i].getSource(args[i]));\n      }\n\n      return results.join('');\n    }\n  }, {\n    key: \"_getMainConstantsString\",\n    value: function _getMainConstantsString() {\n      var result = [];\n      var constants = this.constants;\n\n      if (constants) {\n        var i = 0;\n\n        for (var name in constants) {\n          result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n        }\n      }\n\n      return result.join('');\n    }\n    /**\n     * @desc Get Kernel program string (in *glsl*) for a kernel.\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"getKernelString\",\n    value: function getKernelString() {\n      var kernelResultDeclaration;\n\n      switch (this.returnType) {\n        case 'Array(2)':\n          kernelResultDeclaration = 'vec2 kernelResult';\n          break;\n\n        case 'Array(3)':\n          kernelResultDeclaration = 'vec3 kernelResult';\n          break;\n\n        case 'Array(4)':\n          kernelResultDeclaration = 'vec4 kernelResult';\n          break;\n\n        case 'LiteralInteger':\n        case 'Float':\n        case 'Number':\n        case 'Integer':\n          kernelResultDeclaration = 'float kernelResult';\n          break;\n\n        default:\n          if (this.graphical) {\n            kernelResultDeclaration = 'float kernelResult';\n          } else {\n            throw new Error(\"unrecognized output type \\\"\".concat(this.returnType, \"\\\"\"));\n          }\n\n      }\n\n      var result = [];\n      var subKernels = this.subKernels;\n\n      if (subKernels !== null) {\n        result.push(kernelResultDeclaration);\n\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            for (var i = 0; i < subKernels.length; i++) {\n              var subKernel = subKernels[i];\n              result.push(subKernel.returnType === 'Integer' ? \"int subKernelResult_\".concat(subKernel.name, \" = 0\") : \"float subKernelResult_\".concat(subKernel.name, \" = 0.0\"));\n            }\n\n            break;\n\n          case 'Array(2)':\n            for (var _i3 = 0; _i3 < subKernels.length; _i3++) {\n              result.push(\"vec2 subKernelResult_\".concat(subKernels[_i3].name));\n            }\n\n            break;\n\n          case 'Array(3)':\n            for (var _i4 = 0; _i4 < subKernels.length; _i4++) {\n              result.push(\"vec3 subKernelResult_\".concat(subKernels[_i4].name));\n            }\n\n            break;\n\n          case 'Array(4)':\n            for (var _i5 = 0; _i5 < subKernels.length; _i5++) {\n              result.push(\"vec4 subKernelResult_\".concat(subKernels[_i5].name));\n            }\n\n            break;\n        }\n      } else {\n        result.push(kernelResultDeclaration);\n      }\n\n      return utils.linesToString(result) + this.translatedSource;\n    }\n  }, {\n    key: \"getMainResultGraphical\",\n    value: function getMainResultGraphical() {\n      return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = actualColor']);\n    }\n  }, {\n    key: \"getMainResultPackedPixels\",\n    value: function getMainResultPackedPixels() {\n      switch (this.returnType) {\n        case 'LiteralInteger':\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n          return this.getMainResultKernelPackedPixels() + this.getMainResultSubKernelPackedPixels();\n\n        default:\n          throw new Error(\"packed output only usable with Numbers, \\\"\".concat(this.returnType, \"\\\" specified\"));\n      }\n    }\n    /**\n     * @return {String}\n     */\n\n  }, {\n    key: \"getMainResultKernelPackedPixels\",\n    value: function getMainResultKernelPackedPixels() {\n      return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', \"  gl_FragData[0] = \".concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', \"(kernelResult)\")]);\n    }\n    /**\n     * @return {String}\n     */\n\n  }, {\n    key: \"getMainResultSubKernelPackedPixels\",\n    value: function getMainResultSubKernelPackedPixels() {\n      var result = [];\n      if (!this.subKernels) return '';\n\n      for (var i = 0; i < this.subKernels.length; i++) {\n        var subKernel = this.subKernels[i];\n\n        if (subKernel.returnType === 'Integer') {\n          result.push(\"  gl_FragData[\".concat(i + 1, \"] = \").concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', \"(float(subKernelResult_\").concat(this.subKernels[i].name, \"))\"));\n        } else {\n          result.push(\"  gl_FragData[\".concat(i + 1, \"] = \").concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', \"(subKernelResult_\").concat(this.subKernels[i].name, \")\"));\n        }\n      }\n\n      return utils.linesToString(result);\n    }\n  }, {\n    key: \"getMainResultMemoryOptimizedFloats\",\n    value: function getMainResultMemoryOptimizedFloats() {\n      var result = ['  index *= 4'];\n\n      switch (this.returnType) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n          var channels = ['r', 'g', 'b', 'a'];\n\n          for (var i = 0; i < channels.length; i++) {\n            var channel = channels[i];\n            this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n            this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n\n            if (i + 1 < channels.length) {\n              result.push('  index += 1');\n            }\n          }\n\n          break;\n\n        default:\n          throw new Error(\"optimized output only usable with Numbers, \".concat(this.returnType, \" specified\"));\n      }\n\n      return utils.linesToString(result);\n    }\n  }, {\n    key: \"getMainResultKernelMemoryOptimizedFloats\",\n    value: function getMainResultKernelMemoryOptimizedFloats(result, channel) {\n      result.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', \"  gl_FragData[0].\".concat(channel, \" = kernelResult\"));\n    }\n  }, {\n    key: \"getMainResultSubKernelMemoryOptimizedFloats\",\n    value: function getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; i++) {\n        var subKernel = this.subKernels[i];\n\n        if (subKernel.returnType === 'Integer') {\n          result.push(\"  gl_FragData[\".concat(i + 1, \"].\").concat(channel, \" = float(subKernelResult_\").concat(this.subKernels[i].name, \")\"));\n        } else {\n          result.push(\"  gl_FragData[\".concat(i + 1, \"].\").concat(channel, \" = subKernelResult_\").concat(this.subKernels[i].name));\n        }\n      }\n    }\n  }, {\n    key: \"getMainResultKernelNumberTexture\",\n    value: function getMainResultKernelNumberTexture() {\n      return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult'];\n    }\n  }, {\n    key: \"getMainResultSubKernelNumberTexture\",\n    value: function getMainResultSubKernelNumberTexture() {\n      var result = [];\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; ++i) {\n        var subKernel = this.subKernels[i];\n\n        if (subKernel.returnType === 'Integer') {\n          result.push(\"  gl_FragData[\".concat(i + 1, \"][0] = float(subKernelResult_\").concat(subKernel.name, \")\"));\n        } else {\n          result.push(\"  gl_FragData[\".concat(i + 1, \"][0] = subKernelResult_\").concat(subKernel.name));\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getMainResultKernelArray2Texture\",\n    value: function getMainResultKernelArray2Texture() {\n      return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult[0]', '  gl_FragData[0][1] = kernelResult[1]'];\n    }\n  }, {\n    key: \"getMainResultSubKernelArray2Texture\",\n    value: function getMainResultSubKernelArray2Texture() {\n      var result = [];\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; ++i) {\n        result.push(\"  gl_FragData[\".concat(i + 1, \"][0] = subKernelResult_\").concat(this.subKernels[i].name, \"[0]\"), \"  gl_FragData[\".concat(i + 1, \"][1] = subKernelResult_\").concat(this.subKernels[i].name, \"[1]\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getMainResultKernelArray3Texture\",\n    value: function getMainResultKernelArray3Texture() {\n      return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0][0] = kernelResult[0]', '  gl_FragData[0][1] = kernelResult[1]', '  gl_FragData[0][2] = kernelResult[2]'];\n    }\n  }, {\n    key: \"getMainResultSubKernelArray3Texture\",\n    value: function getMainResultSubKernelArray3Texture() {\n      var result = [];\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; ++i) {\n        result.push(\"  gl_FragData[\".concat(i + 1, \"][0] = subKernelResult_\").concat(this.subKernels[i].name, \"[0]\"), \"  gl_FragData[\".concat(i + 1, \"][1] = subKernelResult_\").concat(this.subKernels[i].name, \"[1]\"), \"  gl_FragData[\".concat(i + 1, \"][2] = subKernelResult_\").concat(this.subKernels[i].name, \"[2]\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getMainResultKernelArray4Texture\",\n    value: function getMainResultKernelArray4Texture() {\n      return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragData[0] = kernelResult'];\n    }\n  }, {\n    key: \"getMainResultSubKernelArray4Texture\",\n    value: function getMainResultSubKernelArray4Texture() {\n      var result = [];\n      if (!this.subKernels) return result;\n\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (var i = 0; i < this.subKernels.length; ++i) {\n            var subKernel = this.subKernels[i];\n\n            if (subKernel.returnType === 'Integer') {\n              result.push(\"  gl_FragData[\".concat(i + 1, \"] = float(subKernelResult_\").concat(this.subKernels[i].name, \")\"));\n            } else {\n              result.push(\"  gl_FragData[\".concat(i + 1, \"] = subKernelResult_\").concat(this.subKernels[i].name));\n            }\n          }\n\n          break;\n\n        case 'Array(2)':\n          for (var _i6 = 0; _i6 < this.subKernels.length; ++_i6) {\n            result.push(\"  gl_FragData[\".concat(_i6 + 1, \"][0] = subKernelResult_\").concat(this.subKernels[_i6].name, \"[0]\"), \"  gl_FragData[\".concat(_i6 + 1, \"][1] = subKernelResult_\").concat(this.subKernels[_i6].name, \"[1]\"));\n          }\n\n          break;\n\n        case 'Array(3)':\n          for (var _i7 = 0; _i7 < this.subKernels.length; ++_i7) {\n            result.push(\"  gl_FragData[\".concat(_i7 + 1, \"][0] = subKernelResult_\").concat(this.subKernels[_i7].name, \"[0]\"), \"  gl_FragData[\".concat(_i7 + 1, \"][1] = subKernelResult_\").concat(this.subKernels[_i7].name, \"[1]\"), \"  gl_FragData[\".concat(_i7 + 1, \"][2] = subKernelResult_\").concat(this.subKernels[_i7].name, \"[2]\"));\n          }\n\n          break;\n\n        case 'Array(4)':\n          for (var _i8 = 0; _i8 < this.subKernels.length; ++_i8) {\n            result.push(\"  gl_FragData[\".concat(_i8 + 1, \"][0] = subKernelResult_\").concat(this.subKernels[_i8].name, \"[0]\"), \"  gl_FragData[\".concat(_i8 + 1, \"][1] = subKernelResult_\").concat(this.subKernels[_i8].name, \"[1]\"), \"  gl_FragData[\".concat(_i8 + 1, \"][2] = subKernelResult_\").concat(this.subKernels[_i8].name, \"[2]\"), \"  gl_FragData[\".concat(_i8 + 1, \"][3] = subKernelResult_\").concat(this.subKernels[_i8].name, \"[3]\"));\n          }\n\n          break;\n      }\n\n      return result;\n    }\n    /**\n     * @param {String} src - Shader string\n     * @param {Object} map - Variables/Constants associated with shader\n     */\n\n  }, {\n    key: \"replaceArtifacts\",\n    value: function replaceArtifacts(src, map) {\n      return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, function (match, artifact) {\n        if (map.hasOwnProperty(artifact)) {\n          return map[artifact];\n        }\n\n        throw \"unhandled artifact \".concat(artifact);\n      });\n    }\n    /**\n     * @desc Get the fragment shader String.\n     * If the String hasn't been compiled yet,\n     * then this method compiles it as well\n     *\n     * @param {Array} args - The actual parameters sent to the Kernel\n     * @returns {string} Fragment Shader string\n     */\n\n  }, {\n    key: \"getFragmentShader\",\n    value: function getFragmentShader(args) {\n      if (this.compiledFragmentShader !== null) {\n        return this.compiledFragmentShader;\n      }\n\n      return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n    }\n    /**\n     * @desc Get the vertical shader String\n     * @param {Array|IArguments} args - The actual parameters sent to the Kernel\n     * @returns {string} Vertical Shader string\n     */\n\n  }, {\n    key: \"getVertexShader\",\n    value: function getVertexShader(args) {\n      if (this.compiledVertexShader !== null) {\n        return this.compiledVertexShader;\n      }\n\n      return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n    }\n    /**\n     * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var setupContextString = utils.linesToString([\"const gl = context\"]);\n      return glKernelString(this.constructor, arguments, this, setupContextString);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(removeCanvasReferences) {\n      if (this.outputTexture) {\n        this.context.deleteTexture(this.outputTexture);\n      }\n\n      if (this.buffer) {\n        this.context.deleteBuffer(this.buffer);\n      }\n\n      if (this.framebuffer) {\n        this.context.deleteFramebuffer(this.framebuffer);\n      }\n\n      if (this.vertShader) {\n        this.context.deleteShader(this.vertShader);\n      }\n\n      if (this.fragShader) {\n        this.context.deleteShader(this.fragShader);\n      }\n\n      if (this.program) {\n        this.context.deleteProgram(this.program);\n      }\n\n      var keys = Object.keys(this.textureCache);\n\n      for (var i = 0; i < keys.length; i++) {\n        var name = keys[i];\n        this.context.deleteTexture(this.textureCache[name]);\n      }\n\n      if (this.subKernelOutputTextures) {\n        for (var _i9 = 0; _i9 < this.subKernelOutputTextures.length; _i9++) {\n          this.context.deleteTexture(this.subKernelOutputTextures[_i9]);\n        }\n      }\n\n      if (removeCanvasReferences) {\n        var idx = canvases.indexOf(this.canvas);\n\n        if (idx >= 0) {\n          canvases[idx] = null;\n          maxTexSizes[idx] = null;\n        }\n      }\n\n      this.destroyExtensions();\n      delete this.context;\n      delete this.canvas;\n    }\n  }, {\n    key: \"destroyExtensions\",\n    value: function destroyExtensions() {\n      this.extensions.OES_texture_float = null;\n      this.extensions.OES_texture_float_linear = null;\n      this.extensions.OES_element_index_uint = null;\n      this.extensions.WEBGL_draw_buffers = null;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(WebGLKernel.prototype), \"toJSON\", this).call(this);\n\n      json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n      return json;\n    }\n  }], [{\n    key: \"destroyContext\",\n    value: function destroyContext(context) {\n      var extension = context.getExtension('WEBGL_lose_context');\n\n      if (extension) {\n        extension.loseContext();\n      }\n    }\n  }]);\n\n  return WebGLKernel;\n}(GLKernel);\n\nmodule.exports = {\n  WebGLKernel: WebGLKernel\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../../texture'),\n    Texture = _require2.Texture;\n\nvar GLTextureUnsigned =\n/*#__PURE__*/\nfunction (_Texture) {\n  \"use strict\";\n\n  _inherits(GLTextureUnsigned, _Texture);\n\n  function GLTextureUnsigned(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureUnsigned);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureUnsigned).call(this, settings));\n    _this.type = 'NumberTexture';\n    return _this;\n  }\n\n  _createClass(GLTextureUnsigned, [{\n    key: \"renderRawOutput\",\n    value: function renderRawOutput() {\n      var gl = this.context;\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n      var result = new Uint8Array(this.size[0] * this.size[1] * 4);\n      gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n      return result;\n    }\n  }, {\n    key: \"renderValues\",\n    value: function renderValues() {\n      return new Float32Array(this.renderRawOutput().buffer);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n    }\n  }]);\n\n  return GLTextureUnsigned;\n}(Texture);\n\nmodule.exports = {\n  GLTextureUnsigned: GLTextureUnsigned\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../input'),\n    Input = _require2.Input;\n\nvar Kernel =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  _createClass(Kernel, null, [{\n    key: \"isContextMatch\",\n\n    /**\n     * @type {Boolean}\n     */\n    value: function isContextMatch(context) {\n      throw new Error(\"\\\"isContextMatch\\\" not implemented on \".concat(this.name));\n    }\n    /**\n     * @type {IKernelFeatures}\n     * Used internally to populate the kernel.feature, which is a getter for the output of this value\n     */\n\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      throw new Error(\"\\\"getFeatures\\\" not implemented on \".concat(this.name));\n    }\n  }, {\n    key: \"destroyContext\",\n    value: function destroyContext(context) {\n      throw new Error(\"\\\"destroyContext\\\" called on \".concat(this.name));\n    }\n  }, {\n    key: \"nativeFunctionArguments\",\n    value: function nativeFunctionArguments() {\n      throw new Error(\"\\\"nativeFunctionArguments\\\" called on \".concat(this.name));\n    }\n  }, {\n    key: \"nativeFunctionReturnType\",\n    value: function nativeFunctionReturnType() {\n      throw new Error(\"\\\"nativeFunctionReturnType\\\" called on \".concat(this.name));\n    }\n  }, {\n    key: \"combineKernels\",\n    value: function combineKernels() {\n      throw new Error(\"\\\"combineKernels\\\" called on \".concat(this.name));\n    }\n    /**\n     *\n     * @param {string|object} source\n     * @param [settings]\n     */\n\n  }, {\n    key: \"isSupported\",\n\n    /**\n     * @type {Boolean}\n     */\n    get: function get() {\n      throw new Error(\"\\\"isSupported\\\" not implemented on \".concat(this.name));\n    }\n  }]);\n\n  function Kernel(source, settings) {\n    _classCallCheck(this, Kernel);\n\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n    /**\n     * Name of the arguments found from parsing source argument\n     * @type {String[]}\n     */\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    /**\n     * The function source\n     * @type {String}\n     */\n\n    this.source = source;\n    /**\n     * The size of the kernel's output\n     * @type {Number[]}\n     */\n\n    this.output = null;\n    /**\n     * Debug mode\n     * @type {Boolean}\n     */\n\n    this.debug = false;\n    /**\n     * Graphical mode\n     * @type {Boolean}\n     */\n\n    this.graphical = false;\n    /**\n     * Maximum loops when using argument values to prevent infinity\n     * @type {Number}\n     */\n\n    this.loopMaxIterations = 0;\n    /**\n     * Constants used in kernel via `this.constants`\n     * @type {Object}\n     */\n\n    this.constants = null;\n    this.constantTypes = null;\n    this.constantBitRatios = null;\n    this.dynamicArguments = false;\n    this.dynamicOutput = true;\n    /**\n     *\n     * @type {Object}\n     */\n\n    this.canvas = null;\n    /**\n     *\n     * @type {WebGLRenderingContext}\n     */\n\n    this.context = null;\n    /**\n     *\n     * @type {Boolean}\n     */\n\n    this.checkContext = null;\n    /**\n     *\n     * @type {GPU}\n     */\n\n    this.gpu = null;\n    /**\n     *\n     * @type {IGPUFunction[]}\n     */\n\n    this.functions = null;\n    /**\n     *\n     * @type {IGPUNativeFunction[]}\n     */\n\n    this.nativeFunctions = null;\n    /**\n     *\n     * @type {ISubKernel[]}\n     */\n\n    this.subKernels = null;\n    /**\n     *\n     * @type {Boolean}\n     */\n\n    this.validate = true;\n    /**\n     * Enforces kernel to write to a new array or texture on run\n     * @type {Boolean}\n     */\n\n    this.immutable = false;\n    /**\n     * Enforces kernel to write to a texture on run\n     * @type {Boolean}\n     */\n\n    this.pipeline = false;\n    /**\n     * Make GPU use single precison or unsigned.  Acceptable values: 'single' or 'unsigned'\n     * @type {String|null}\n     * @enum 'single' | 'unsigned'\n     */\n\n    this.precision = null;\n    /**\n     *\n     * @type {String|null}\n     * @enum 'speed' | 'balanced' | 'precision'\n     */\n\n    this.tactic = 'balanced';\n    this.plugins = null;\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.warnVarUsage = true;\n  }\n\n  _createClass(Kernel, [{\n    key: \"mergeSettings\",\n    value: function mergeSettings(settings) {\n      for (var p in settings) {\n        if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n\n        switch (p) {\n          case 'output':\n            if (!Array.isArray(settings.output)) {\n              this.setOutput(settings.output); // Flatten output object\n\n              continue;\n            }\n\n            break;\n\n          case 'functions':\n            if (typeof settings.functions[0] === 'function') {\n              this.functions = settings.functions.map(function (source) {\n                return utils.functionToIFunction(source);\n              });\n              continue;\n            }\n\n            break;\n\n          case 'graphical':\n            if (settings[p] && !settings.hasOwnProperty('precision')) {\n              this.precision = 'unsigned';\n            }\n\n            this[p] = settings[p];\n            continue;\n        }\n\n        this[p] = settings[p];\n      }\n\n      if (!this.canvas) this.canvas = this.initCanvas();\n      if (!this.context) this.context = this.initContext();\n      if (!this.plugins) this.plugins = this.initPlugins(settings);\n    }\n    /**\n     * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\n     * and instantiates the program.\n     * @abstract\n     */\n\n  }, {\n    key: \"build\",\n    value: function build() {\n      throw new Error(\"\\\"build\\\" not defined on \".concat(this.constructor.name));\n    }\n    /**\n     * @desc Run the kernel program, and send the output to renderOutput\n     * <p> This method calls a helper method *renderOutput* to return the result. </p>\n     * @returns {Float32Array|Float32Array[]|Float32Array[][]|void} Result The final output of the program, as float, and as Textures for reuse.\n     * @abstract\n     */\n\n  }, {\n    key: \"run\",\n    value: function run() {\n      throw new Error(\"\\\"run\\\" not defined on \".concat(this.constructor.name));\n    }\n    /**\n     * @abstract\n     * @return {Object}\n     */\n\n  }, {\n    key: \"initCanvas\",\n    value: function initCanvas() {\n      throw new Error(\"\\\"initCanvas\\\" not defined on \".concat(this.constructor.name));\n    }\n    /**\n     * @abstract\n     * @return {Object}\n     */\n\n  }, {\n    key: \"initContext\",\n    value: function initContext() {\n      throw new Error(\"\\\"initContext\\\" not defined on \".concat(this.constructor.name));\n    }\n    /**\n     * @param {IFunctionSettings} settings\n     * @return {Object};\n     * @abstract\n     */\n\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins(settings) {\n      throw new Error(\"\\\"initPlugins\\\" not defined on \".concat(this.constructor.name));\n    }\n    /**\n     * @desc Setup the parameter types for the parameters\n     * supplied to the Kernel function\n     *\n     * @param {IArguments} args - The actual parameters sent to the Kernel\n     */\n\n  }, {\n    key: \"setupArguments\",\n    value: function setupArguments(args) {\n      this.kernelArguments = [];\n\n      if (!this.argumentTypes) {\n        if (!this.argumentTypes) {\n          this.argumentTypes = [];\n\n          for (var i = 0; i < args.length; i++) {\n            var argType = utils.getVariableType(args[i], this.strictIntegers);\n            var type = argType === 'Integer' ? 'Number' : argType;\n            this.argumentTypes.push(type);\n            this.kernelArguments.push({\n              type: type\n            });\n          }\n        }\n      } else {\n        for (var _i = 0; _i < this.argumentTypes.length; _i++) {\n          this.kernelArguments.push({\n            type: this.argumentTypes[_i]\n          });\n        }\n      } // setup sizes\n\n\n      this.argumentSizes = new Array(args.length);\n      this.argumentBitRatios = new Int32Array(args.length);\n\n      for (var _i2 = 0; _i2 < args.length; _i2++) {\n        var arg = args[_i2];\n        this.argumentSizes[_i2] = arg.constructor === Input ? arg.size : null;\n        this.argumentBitRatios[_i2] = this.getBitRatio(arg);\n      }\n\n      if (this.argumentNames.length !== args.length) {\n        throw new Error(\"arguments are miss-aligned\");\n      }\n    }\n    /**\n     * Setup constants\n     */\n\n  }, {\n    key: \"setupConstants\",\n    value: function setupConstants() {\n      this.kernelConstants = [];\n      var needsConstantTypes = this.constantTypes === null;\n\n      if (needsConstantTypes) {\n        this.constantTypes = {};\n      }\n\n      this.constantBitRatios = {};\n\n      if (this.constants) {\n        for (var name in this.constants) {\n          if (needsConstantTypes) {\n            var type = utils.getVariableType(this.constants[name], this.strictIntegers);\n            this.constantTypes[name] = type;\n            this.kernelConstants.push({\n              name: name,\n              type: type\n            });\n          } else {\n            this.kernelConstants.push({\n              name: name,\n              type: this.constantTypes[name]\n            });\n          }\n\n          this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n        }\n      }\n    }\n    /**\n     *\n     * @param flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setOptimizeFloatMemory\",\n    value: function setOptimizeFloatMemory(flag) {\n      this.optimizeFloatMemory = flag;\n      return this;\n    }\n    /**\n     * @desc Set output dimensions of the kernel function\n     * @param {Array|Object} output - The output array to set the kernel output size to\n     */\n\n  }, {\n    key: \"setOutput\",\n    value: function setOutput(output) {\n      if (output.hasOwnProperty('x')) {\n        if (output.hasOwnProperty('y')) {\n          if (output.hasOwnProperty('z')) {\n            this.output = [output.x, output.y, output.z];\n          } else {\n            this.output = [output.x, output.y];\n          }\n        } else {\n          this.output = [output.x];\n        }\n      } else {\n        this.output = output;\n      }\n\n      return this;\n    }\n    /**\n     * @desc Toggle debug mode\n     * @param {Boolean} flag - true to enable debug\n     */\n\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(flag) {\n      this.debug = flag;\n      return this;\n    }\n    /**\n     * @desc Toggle graphical output mode\n     * @param {Boolean} flag - true to enable graphical output\n     */\n\n  }, {\n    key: \"setGraphical\",\n    value: function setGraphical(flag) {\n      this.graphical = flag;\n      this.precision = 'unsigned';\n      return this;\n    }\n    /**\n     * @desc Set the maximum number of loop iterations\n     * @param {number} max - iterations count\n     *\n     */\n\n  }, {\n    key: \"setLoopMaxIterations\",\n    value: function setLoopMaxIterations(max) {\n      this.loopMaxIterations = max;\n      return this;\n    }\n    /**\n     * @desc Set Constants\n     */\n\n  }, {\n    key: \"setConstants\",\n    value: function setConstants(constants) {\n      this.constants = constants;\n      return this;\n    }\n    /**\n     *\n     * @param [IKernelValueTypes] constantTypes\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setConstantTypes\",\n    value: function setConstantTypes(constantTypes) {\n      this.constantTypes = constantTypes;\n      return this;\n    }\n    /**\n     *\n     * @param {IFunction[]|KernelFunction[]} functions\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setFunctions\",\n    value: function setFunctions(functions) {\n      if (typeof functions[0] === 'function') {\n        this.functions = functions.map(function (source) {\n          return utils.functionToIFunction(source);\n        });\n      } else {\n        this.functions = functions;\n      }\n\n      return this;\n    }\n    /**\n     * Set writing to texture on/off\n     * @param flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setPipeline\",\n    value: function setPipeline(flag) {\n      this.pipeline = flag;\n      return this;\n    }\n    /**\n     * Set precision to 'unsigned' or 'single'\n     * @param {String} flag 'unsigned' or 'single'\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setPrecision\",\n    value: function setPrecision(flag) {\n      this.precision = flag;\n      return this;\n    }\n    /**\n     * @param flag\n     * @return {Kernel}\n     * @deprecated\n     */\n\n  }, {\n    key: \"setOutputToTexture\",\n    value: function setOutputToTexture(flag) {\n      utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n      this.pipeline = flag;\n      return this;\n    }\n    /**\n     * Set to immutable\n     * @param flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setImmutable\",\n    value: function setImmutable(flag) {\n      this.immutable = flag;\n      return this;\n    }\n    /**\n     * @desc Bind the canvas to kernel\n     * @param {Object} canvas\n     */\n\n  }, {\n    key: \"setCanvas\",\n    value: function setCanvas(canvas) {\n      this.canvas = canvas;\n      return this;\n    }\n    /**\n     * @param {Boolean} flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setStrictIntegers\",\n    value: function setStrictIntegers(flag) {\n      this.strictIntegers = flag;\n      return this;\n    }\n    /**\n     *\n     * @param flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setDynamicOutput\",\n    value: function setDynamicOutput(flag) {\n      this.dynamicOutput = flag;\n      return this;\n    }\n    /**\n     * @deprecated\n     * @param flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setHardcodeConstants\",\n    value: function setHardcodeConstants(flag) {\n      utils.warnDeprecated('method', 'setHardcodeConstants');\n      this.setDynamicOutput(flag);\n      this.setDynamicArguments(flag);\n      return this;\n    }\n    /**\n     *\n     * @param flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setDynamicArguments\",\n    value: function setDynamicArguments(flag) {\n      this.dynamicArguments = flag;\n      return this;\n    }\n    /**\n     * @param {Boolean} flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setUseLegacyEncoder\",\n    value: function setUseLegacyEncoder(flag) {\n      this.useLegacyEncoder = flag;\n      return this;\n    }\n    /**\n     *\n     * @param {Boolean} flag\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setWarnVarUsage\",\n    value: function setWarnVarUsage(flag) {\n      this.warnVarUsage = flag;\n      return this;\n    }\n    /**\n     * @deprecated\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      utils.warnDeprecated('method', 'getCanvas');\n      return this.canvas;\n    }\n    /**\n     * @deprecated\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"getWebGl\",\n    value: function getWebGl() {\n      utils.warnDeprecated('method', 'getWebGl');\n      return this.context;\n    }\n    /**\n     * @desc Bind the webGL instance to kernel\n     * @param {WebGLRenderingContext} context - webGl instance to bind\n     */\n\n  }, {\n    key: \"setContext\",\n    value: function setContext(context) {\n      this.context = context;\n      return this;\n    }\n    /**\n     *\n     * @param [IKernelValueTypes|GPUVariableType[]] argumentTypes\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setArgumentTypes\",\n    value: function setArgumentTypes(argumentTypes) {\n      if (Array.isArray(argumentTypes)) {\n        this.argumentTypes = argumentTypes;\n      } else {\n        this.argumentTypes = [];\n\n        for (var p in argumentTypes) {\n          var argumentIndex = this.argumentNames.indexOf(p);\n          if (argumentIndex === -1) throw new Error(\"unable to find argument \".concat(p));\n          this.argumentTypes[argumentIndex] = argumentTypes[p];\n        }\n      }\n\n      return this;\n    }\n    /**\n     *\n     * @param [Tactic] tactic\n     * @return {Kernel}\n     */\n\n  }, {\n    key: \"setTactic\",\n    value: function setTactic(tactic) {\n      this.tactic = tactic;\n      return this;\n    }\n  }, {\n    key: \"requestFallback\",\n    value: function requestFallback(args) {\n      if (!this.onRequestFallback) {\n        throw new Error(\"\\\"onRequestFallback\\\" not defined on \".concat(this.constructor.name));\n      }\n\n      this.fallbackRequested = true;\n      return this.onRequestFallback(args);\n    }\n    /**\n     * @desc Validate settings\n     * @abstract\n     */\n\n  }, {\n    key: \"validateSettings\",\n    value: function validateSettings() {\n      throw new Error(\"\\\"validateSettings\\\" not defined on \".concat(this.constructor.name));\n    }\n    /**\n     * @desc Add a sub kernel to the root kernel instance.\n     * This is what `createKernelMap` uses.\n     *\n     * @param {ISubKernel} subKernel - function (as a String) of the subKernel to add\n     */\n\n  }, {\n    key: \"addSubKernel\",\n    value: function addSubKernel(subKernel) {\n      if (this.subKernels === null) {\n        this.subKernels = [];\n      }\n\n      if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n      if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n      if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n      this.subKernels.push(subKernel);\n      return this;\n    }\n    /**\n     * @desc Destroys all memory associated with this kernel\n     * @param {Boolean} [removeCanvasReferences] remove any associated canvas references\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy(removeCanvasReferences) {\n      throw new Error(\"\\\"destroy\\\" called on \".concat(this.constructor.name));\n    }\n    /**\n     * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n     * @param value\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getBitRatio\",\n    value: function getBitRatio(value) {\n      if (this.precision === 'single') {\n        // 8 and 16 are upconverted to float32\n        return 4;\n      } else if (Array.isArray(value[0])) {\n        return this.getBitRatio(value[0]);\n      } else if (value.constructor === Input) {\n        return this.getBitRatio(value.value);\n      }\n\n      switch (value.constructor) {\n        case Uint8ClampedArray:\n        case Uint8Array:\n        case Int8Array:\n          return 1;\n\n        case Uint16Array:\n        case Int16Array:\n          return 2;\n\n        case Float32Array:\n        case Int32Array:\n        default:\n          return 4;\n      }\n    }\n    /**\n     * @returns {number[]}\n     */\n\n  }, {\n    key: \"getPixels\",\n    value: function getPixels() {\n      throw new Error(\"\\\"getPixels\\\" called on \".concat(this.constructor.name));\n    }\n  }, {\n    key: \"checkOutput\",\n    value: function checkOutput() {\n      if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n      if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n\n      for (var i = 0; i < this.output.length; i++) {\n        if (isNaN(this.output[i]) || this.output[i] < 1) {\n          throw new Error(\"\".concat(this.constructor.name, \".output[\").concat(i, \"] incorrectly defined as `\").concat(this.output[i], \"`, needs to be numeric, and greater than 0\"));\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var settings = {\n        output: this.output,\n        threadDim: this.threadDim,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(function (plugin) {\n          return plugin.name;\n        }) : null,\n        returnType: this.returnType\n      };\n      return {\n        settings: settings\n      };\n    }\n  }]);\n\n  return Kernel;\n}();\n\nmodule.exports = {\n  Kernel: Kernel\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar acorn = require('acorn');\n\nvar _require = require('../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./function-tracer'),\n    FunctionTracer = _require2.FunctionTracer;\n/**\n *\n * @desc Represents a single function, inside JS, webGL, or openGL.\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n */\n\n\nvar FunctionNode =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   *\n   * @param {string|object} source\n   * @param {IFunctionSettings} [settings]\n   */\n  function FunctionNode(source, settings) {\n    _classCallCheck(this, FunctionNode);\n\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ? 'kernel' : settings.name || utils.getFunctionNameFromString(source) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.declarations = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerTrackArgumentSynonym = null;\n    this.lookupArgumentSynonym = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null;\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.warnVarUsage = true;\n\n    if (settings) {\n      for (var p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.synonymIndex = -1;\n    this.synonymUseIndex = 0;\n    this.argumentSynonym = {};\n    this.literalTypes = {};\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  _createClass(FunctionNode, [{\n    key: \"validate\",\n    value: function validate() {\n      if (typeof this.source !== 'string' && !this.ast) {\n        throw new Error('this.source not a string');\n      }\n\n      if (!this.ast && !utils.isFunctionString(this.source)) {\n        throw new Error('this.source not a function string');\n      }\n\n      if (!this.name) {\n        throw new Error('this.name could not be set');\n      }\n\n      if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n        throw new Error(\"argumentTypes count of \".concat(this.argumentTypes.length, \" exceeds \").concat(this.argumentNames.length));\n      }\n\n      if (this.output.length < 1) {\n        throw new Error('this.output is not big enough');\n      }\n    }\n    /**\n     * @param {String} name\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isIdentifierConstant\",\n    value: function isIdentifierConstant(name) {\n      if (!this.constants) return false;\n      return this.constants.hasOwnProperty(name);\n    }\n  }, {\n    key: \"isInput\",\n    value: function isInput(argumentName) {\n      return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n    }\n  }, {\n    key: \"pushState\",\n    value: function pushState(state) {\n      this.states.push(state);\n    }\n  }, {\n    key: \"popState\",\n    value: function popState(state) {\n      if (this.state !== state) {\n        throw new Error(\"Cannot popState \".concat(state, \" when in \").concat(this.state));\n      }\n\n      this.states.pop();\n    }\n  }, {\n    key: \"isState\",\n    value: function isState(state) {\n      return this.state === state;\n    }\n  }, {\n    key: \"astMemberExpressionUnroll\",\n\n    /**\n     * @function\n     * @name astMemberExpressionUnroll\n     * @desc Parses the abstract syntax tree for binary expression.\n     *\n     * <p>Utility function for astCallExpression.</p>\n     *\n     * @param {Object} ast - the AST object to parse\n     *\n     * @returns {String} the function namespace call, unrolled\n     */\n    value: function astMemberExpressionUnroll(ast) {\n      if (ast.type === 'Identifier') {\n        return ast.name;\n      } else if (ast.type === 'ThisExpression') {\n        return 'this';\n      }\n\n      if (ast.type === 'MemberExpression') {\n        if (ast.object && ast.property) {\n          //babel sniffing\n          if (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n            return this.astMemberExpressionUnroll(ast.property);\n          }\n\n          return this.astMemberExpressionUnroll(ast.object) + '.' + this.astMemberExpressionUnroll(ast.property);\n        }\n      } //babel sniffing\n\n\n      if (ast.hasOwnProperty('expressions')) {\n        var firstExpression = ast.expressions[0];\n\n        if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n          return this.astMemberExpressionUnroll(ast.expressions[1]);\n        }\n      } // Failure, unknown expression\n\n\n      throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n    }\n    /**\n     * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n     * This is used internally to convert to shader code\n     *\n     * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\n     *\n     * @returns {Object} The function AST Object, note that result is cached under this.ast;\n     */\n\n  }, {\n    key: \"getJsAST\",\n    value: function getJsAST(inParser) {\n      if (this.ast) {\n        return this.ast;\n      }\n\n      if (typeof this.source === 'object') {\n        this.traceFunctionAST(this.source);\n        return this.ast = this.source;\n      }\n\n      inParser = inParser || acorn;\n\n      if (inParser === null) {\n        throw new Error('Missing JS to AST parser');\n      }\n\n      var ast = Object.freeze(inParser.parse(\"const parser_\".concat(this.name, \" = \").concat(this.source, \";\"), {\n        locations: true\n      })); // take out the function object, outside the var declarations\n\n      var functionAST = ast.body[0].declarations[0].init;\n      this.traceFunctionAST(functionAST);\n\n      if (!ast) {\n        throw new Error('Failed to parse JS code');\n      }\n\n      return this.ast = functionAST;\n    }\n  }, {\n    key: \"traceFunctionAST\",\n    value: function traceFunctionAST(ast) {\n      var _ref = new FunctionTracer(ast),\n          contexts = _ref.contexts,\n          declarations = _ref.declarations,\n          functions = _ref.functions,\n          identifiers = _ref.identifiers,\n          functionCalls = _ref.functionCalls;\n\n      this.contexts = contexts;\n      this.identifiers = identifiers;\n      this.functionCalls = functionCalls;\n      this.declarations = [];\n      this.functions = functions;\n\n      for (var i = 0; i < declarations.length; i++) {\n        var declaration = declarations[i];\n        var _ast = declaration.ast,\n            context = declaration.context,\n            _name = declaration.name,\n            origin = declaration.origin,\n            forceInteger = declaration.forceInteger,\n            assignable = declaration.assignable;\n        var init = _ast.init;\n        var dependencies = this.getDependencies(init);\n        var valueType = null;\n\n        if (forceInteger) {\n          valueType = 'Integer';\n        } else {\n          if (init) {\n            var realType = this.getType(init);\n\n            switch (realType) {\n              case 'Integer':\n              case 'Float':\n              case 'Number':\n                if (init.type === 'MemberExpression') {\n                  valueType = realType;\n                } else {\n                  valueType = 'Number';\n                }\n\n                break;\n\n              case 'LiteralInteger':\n                valueType = 'Number';\n                break;\n\n              default:\n                valueType = realType;\n            }\n          }\n        }\n\n        this.declarations.push({\n          valueType: valueType,\n          dependencies: dependencies,\n          isSafe: this.isSafeDependencies(dependencies),\n          ast: _ast,\n          name: _name,\n          context: context,\n          origin: origin,\n          assignable: assignable\n        });\n      }\n\n      for (var _i = 0; _i < functions.length; _i++) {\n        this.onNestedFunction(functions[_i]);\n      }\n    }\n  }, {\n    key: \"getDeclaration\",\n    value: function getDeclaration(ast) {\n      for (var i = 0; i < this.identifiers.length; i++) {\n        var identifier = this.identifiers[i];\n\n        if (ast === identifier.ast && identifier.context.hasOwnProperty(ast.name)) {\n          for (var j = 0; j < this.declarations.length; j++) {\n            var declaration = this.declarations[j];\n\n            if (declaration.name === ast.name && declaration.context[ast.name] === identifier.context[ast.name]) {\n              return declaration;\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * @desc Return the type of parameter sent to subKernel/Kernel.\n     * @param {Object} ast - Identifier\n     * @returns {String} Type of the parameter\n     */\n\n  }, {\n    key: \"getVariableType\",\n    value: function getVariableType(ast) {\n      if (ast.type !== 'Identifier') {\n        throw new Error(\"ast of \".concat(ast.type, \" not \\\"Identifier\\\"\"));\n      }\n\n      var type = null;\n      var argumentIndex = this.argumentNames.indexOf(ast.name);\n\n      if (argumentIndex === -1) {\n        var declaration = this.getDeclaration(ast);\n\n        if (declaration) {\n          return declaration.valueType;\n        }\n      } else {\n        var argumentType = this.argumentTypes[argumentIndex];\n\n        if (argumentType) {\n          type = argumentType;\n        }\n      }\n\n      if (!type && this.strictTypingChecking) {\n        throw new Error(\"Declaration of \".concat(name, \" not found\"));\n      }\n\n      return type;\n    }\n    /**\n     * Generally used to lookup the value type returned from a member expressions\n     * @param {String} type\n     * @return {String}\n     */\n\n  }, {\n    key: \"getLookupType\",\n    value: function getLookupType(type) {\n      if (!typeLookupMap.hasOwnProperty(type)) {\n        throw new Error(\"unknown typeLookupMap \".concat(type));\n      }\n\n      return typeLookupMap[type];\n    }\n  }, {\n    key: \"getConstantType\",\n    value: function getConstantType(constantName) {\n      if (this.constantTypes[constantName]) {\n        var type = this.constantTypes[constantName];\n\n        if (type === 'Float') {\n          return 'Number';\n        } else {\n          return type;\n        }\n      }\n\n      throw new Error(\"Type for constant \\\"\".concat(constantName, \"\\\" not declared\"));\n    }\n    /**\n     * @desc Return the name of the *user argument*(subKernel argument) corresponding\n     * to the argument supplied to the kernel\n     *\n     * @param {String} name - Name of the argument\n     * @returns {String} Name of the parameter\n     */\n\n  }, {\n    key: \"getKernelArgumentName\",\n    value: function getKernelArgumentName(name) {\n      if (!this.lookupArgumentSynonym) return null;\n      var argumentIndex = this.argumentNames.indexOf(name);\n      if (argumentIndex === -1) return null;\n      return this.lookupArgumentSynonym('kernel', this.name, name);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this._string) return this._string;\n      return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var settings = {\n        source: this.source,\n        name: this.name,\n        constants: this.constants,\n        constantTypes: this.constantTypes,\n        isRootKernel: this.isRootKernel,\n        isSubKernel: this.isSubKernel,\n        debug: this.debug,\n        output: this.output,\n        loopMaxIterations: this.loopMaxIterations,\n        argumentNames: this.argumentNames,\n        argumentTypes: this.argumentTypes,\n        argumentSizes: this.argumentSizes,\n        returnType: this.returnType,\n        leadingReturnStatement: this.leadingReturnStatement,\n        followingReturnStatement: this.followingReturnStatement\n      };\n      return {\n        ast: this.ast,\n        settings: settings\n      };\n    }\n    /**\n     * Recursively looks up type for ast expression until it's found\n     * @param ast\n     * @returns {String|null}\n     */\n\n  }, {\n    key: \"getType\",\n    value: function getType(ast) {\n      if (Array.isArray(ast)) {\n        return this.getType(ast[ast.length - 1]);\n      }\n\n      switch (ast.type) {\n        case 'BlockStatement':\n          return this.getType(ast.body);\n\n        case 'ArrayExpression':\n          return \"Array(\".concat(ast.elements.length, \")\");\n\n        case 'Literal':\n          var literalKey = \"\".concat(ast.start, \",\").concat(ast.end);\n\n          if (this.literalTypes[literalKey]) {\n            return this.literalTypes[literalKey];\n          }\n\n          if (Number.isInteger(ast.value)) {\n            return 'LiteralInteger';\n          } else if (ast.value === true || ast.value === false) {\n            return 'Boolean';\n          } else {\n            return 'Number';\n          }\n\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              var functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n\n          if (ast.callee && ast.callee.name) {\n            var _functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(_functionName, ast.arguments);\n            return this.lookupReturnType(_functionName, ast, this);\n          }\n\n          throw this.astErrorOutput(\"Unhandled getType Type \\\"\".concat(ast.type, \"\\\"\"), ast);\n\n        case 'BinaryExpression':\n          // modulos is Number\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n\n            case '>':\n            case '<':\n              return 'Boolean';\n\n            case '&':\n            case '|':\n            case '^':\n            case '<<':\n            case '>>':\n            case '>>>':\n              return 'Integer';\n          }\n\n          var type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n\n          if (type === 'LiteralInteger') {\n            var rightType = this.getType(ast.right);\n\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n\n            return rightType;\n          }\n\n          return typeLookupMap[type] || type;\n\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n\n          return this.getType(ast.argument);\n\n        case 'VariableDeclaration':\n          {\n            var declarations = ast.declarations;\n            var lastType;\n\n            for (var i = 0; i < declarations.length; i++) {\n              var _declaration = declarations[i];\n              lastType = this.getType(_declaration);\n            }\n\n            if (!lastType) {\n              throw this.astErrorOutput(\"Unable to find type for declaration\", ast);\n            }\n\n            return lastType;\n          }\n\n        case 'VariableDeclarator':\n          var declaration = this.getDeclaration(ast.id);\n\n          if (!declaration) {\n            throw this.astErrorOutput(\"Unable to find declarator\", ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(\"Unable to find declarator valueType\", ast);\n          }\n\n          return declaration.valueType;\n\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n\n          if (this.isAstVariable(ast)) {\n            var signature = this.getVariableSignature(ast);\n\n            if (signature === 'value') {\n              var _type = this.getVariableType(ast);\n\n              if (!_type) {\n                throw this.astErrorOutput(\"Unable to find identifier valueType\", ast);\n              }\n\n              return _type;\n            }\n          }\n\n          var origin = this.findIdentifierOrigin(ast);\n\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n\n          return null;\n\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n\n              case 'floor':\n                return 'Integer';\n\n              case 'round':\n                return 'Integer';\n            }\n\n            return 'Number';\n          }\n\n          if (this.isAstVariable(ast)) {\n            var variableSignature = this.getVariableSignature(ast);\n\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getVariableType(ast.object));\n\n              case 'value[][]':\n                return this.getLookupType(this.getVariableType(ast.object.object));\n\n              case 'value[][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object));\n\n              case 'value[][][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object.object));\n\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n\n              case 'fn()[]':\n                return this.getLookupType(this.getType(ast.object));\n\n              case 'fn()[][]':\n                return this.getLookupType(this.getType(ast.object));\n\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n\n                switch (ast.property.name) {\n                  case 'r':\n                    return this.getLookupType(this.getVariableType(ast.object));\n\n                  case 'g':\n                    return this.getLookupType(this.getVariableType(ast.object));\n\n                  case 'b':\n                    return this.getLookupType(this.getVariableType(ast.object));\n\n                  case 'a':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                }\n\n              case '[][]':\n                return 'Number';\n            }\n\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          var lastReturn = this.findLastReturn(ast.body);\n\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n\n          return null;\n\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n\n        default:\n          throw this.astErrorOutput(\"Unhandled getType Type \\\"\".concat(ast.type, \"\\\"\"), ast);\n      }\n    }\n  }, {\n    key: \"inferArgumentTypesIfNeeded\",\n    value: function inferArgumentTypesIfNeeded(functionName, args) {\n      // ensure arguments are filled in, so when we lookup return type, we already can infer it\n      for (var i = 0; i < args.length; i++) {\n        if (!this.needsArgumentType(functionName, i)) continue;\n        var type = this.getType(args[i]);\n\n        if (!type) {\n          throw this.astErrorOutput(\"Unable to infer argument \".concat(i), args[i]);\n        }\n\n        this.assignArgumentType(functionName, i, type);\n      }\n    }\n  }, {\n    key: \"isAstMathVariable\",\n    value: function isAstMathVariable(ast) {\n      var mathProperties = ['E', 'PI', 'SQRT2', 'SQRT1_2', 'LN2', 'LN10', 'LOG2E', 'LOG10E'];\n      return ast.type === 'MemberExpression' && ast.object && ast.object.type === 'Identifier' && ast.object.name === 'Math' && ast.property && ast.property.type === 'Identifier' && mathProperties.indexOf(ast.property.name) > -1;\n    }\n  }, {\n    key: \"isAstMathFunction\",\n    value: function isAstMathFunction(ast) {\n      var mathFunctions = ['abs', 'acos', 'asin', 'atan', 'atan2', 'ceil', 'cos', 'exp', 'floor', 'log', 'log2', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sqrt', 'tan'];\n      return ast.type === 'CallExpression' && ast.callee && ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.object.type === 'Identifier' && ast.callee.object.name === 'Math' && ast.callee.property && ast.callee.property.type === 'Identifier' && mathFunctions.indexOf(ast.callee.property.name) > -1;\n    }\n  }, {\n    key: \"isAstVariable\",\n    value: function isAstVariable(ast) {\n      return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n    }\n  }, {\n    key: \"isSafe\",\n    value: function isSafe(ast) {\n      return this.isSafeDependencies(this.getDependencies(ast));\n    }\n  }, {\n    key: \"isSafeDependencies\",\n    value: function isSafeDependencies(dependencies) {\n      return dependencies && dependencies.every ? dependencies.every(function (dependency) {\n        return dependency.isSafe;\n      }) : true;\n    }\n    /**\n     *\n     * @param ast\n     * @param dependencies\n     * @param isNotSafe\n     * @return {Array}\n     */\n\n  }, {\n    key: \"getDependencies\",\n    value: function getDependencies(ast, dependencies, isNotSafe) {\n      if (!dependencies) {\n        dependencies = [];\n      }\n\n      if (!ast) return null;\n\n      if (Array.isArray(ast)) {\n        for (var i = 0; i < ast.length; i++) {\n          this.getDependencies(ast[i], dependencies, isNotSafe);\n        }\n\n        return dependencies;\n      }\n\n      switch (ast.type) {\n        case 'AssignmentExpression':\n          this.getDependencies(ast.left, dependencies, isNotSafe);\n          this.getDependencies(ast.right, dependencies, isNotSafe);\n          return dependencies;\n\n        case 'Literal':\n          dependencies.push({\n            origin: 'literal',\n            value: ast.value,\n            isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n          });\n          break;\n\n        case 'VariableDeclarator':\n          return this.getDependencies(ast.init, dependencies, isNotSafe);\n\n        case 'Identifier':\n          var declaration = this.getDeclaration(ast);\n\n          if (declaration) {\n            dependencies.push({\n              name: ast.name,\n              origin: 'declaration',\n              isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies)\n            });\n          } else if (this.argumentNames.indexOf(ast.name) > -1) {\n            dependencies.push({\n              name: ast.name,\n              origin: 'argument',\n              isSafe: false\n            });\n          } else if (this.strictTypingChecking) {\n            throw new Error(\"Cannot find identifier origin \\\"\".concat(ast.name, \"\\\"\"));\n          }\n\n          break;\n\n        case 'FunctionDeclaration':\n          return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n\n        case 'ReturnStatement':\n          return this.getDependencies(ast.argument, dependencies);\n\n        case 'BinaryExpression':\n          isNotSafe = ast.operator === '/' || ast.operator === '*';\n          this.getDependencies(ast.left, dependencies, isNotSafe);\n          this.getDependencies(ast.right, dependencies, isNotSafe);\n          return dependencies;\n\n        case 'UnaryExpression':\n        case 'UpdateExpression':\n          return this.getDependencies(ast.argument, dependencies, isNotSafe);\n\n        case 'VariableDeclaration':\n          return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n\n        case 'ArrayExpression':\n          dependencies.push({\n            origin: 'declaration',\n            isSafe: true\n          });\n          return dependencies;\n\n        case 'CallExpression':\n          dependencies.push({\n            origin: 'function',\n            isSafe: true\n          });\n          return dependencies;\n\n        case 'MemberExpression':\n          var details = this.getMemberExpressionDetails(ast);\n\n          switch (details.signature) {\n            case 'value[]':\n              this.getDependencies(ast.object, dependencies, isNotSafe);\n              break;\n\n            case 'value[][]':\n              this.getDependencies(ast.object.object, dependencies, isNotSafe);\n              break;\n\n            case 'value[][][]':\n              this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n              break;\n\n            case 'this.output.value':\n              if (this.dynamicOutput) {\n                dependencies.push({\n                  name: details.name,\n                  origin: 'output',\n                  isSafe: false\n                });\n              }\n\n              break;\n          }\n\n          if (details) {\n            if (details.property) {\n              this.getDependencies(details.property, dependencies, isNotSafe);\n            }\n\n            if (details.xProperty) {\n              this.getDependencies(details.xProperty, dependencies, isNotSafe);\n            }\n\n            if (details.yProperty) {\n              this.getDependencies(details.yProperty, dependencies, isNotSafe);\n            }\n\n            if (details.zProperty) {\n              this.getDependencies(details.zProperty, dependencies, isNotSafe);\n            }\n\n            return dependencies;\n          }\n\n        default:\n          throw this.astErrorOutput(\"Unhandled type \".concat(ast.type, \" in getDependencies\"), ast);\n      }\n\n      return dependencies;\n    }\n  }, {\n    key: \"getVariableSignature\",\n    value: function getVariableSignature(ast) {\n      if (!this.isAstVariable(ast)) {\n        throw new Error(\"ast of type \\\"\".concat(ast.type, \"\\\" is not a variable signature\"));\n      }\n\n      if (ast.type === 'Identifier') {\n        return 'value';\n      }\n\n      var signature = [];\n\n      while (true) {\n        if (!ast) break;\n\n        if (ast.computed) {\n          signature.push('[]');\n        } else if (ast.type === 'ThisExpression') {\n          signature.unshift('this');\n        } else if (ast.property && ast.property.name) {\n          if (ast.property.name === 'x' || ast.property.name === 'y' || ast.property.name === 'z') {\n            signature.unshift('.value');\n          } else if (ast.property.name === 'constants' || ast.property.name === 'thread' || ast.property.name === 'output') {\n            signature.unshift('.' + ast.property.name);\n          } else {\n            signature.unshift('.value');\n          }\n        } else if (ast.name) {\n          signature.unshift('value');\n        } else if (ast.callee && ast.callee.name) {\n          signature.unshift('fn()');\n        } else if (ast.elements) {\n          signature.unshift('[]');\n        } else {\n          signature.unshift('unknown');\n        }\n\n        ast = ast.object;\n      }\n\n      var signatureString = signature.join('');\n      var allowedExpressions = ['value', 'value[]', 'value[][]', 'value[][][]', 'value[][][][]', 'value.value', 'value.thread.value', 'this.thread.value', 'this.output.value', 'this.constants.value', 'this.constants.value[]', 'this.constants.value[][]', 'this.constants.value[][][]', 'this.constants.value[][][][]', 'fn()[]', 'fn()[][]', 'fn()[][][]', '[][]'];\n\n      if (allowedExpressions.indexOf(signatureString) > -1) {\n        return signatureString;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      return this.toString().length > 0;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for generically to its respective function\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the parsed string array\n     */\n\n  }, {\n    key: \"astGeneric\",\n    value: function astGeneric(ast, retArr) {\n      if (ast === null) {\n        throw this.astErrorOutput('NULL ast', ast);\n      } else {\n        if (Array.isArray(ast)) {\n          for (var i = 0; i < ast.length; i++) {\n            this.astGeneric(ast[i], retArr);\n          }\n\n          return retArr;\n        }\n\n        switch (ast.type) {\n          case 'FunctionDeclaration':\n            return this.astFunctionDeclaration(ast, retArr);\n\n          case 'FunctionExpression':\n            return this.astFunctionExpression(ast, retArr);\n\n          case 'ReturnStatement':\n            return this.astReturnStatement(ast, retArr);\n\n          case 'Literal':\n            return this.astLiteral(ast, retArr);\n\n          case 'BinaryExpression':\n            return this.astBinaryExpression(ast, retArr);\n\n          case 'Identifier':\n            return this.astIdentifierExpression(ast, retArr);\n\n          case 'AssignmentExpression':\n            return this.astAssignmentExpression(ast, retArr);\n\n          case 'ExpressionStatement':\n            return this.astExpressionStatement(ast, retArr);\n\n          case 'EmptyStatement':\n            return this.astEmptyStatement(ast, retArr);\n\n          case 'BlockStatement':\n            return this.astBlockStatement(ast, retArr);\n\n          case 'IfStatement':\n            return this.astIfStatement(ast, retArr);\n\n          case 'SwitchStatement':\n            return this.astSwitchStatement(ast, retArr);\n\n          case 'BreakStatement':\n            return this.astBreakStatement(ast, retArr);\n\n          case 'ContinueStatement':\n            return this.astContinueStatement(ast, retArr);\n\n          case 'ForStatement':\n            return this.astForStatement(ast, retArr);\n\n          case 'WhileStatement':\n            return this.astWhileStatement(ast, retArr);\n\n          case 'DoWhileStatement':\n            return this.astDoWhileStatement(ast, retArr);\n\n          case 'VariableDeclaration':\n            return this.astVariableDeclaration(ast, retArr);\n\n          case 'VariableDeclarator':\n            return this.astVariableDeclarator(ast, retArr);\n\n          case 'ThisExpression':\n            return this.astThisExpression(ast, retArr);\n\n          case 'SequenceExpression':\n            return this.astSequenceExpression(ast, retArr);\n\n          case 'UnaryExpression':\n            return this.astUnaryExpression(ast, retArr);\n\n          case 'UpdateExpression':\n            return this.astUpdateExpression(ast, retArr);\n\n          case 'LogicalExpression':\n            return this.astLogicalExpression(ast, retArr);\n\n          case 'MemberExpression':\n            return this.astMemberExpression(ast, retArr);\n\n          case 'CallExpression':\n            return this.astCallExpression(ast, retArr);\n\n          case 'ArrayExpression':\n            return this.astArrayExpression(ast, retArr);\n\n          case 'DebuggerStatement':\n            return this.astDebuggerStatement(ast, retArr);\n\n          case 'ConditionalExpression':\n            return this.astConditionalExpression(ast, retArr);\n        }\n\n        throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n      }\n    }\n    /**\n     * @desc To throw the AST error, with its location.\n     * @param {string} error - the error message output\n     * @param {Object} ast - the AST object where the error is\n     */\n\n  }, {\n    key: \"astErrorOutput\",\n    value: function astErrorOutput(error, ast) {\n      if (typeof this.source !== 'string') {\n        return new Error(error);\n      }\n\n      var debugString = utils.getAstString(this.source, ast);\n      var leadingSource = this.source.substr(ast.start);\n      var splitLines = leadingSource.split(/\\n/);\n      var lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n      return new Error(\"\".concat(error, \" on line \").concat(splitLines.length, \", position \").concat(lineBefore.length, \":\\n \").concat(debugString));\n    }\n  }, {\n    key: \"astDebuggerStatement\",\n    value: function astDebuggerStatement(arrNode, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astConditionalExpression\",\n    value: function astConditionalExpression(ast, retArr) {\n      if (ast.type !== 'ConditionalExpression') {\n        throw this.astErrorOutput('Not a conditional expression', ast);\n      }\n\n      retArr.push('(');\n      this.astGeneric(ast.test, retArr);\n      retArr.push('?');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(':');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(')');\n      return retArr;\n    }\n    /**\n     * @abstract\n     * @param {Object} ast\n     * @param {String[]} retArr\n     * @returns {String[]}\n     */\n\n  }, {\n    key: \"astFunction\",\n    value: function astFunction(ast, retArr) {\n      throw new Error(\"\\\"astFunction\\\" not defined on \".concat(this.constructor.name));\n    }\n    /**\n     * @desc Parses the abstract syntax tree for to its *named function declaration*\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astFunctionDeclaration\",\n    value: function astFunctionDeclaration(ast, retArr) {\n      if (this.isChildFunction(ast)) {\n        return retArr;\n      }\n\n      return this.astFunction(ast, retArr);\n    }\n  }, {\n    key: \"astFunctionExpression\",\n    value: function astFunctionExpression(ast, retArr) {\n      if (this.isChildFunction(ast)) {\n        return retArr;\n      }\n\n      return this.astFunction(ast, retArr);\n    }\n  }, {\n    key: \"isChildFunction\",\n    value: function isChildFunction(ast) {\n      for (var i = 0; i < this.functions.length; i++) {\n        if (this.functions[i] === ast) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"astReturnStatement\",\n    value: function astReturnStatement(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astLiteral\",\n    value: function astLiteral(ast, retArr) {\n      this.literalTypes[\"\".concat(ast.start, \",\").concat(ast.end)] = 'Number';\n      return retArr;\n    }\n  }, {\n    key: \"astBinaryExpression\",\n    value: function astBinaryExpression(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astIdentifierExpression\",\n    value: function astIdentifierExpression(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astAssignmentExpression\",\n    value: function astAssignmentExpression(ast, retArr) {\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *generic expression* statement\n     * @param {Object} esNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astExpressionStatement\",\n    value: function astExpressionStatement(esNode, retArr) {\n      this.astGeneric(esNode.expression, retArr);\n      retArr.push(';');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for an *Empty* Statement\n     * @param {Object} eNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astEmptyStatement\",\n    value: function astEmptyStatement(eNode, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astBlockStatement\",\n    value: function astBlockStatement(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astIfStatement\",\n    value: function astIfStatement(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astSwitchStatement\",\n    value: function astSwitchStatement(ast, retArr) {\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Break* Statement\n     * @param {Object} brNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astBreakStatement\",\n    value: function astBreakStatement(brNode, retArr) {\n      retArr.push('break;');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Continue* Statement\n     * @param {Object} crNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astContinueStatement\",\n    value: function astContinueStatement(crNode, retArr) {\n      retArr.push('continue;\\n');\n      return retArr;\n    }\n  }, {\n    key: \"astForStatement\",\n    value: function astForStatement(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astWhileStatement\",\n    value: function astWhileStatement(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astDoWhileStatement\",\n    value: function astDoWhileStatement(ast, retArr) {\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Variable Declaration*\n     * @param {Object} varDecNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astVariableDeclaration\",\n    value: function astVariableDeclaration(varDecNode, retArr) {\n      var declarations = varDecNode.declarations;\n\n      if (!declarations || !declarations[0] || !declarations[0].init) {\n        throw this.astErrorOutput('Unexpected expression', varDecNode);\n      }\n\n      var result = [];\n      var firstDeclaration = declarations[0];\n      var init = firstDeclaration.init;\n      var type = this.isState('in-for-loop-init') ? 'Integer' : this.getType(init);\n\n      if (type === 'LiteralInteger') {\n        // We had the choice to go either float or int, choosing float\n        type = 'Number';\n      }\n\n      var markupType = typeMap[type];\n\n      if (!markupType) {\n        throw this.astErrorOutput(\"Markup type \".concat(markupType, \" not handled\"), varDecNode);\n      }\n\n      var dependencies = this.getDependencies(firstDeclaration.init);\n      throw new Error('remove me');\n      this.declarations[firstDeclaration.id.name] = Object.freeze({\n        type: type,\n        dependencies: dependencies,\n        isSafe: dependencies.every(function (dependency) {\n          return dependency.isSafe;\n        })\n      });\n      var initResult = [\"\".concat(type, \" user_\").concat(firstDeclaration.id.name, \"=\")];\n      this.astGeneric(init, initResult);\n      result.push(initResult.join('')); // first declaration is done, now any added ones setup\n\n      for (var i = 1; i < declarations.length; i++) {\n        var declaration = declarations[i];\n        dependencies = this.getDependencies(declaration);\n        throw new Error('Remove me');\n        this.declarations[declaration.id.name] = Object.freeze({\n          type: type,\n          dependencies: dependencies,\n          isSafe: false\n        });\n        this.astGeneric(declaration, result);\n      }\n\n      retArr.push(retArr, result.join(','));\n      retArr.push(';');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Variable Declarator*\n     * @param {Object} iVarDecNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astVariableDeclarator\",\n    value: function astVariableDeclarator(iVarDecNode, retArr) {\n      this.astGeneric(iVarDecNode.id, retArr);\n\n      if (iVarDecNode.init !== null) {\n        retArr.push('=');\n        this.astGeneric(iVarDecNode.init, retArr);\n      }\n\n      return retArr;\n    }\n  }, {\n    key: \"astThisExpression\",\n    value: function astThisExpression(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astSequenceExpression\",\n    value: function astSequenceExpression(sNode, retArr) {\n      for (var i = 0; i < sNode.expressions.length; i++) {\n        if (i > 0) {\n          retArr.push(',');\n        }\n\n        this.astGeneric(sNode.expressions, retArr);\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Unary* Expression\n     * @param {Object} uNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astUnaryExpression\",\n    value: function astUnaryExpression(uNode, retArr) {\n      var unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n\n      if (unaryResult) {\n        return retArr;\n      }\n\n      if (uNode.prefix) {\n        retArr.push(uNode.operator);\n        this.astGeneric(uNode.argument, retArr);\n      } else {\n        this.astGeneric(uNode.argument, retArr);\n        retArr.push(uNode.operator);\n      }\n\n      return retArr;\n    }\n  }, {\n    key: \"checkAndUpconvertBitwiseUnary\",\n    value: function checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n    /**\n     * @desc Parses the abstract syntax tree for *Update* Expression\n     * @param {Object} uNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astUpdateExpression\",\n    value: function astUpdateExpression(uNode, retArr) {\n      if (uNode.prefix) {\n        retArr.push(uNode.operator);\n        this.astGeneric(uNode.argument, retArr);\n      } else {\n        this.astGeneric(uNode.argument, retArr);\n        retArr.push(uNode.operator);\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Logical* Expression\n     * @param {Object} logNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astLogicalExpression\",\n    value: function astLogicalExpression(logNode, retArr) {\n      retArr.push('(');\n      this.astGeneric(logNode.left, retArr);\n      retArr.push(logNode.operator);\n      this.astGeneric(logNode.right, retArr);\n      retArr.push(')');\n      return retArr;\n    }\n  }, {\n    key: \"astMemberExpression\",\n    value: function astMemberExpression(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astCallExpression\",\n    value: function astCallExpression(ast, retArr) {\n      return retArr;\n    }\n  }, {\n    key: \"astArrayExpression\",\n    value: function astArrayExpression(ast, retArr) {\n      return retArr;\n    }\n    /**\n     *\n     * @param ast\n     * @return {IFunctionNodeMemberExpressionDetails}\n     */\n\n  }, {\n    key: \"getMemberExpressionDetails\",\n    value: function getMemberExpressionDetails(ast) {\n      if (ast.type !== 'MemberExpression') {\n        throw this.astErrorOutput(\"Expression \".concat(ast.type, \" not a MemberExpression\"), ast);\n      }\n\n      var name = null;\n      var type = null;\n      var variableSignature = this.getVariableSignature(ast);\n\n      switch (variableSignature) {\n        case 'value':\n          return null;\n\n        case 'value.thread.value':\n        case 'this.thread.value':\n        case 'this.output.value':\n          return {\n            signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n          };\n\n        case 'value[]':\n          if (typeof ast.object.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n          name = ast.object.name;\n          return {\n            name: name,\n            origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n          };\n\n        case 'value[][]':\n          if (typeof ast.object.object.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n          name = ast.object.object.name;\n          return {\n            name: name,\n            origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property\n          };\n\n        case 'value[][][]':\n          if (typeof ast.object.object.object.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n          name = ast.object.object.object.name;\n          return {\n            name: name,\n            origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property\n          };\n\n        case 'value[][][][]':\n          if (typeof ast.object.object.object.object.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n          name = ast.object.object.object.object.name;\n          return {\n            name: name,\n            origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property\n          };\n\n        case 'value.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n          if (this.isAstMathVariable(ast)) {\n            name = ast.property.name;\n            return {\n              name: name,\n              origin: 'Math',\n              type: 'Number',\n              signature: variableSignature\n            };\n          }\n\n          switch (ast.property.name) {\n            case 'r':\n            case 'g':\n            case 'b':\n            case 'a':\n              name = ast.object.name;\n              return {\n                name: name,\n                property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n              };\n\n            default:\n              throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n          name = ast.property.name;\n          type = this.getConstantType(name);\n\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n\n          return {\n            name: name,\n            type: type,\n            origin: 'constants',\n            signature: variableSignature\n          };\n\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n\n          return {\n            name: name,\n            type: type,\n            origin: 'constants',\n            signature: variableSignature,\n            xProperty: ast.property\n          };\n\n        case 'this.constants.value[][]':\n          {\n            if (typeof ast.object.object.property.name !== 'string') {\n              throw this.astErrorOutput('Unexpected expression', ast);\n            }\n\n            name = ast.object.object.property.name;\n            type = this.getConstantType(name);\n\n            if (!type) {\n              throw this.astErrorOutput('Constant has no type', ast);\n            }\n\n            return {\n              name: name,\n              type: type,\n              origin: 'constants',\n              signature: variableSignature,\n              yProperty: ast.object.property,\n              xProperty: ast.property\n            };\n          }\n\n        case 'this.constants.value[][][]':\n          {\n            if (typeof ast.object.object.object.property.name !== 'string') {\n              throw this.astErrorOutput('Unexpected expression', ast);\n            }\n\n            name = ast.object.object.object.property.name;\n            type = this.getConstantType(name);\n\n            if (!type) {\n              throw this.astErrorOutput('Constant has no type', ast);\n            }\n\n            return {\n              name: name,\n              type: type,\n              origin: 'constants',\n              signature: variableSignature,\n              zProperty: ast.object.object.property,\n              yProperty: ast.object.property,\n              xProperty: ast.property\n            };\n          }\n\n        case 'fn()[]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n            property: ast.property\n          };\n\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n      }\n    }\n  }, {\n    key: \"findIdentifierOrigin\",\n    value: function findIdentifierOrigin(astToFind) {\n      var stack = [this.ast];\n\n      while (stack.length > 0) {\n        var atNode = stack[0];\n\n        if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n          return atNode;\n        }\n\n        stack.shift();\n\n        if (atNode.argument) {\n          stack.push(atNode.argument);\n        } else if (atNode.body) {\n          stack.push(atNode.body);\n        } else if (atNode.declarations) {\n          stack.push(atNode.declarations);\n        } else if (Array.isArray(atNode)) {\n          for (var i = 0; i < atNode.length; i++) {\n            stack.push(atNode[i]);\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"findLastReturn\",\n    value: function findLastReturn(ast) {\n      var stack = [ast || this.ast];\n\n      while (stack.length > 0) {\n        var atNode = stack.pop();\n\n        if (atNode.type === 'ReturnStatement') {\n          return atNode;\n        }\n\n        if (atNode.type === 'FunctionDeclaration') {\n          continue;\n        }\n\n        if (atNode.argument) {\n          stack.push(atNode.argument);\n        } else if (atNode.body) {\n          stack.push(atNode.body);\n        } else if (atNode.declarations) {\n          stack.push(atNode.declarations);\n        } else if (Array.isArray(atNode)) {\n          for (var i = 0; i < atNode.length; i++) {\n            stack.push(atNode[i]);\n          }\n        } else if (atNode.consequent) {\n          stack.push(atNode.consequent);\n        } else if (atNode.cases) {\n          stack.push(atNode.cases);\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getInternalVariableName\",\n    value: function getInternalVariableName(name) {\n      if (!this._internalVariableNames.hasOwnProperty(name)) {\n        this._internalVariableNames[name] = 0;\n      }\n\n      this._internalVariableNames[name]++;\n\n      if (this._internalVariableNames[name] === 1) {\n        return name;\n      }\n\n      return name + this._internalVariableNames[name];\n    }\n  }, {\n    key: \"varWarn\",\n    value: function varWarn() {\n      console.warn('var declarations are deprecated, weird things happen when falling back to CPU because var scope differs in javascript than in most languages.  Use const or let');\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.states[this.states.length - 1];\n    }\n  }]);\n\n  return FunctionNode;\n}();\n\nvar typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLImage': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)'\n};\nmodule.exports = {\n  FunctionNode: FunctionNode\n};","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../function-node'),\n    FunctionNode = _require2.FunctionNode; // Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\n\n\nvar jsMathPrefix = 'Math.';\nvar localPrefix = 'this.';\n/**\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective WebGL code\n * @extends FunctionNode\n * @returns the converted WebGL function string\n */\n\nvar WebGLFunctionNode =\n/*#__PURE__*/\nfunction (_FunctionNode) {\n  \"use strict\";\n\n  _inherits(WebGLFunctionNode, _FunctionNode);\n\n  function WebGLFunctionNode(source, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLFunctionNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLFunctionNode).call(this, source, settings));\n\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      _this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n\n    return _this;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for to its *named function*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n\n\n  _createClass(WebGLFunctionNode, [{\n    key: \"astFunction\",\n    value: function astFunction(ast, retArr) {\n      // Setup function return type and name\n      if (this.isRootKernel) {\n        retArr.push('void');\n      } else {\n        // looking up return type, this is a little expensive, and can be avoided if returnType is set\n        var lastReturn = null;\n\n        if (!this.returnType) {\n          var _lastReturn = this.findLastReturn();\n\n          if (_lastReturn) {\n            this.returnType = this.getType(ast.body);\n\n            if (this.returnType === 'LiteralInteger') {\n              this.returnType = 'Number';\n            }\n          }\n        }\n\n        var returnType = this.returnType;\n\n        if (!returnType) {\n          retArr.push('void');\n        } else {\n          var type = typeMap[returnType];\n\n          if (!type) {\n            throw new Error(\"unknown type \".concat(returnType));\n          }\n\n          retArr.push(type);\n        }\n      }\n\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      if (!this.isRootKernel) {\n        // Arguments handling\n        for (var i = 0; i < this.argumentNames.length; ++i) {\n          var argumentName = this.argumentNames[i];\n\n          if (i > 0) {\n            retArr.push(', ');\n          }\n\n          var argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)]; // The type is too loose ended, here we descide to solidify a type, lets go with float\n\n          if (!argumentType) {\n            throw this.astErrorOutput(\"Unknown argument \".concat(argumentName, \" type\"), ast);\n          }\n\n          if (argumentType === 'LiteralInteger') {\n            this.argumentTypes[i] = argumentType = 'Number';\n          }\n\n          var _type = typeMap[argumentType];\n\n          if (!_type) {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n\n          retArr.push(_type);\n          retArr.push(' ');\n          retArr.push('user_');\n          retArr.push(argumentName);\n        }\n      } // Function opening\n\n\n      retArr.push(') {\\n'); // Body statement iteration\n\n      for (var _i = 0; _i < ast.body.body.length; ++_i) {\n        this.astGeneric(ast.body.body[_i], retArr);\n        retArr.push('\\n');\n      } // Function closing\n\n\n      retArr.push('}\\n');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for to *return* statement\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astReturnStatement\",\n    value: function astReturnStatement(ast, retArr) {\n      if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n      this.pushState('skip-literal-correction');\n      var type = this.getType(ast.argument);\n      this.popState('skip-literal-correction');\n      var result = [];\n\n      if (!this.returnType) {\n        if (type === 'LiteralInteger' || type === 'Integer') {\n          this.returnType = 'Number';\n        } else {\n          this.returnType = type;\n        }\n      }\n\n      switch (this.returnType) {\n        case 'LiteralInteger':\n        case 'Number':\n        case 'Float':\n          switch (type) {\n            case 'Integer':\n              result.push('float(');\n              this.astGeneric(ast.argument, result);\n              result.push(')');\n              break;\n\n            case 'LiteralInteger':\n              this.castLiteralToFloat(ast.argument, result); // Running astGeneric forces the LiteralInteger to pick a type, and here, if we are returning a float, yet\n              // the LiteralInteger has picked to be an integer because of constraints on it we cast it to float.\n\n              if (this.getType(ast) === 'Integer') {\n                result.unshift('float(');\n                result.push(')');\n              }\n\n              break;\n\n            default:\n              this.astGeneric(ast.argument, result);\n          }\n\n          break;\n\n        case 'Integer':\n          switch (type) {\n            case 'Float':\n            case 'Number':\n              this.castValueToInteger(ast.argument, result);\n              break;\n\n            case 'LiteralInteger':\n              this.castLiteralToInteger(ast.argument, result);\n              break;\n\n            default:\n              this.astGeneric(ast.argument, result);\n          }\n\n          break;\n\n        case 'Array(4)':\n        case 'Array(3)':\n        case 'Array(2)':\n        case 'Input':\n          this.astGeneric(ast.argument, result);\n          break;\n\n        default:\n          throw this.astErrorOutput(\"unhandled return type \".concat(this.returnType), ast);\n      }\n\n      if (this.isRootKernel) {\n        retArr.push(\"kernelResult = \".concat(result.join(''), \";\"));\n        retArr.push('return;');\n      } else if (this.isSubKernel) {\n        retArr.push(\"subKernelResult_\".concat(this.name, \" = \").concat(result.join(''), \";\"));\n        retArr.push(\"return subKernelResult_\".concat(this.name, \";\"));\n      } else {\n        retArr.push(\"return \".concat(result.join(''), \";\"));\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *literal value*\n     *\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     *\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astLiteral\",\n    value: function astLiteral(ast, retArr) {\n      // Reject non numeric literals\n      if (isNaN(ast.value)) {\n        throw this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n      }\n\n      var key = \"\".concat(ast.start, \",\").concat(ast.end);\n\n      if (Number.isInteger(ast.value)) {\n        if (this.isState('in-for-loop-init') || this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.literalTypes[key] = 'Integer';\n          retArr.push(\"\".concat(ast.value));\n        } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n          this.literalTypes[key] = 'Number';\n          retArr.push(\"\".concat(ast.value, \".0\"));\n        } else {\n          this.literalTypes[key] = 'Number';\n          retArr.push(\"\".concat(ast.value, \".0\"));\n        }\n      } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(Math.round(ast.value));\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(\"\".concat(ast.value));\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *binary* expression\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astBinaryExpression\",\n    value: function astBinaryExpression(ast, retArr) {\n      if (this.checkAndUpconvertOperator(ast, retArr)) {\n        return retArr;\n      }\n\n      if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n        retArr.push('div_with_int_check(');\n        this.pushState('building-float');\n\n        switch (this.getType(ast.left)) {\n          case 'Integer':\n            this.castValueToFloat(ast.left, retArr);\n            break;\n\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.left, retArr);\n            break;\n\n          default:\n            this.astGeneric(ast.left, retArr);\n        }\n\n        retArr.push(', ');\n\n        switch (this.getType(ast.right)) {\n          case 'Integer':\n            this.castValueToFloat(ast.right, retArr);\n            break;\n\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.right, retArr);\n            break;\n\n          default:\n            this.astGeneric(ast.right, retArr);\n        }\n\n        this.popState('building-float');\n        retArr.push(')');\n        return retArr;\n      }\n\n      retArr.push('(');\n      var leftType = this.getType(ast.left) || 'Number';\n      var rightType = this.getType(ast.right) || 'Number';\n\n      if (!leftType || !rightType) {\n        throw this.astErrorOutput(\"Unhandled binary expression\", ast);\n      }\n\n      var key = leftType + ' & ' + rightType;\n\n      switch (key) {\n        case 'Integer & Integer':\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n          break;\n\n        case 'Number & Float':\n        case 'Float & Number':\n        case 'Float & Float':\n        case 'Number & Number':\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-float');\n          break;\n\n        case 'LiteralInteger & LiteralInteger':\n          if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n            this.pushState('building-integer');\n            this.astGeneric(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-integer');\n          } else {\n            this.pushState('building-float');\n            this.castLiteralToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.castLiteralToFloat(ast.right, retArr);\n            this.popState('building-float');\n          }\n\n          break;\n\n        case 'Integer & Float':\n        case 'Integer & Number':\n          if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n            // if right value is actually a float, don't loose that information, cast left to right rather than the usual right to left\n            if (!Number.isInteger(ast.right.value)) {\n              this.pushState('building-float');\n              this.castValueToFloat(ast.left, retArr);\n              retArr.push(operatorMap[ast.operator] || ast.operator);\n              this.astGeneric(ast.right, retArr);\n              this.popState('building-float');\n              break;\n            }\n          }\n\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-integer');\n\n          if (ast.right.type === 'Literal') {\n            var literalResult = [];\n            this.astGeneric(ast.right, literalResult);\n            var literalType = this.getType(ast.right);\n\n            if (literalType === 'Integer') {\n              retArr.push(literalResult.join(''));\n            } else {\n              throw this.astErrorOutput(\"Unhandled binary expression with literal\", ast);\n            }\n          } else {\n            retArr.push('int(');\n            this.astGeneric(ast.right, retArr);\n            retArr.push(')');\n          }\n\n          this.popState('casting-to-integer');\n          this.popState('building-integer');\n          break;\n\n        case 'Integer & LiteralInteger':\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToInteger(ast.right, retArr);\n          this.popState('building-integer');\n          break;\n\n        case 'Number & Integer':\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToFloat(ast.right, retArr);\n          this.popState('building-float');\n          break;\n\n        case 'Float & LiteralInteger':\n        case 'Number & LiteralInteger':\n          if (this.isState('in-for-loop-test')) {\n            this.pushState('building-integer');\n            retArr.push('int(');\n            this.astGeneric(ast.left, retArr);\n            retArr.push(')');\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.castLiteralToInteger(ast.right, retArr);\n            this.popState('building-integer');\n          } else {\n            this.pushState('building-float');\n            this.astGeneric(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.castLiteralToFloat(ast.right, retArr);\n            this.popState('building-float');\n          }\n\n          break;\n\n        case 'LiteralInteger & Float':\n        case 'LiteralInteger & Number':\n          if (this.isState('in-for-loop-test') || this.isState('in-for-loop-init') || this.isState('casting-to-integer')) {\n            this.pushState('building-integer');\n            this.castLiteralToInteger(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.castValueToInteger(ast.right, retArr);\n            this.popState('building-integer');\n          } else {\n            this.pushState('building-float');\n            this.astGeneric(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.pushState('casting-to-float');\n            this.astGeneric(ast.right, retArr);\n            this.popState('casting-to-float');\n            this.popState('building-float');\n          }\n\n          break;\n\n        case 'LiteralInteger & Integer':\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n          break;\n\n        case 'Boolean & Boolean':\n          this.pushState('building-boolean');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-boolean');\n          break;\n\n        case 'Float & Integer':\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToFloat(ast.right, retArr);\n          this.popState('building-float');\n          break;\n\n        default:\n          throw this.astErrorOutput(\"Unhandled binary expression between \".concat(key), ast);\n      }\n\n      retArr.push(')');\n      return retArr;\n    }\n  }, {\n    key: \"checkAndUpconvertOperator\",\n    value: function checkAndUpconvertOperator(ast, retArr) {\n      var bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n\n      if (bitwiseResult) {\n        return bitwiseResult;\n      }\n\n      var upconvertableOperators = {\n        '%': 'mod',\n        '**': 'pow'\n      };\n      var foundOperator = upconvertableOperators[ast.operator];\n      if (!foundOperator) return null;\n      retArr.push(foundOperator);\n      retArr.push('(');\n\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n\n      retArr.push(',');\n\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n\n      retArr.push(')');\n      return retArr;\n    }\n  }, {\n    key: \"checkAndUpconvertBitwiseOperators\",\n    value: function checkAndUpconvertBitwiseOperators(ast, retArr) {\n      var upconvertableOperators = {\n        '&': 'bitwiseAnd',\n        '|': 'bitwiseOr',\n        '^': 'bitwiseXOR',\n        '<<': 'bitwiseZeroFillLeftShift',\n        '>>': 'bitwiseSignedRightShift',\n        '>>>': 'bitwiseZeroFillRightShift'\n      };\n      var foundOperator = upconvertableOperators[ast.operator];\n      if (!foundOperator) return null;\n      retArr.push(foundOperator);\n      retArr.push('(');\n      var leftType = this.getType(ast.left);\n\n      switch (leftType) {\n        case 'Number':\n        case 'Float':\n          this.castValueToInteger(ast.left, retArr);\n          break;\n\n        case 'LiteralInteger':\n          this.castLiteralToInteger(ast.left, retArr);\n          break;\n\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n\n      retArr.push(',');\n      var rightType = this.getType(ast.right);\n\n      switch (rightType) {\n        case 'Number':\n        case 'Float':\n          this.castValueToInteger(ast.right, retArr);\n          break;\n\n        case 'LiteralInteger':\n          this.castLiteralToInteger(ast.right, retArr);\n          break;\n\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n\n      retArr.push(')');\n      return retArr;\n    }\n  }, {\n    key: \"checkAndUpconvertBitwiseUnary\",\n    value: function checkAndUpconvertBitwiseUnary(ast, retArr) {\n      var upconvertableOperators = {\n        '~': 'bitwiseNot'\n      };\n      var foundOperator = upconvertableOperators[ast.operator];\n      if (!foundOperator) return null;\n      retArr.push(foundOperator);\n      retArr.push('(');\n\n      switch (this.getType(ast.argument)) {\n        case 'Number':\n        case 'Float':\n          this.castValueToInteger(ast.argument, retArr);\n          break;\n\n        case 'LiteralInteger':\n          this.castLiteralToInteger(ast.argument, retArr);\n          break;\n\n        default:\n          this.astGeneric(ast.argument, retArr);\n      }\n\n      retArr.push(')');\n      return retArr;\n    }\n    /**\n     *\n     * @param {Object} ast\n     * @param {Array} retArr\n     * @return {String[]}\n     */\n\n  }, {\n    key: \"castLiteralToInteger\",\n    value: function castLiteralToInteger(ast, retArr) {\n      this.pushState('casting-to-integer');\n      this.astGeneric(ast, retArr);\n      this.popState('casting-to-integer');\n      return retArr;\n    }\n    /**\n     *\n     * @param {Object} ast\n     * @param {Array} retArr\n     * @return {String[]}\n     */\n\n  }, {\n    key: \"castLiteralToFloat\",\n    value: function castLiteralToFloat(ast, retArr) {\n      this.pushState('casting-to-float');\n      this.astGeneric(ast, retArr);\n      this.popState('casting-to-float');\n      return retArr;\n    }\n    /**\n     *\n     * @param {Object} ast\n     * @param {Array} retArr\n     * @return {String[]}\n     */\n\n  }, {\n    key: \"castValueToInteger\",\n    value: function castValueToInteger(ast, retArr) {\n      this.pushState('casting-to-integer');\n      retArr.push('int(');\n      this.astGeneric(ast, retArr);\n      retArr.push(')');\n      this.popState('casting-to-integer');\n      return retArr;\n    }\n    /**\n     *\n     * @param {Object} ast\n     * @param {Array} retArr\n     * @return {String[]}\n     */\n\n  }, {\n    key: \"castValueToFloat\",\n    value: function castValueToFloat(ast, retArr) {\n      this.pushState('casting-to-float');\n      retArr.push('float(');\n      this.astGeneric(ast, retArr);\n      retArr.push(')');\n      this.popState('casting-to-float');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *identifier* expression\n     * @param {Object} idtNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astIdentifierExpression\",\n    value: function astIdentifierExpression(idtNode, retArr) {\n      if (idtNode.type !== 'Identifier') {\n        throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n      }\n\n      var type = this.getType(idtNode);\n\n      if (idtNode.name === 'Infinity') {\n        // https://stackoverflow.com/a/47543127/1324039\n        retArr.push('3.402823466e+38');\n      } else if (type === 'Boolean') {\n        if (this.argumentNames.indexOf(idtNode.name) > -1) {\n          retArr.push(\"bool(user_\".concat(idtNode.name, \")\"));\n        } else {\n          retArr.push(\"user_\".concat(idtNode.name));\n        }\n      } else {\n        var userArgumentName = this.getKernelArgumentName(idtNode.name);\n\n        if (userArgumentName) {\n          retArr.push(\"user_\".concat(userArgumentName));\n        } else {\n          retArr.push(\"user_\".concat(idtNode.name));\n        }\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *for-loop* expression\n     * @param {Object} forNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the parsed webgl string\n     */\n\n  }, {\n    key: \"astForStatement\",\n    value: function astForStatement(forNode, retArr) {\n      if (forNode.type !== 'ForStatement') {\n        throw this.astErrorOutput('Invalid for statement', forNode);\n      }\n\n      var initArr = [];\n      var testArr = [];\n      var updateArr = [];\n      var bodyArr = [];\n      var isSafe = null;\n\n      if (forNode.init) {\n        this.pushState('in-for-loop-init');\n        this.astGeneric(forNode.init, initArr);\n        var declarations = forNode.init.declarations;\n\n        for (var i = 0; i < declarations.length; i++) {\n          if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n            isSafe = false;\n          }\n        }\n\n        if (isSafe) {\n          for (var _i2 = 0; _i2 < initArr.length; _i2++) {\n            if (initArr[_i2].includes && initArr[_i2].includes(',')) {\n              isSafe = false;\n            }\n          }\n        }\n\n        this.popState('in-for-loop-init');\n      } else {\n        isSafe = false;\n      }\n\n      if (forNode.test) {\n        this.pushState('in-for-loop-test');\n        this.astGeneric(forNode.test, testArr);\n        this.popState('in-for-loop-test');\n      } else {\n        isSafe = false;\n      }\n\n      if (forNode.update) {\n        this.astGeneric(forNode.update, updateArr);\n      } else {\n        isSafe = false;\n      }\n\n      if (forNode.body) {\n        this.pushState('loop-body');\n        this.astGeneric(forNode.body, bodyArr);\n        this.popState('loop-body');\n      } // have all parts, now make them safe\n\n\n      if (isSafe === null) {\n        isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n      }\n\n      if (isSafe) {\n        retArr.push(\"for (\".concat(initArr.join(''), \";\").concat(testArr.join(''), \";\").concat(updateArr.join(''), \"){\\n\"));\n        retArr.push(bodyArr.join(''));\n        retArr.push('}\\n');\n      } else {\n        var iVariableName = this.getInternalVariableName('safeI');\n\n        if (initArr.length > 0) {\n          retArr.push(initArr.join(''), ';\\n');\n        }\n\n        retArr.push(\"for (int \".concat(iVariableName, \"=0;\").concat(iVariableName, \"<LOOP_MAX;\").concat(iVariableName, \"++){\\n\"));\n\n        if (testArr.length > 0) {\n          retArr.push(\"if (!\".concat(testArr.join(''), \") break;\\n\"));\n        }\n\n        retArr.push(bodyArr.join(''));\n        retArr.push(\"\\n\".concat(updateArr.join(''), \";\"));\n        retArr.push('}\\n');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *while* loop\n     * @param {Object} whileNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the parsed webgl string\n     */\n\n  }, {\n    key: \"astWhileStatement\",\n    value: function astWhileStatement(whileNode, retArr) {\n      if (whileNode.type !== 'WhileStatement') {\n        throw this.astErrorOutput('Invalid while statement', whileNode);\n      }\n\n      var iVariableName = this.getInternalVariableName('safeI');\n      retArr.push(\"for (int \".concat(iVariableName, \"=0;\").concat(iVariableName, \"<LOOP_MAX;\").concat(iVariableName, \"++){\\n\"));\n      retArr.push('if (!');\n      this.astGeneric(whileNode.test, retArr);\n      retArr.push(') break;\\n');\n      this.astGeneric(whileNode.body, retArr);\n      retArr.push('}\\n');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *do while* loop\n     * @param {Object} doWhileNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the parsed webgl string\n     */\n\n  }, {\n    key: \"astDoWhileStatement\",\n    value: function astDoWhileStatement(doWhileNode, retArr) {\n      if (doWhileNode.type !== 'DoWhileStatement') {\n        throw this.astErrorOutput('Invalid while statement', doWhileNode);\n      }\n\n      var iVariableName = this.getInternalVariableName('safeI');\n      retArr.push(\"for (int \".concat(iVariableName, \"=0;\").concat(iVariableName, \"<LOOP_MAX;\").concat(iVariableName, \"++){\\n\"));\n      this.astGeneric(doWhileNode.body, retArr);\n      retArr.push('if (!');\n      this.astGeneric(doWhileNode.test, retArr);\n      retArr.push(') break;\\n');\n      retArr.push('}\\n');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Assignment* Expression\n     * @param {Object} assNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astAssignmentExpression\",\n    value: function astAssignmentExpression(assNode, retArr) {\n      var declaration = this.getDeclaration(assNode.left);\n\n      if (declaration && !declaration.assignable) {\n        throw new this.astErrorOutput(\"Variable \".concat(assNode.left.name, \" is not assignable here\"), assNode);\n      } // TODO: casting needs implemented here\n\n\n      if (assNode.operator === '%=') {\n        this.astGeneric(assNode.left, retArr);\n        retArr.push('=');\n        retArr.push('mod(');\n        this.astGeneric(assNode.left, retArr);\n        retArr.push(',');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else if (assNode.operator === '**=') {\n        this.astGeneric(assNode.left, retArr);\n        retArr.push('=');\n        retArr.push('pow(');\n        this.astGeneric(assNode.left, retArr);\n        retArr.push(',');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        var leftType = this.getType(assNode.left);\n        var rightType = this.getType(assNode.right);\n        this.astGeneric(assNode.left, retArr);\n        retArr.push(assNode.operator);\n\n        if (leftType !== 'Integer' && rightType === 'Integer') {\n          retArr.push('float(');\n          this.astGeneric(assNode.right, retArr);\n          retArr.push(')');\n        } else {\n          this.astGeneric(assNode.right, retArr);\n        }\n\n        return retArr;\n      }\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Block* statement\n     * @param {Object} bNode - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astBlockStatement\",\n    value: function astBlockStatement(bNode, retArr) {\n      if (this.isState('loop-body')) {\n        this.pushState('block-body'); // this prevents recursive removal of braces\n\n        for (var i = 0; i < bNode.body.length; i++) {\n          this.astGeneric(bNode.body[i], retArr);\n        }\n\n        this.popState('block-body');\n      } else {\n        retArr.push('{\\n');\n\n        for (var _i3 = 0; _i3 < bNode.body.length; _i3++) {\n          this.astGeneric(bNode.body[_i3], retArr);\n        }\n\n        retArr.push('}\\n');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Variable Declaration*\n     * @param {Object} varDecNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astVariableDeclaration\",\n    value: function astVariableDeclaration(varDecNode, retArr) {\n      if (varDecNode.kind === 'var' && this.warnVarUsage) {\n        this.varWarn();\n      }\n\n      var declarations = varDecNode.declarations;\n\n      if (!declarations || !declarations[0] || !declarations[0].init) {\n        throw this.astErrorOutput('Unexpected expression', varDecNode);\n      }\n\n      var result = [];\n      var lastType = null;\n      var inForLoopInit = this.isState('in-for-loop-init');\n\n      for (var i = 0; i < declarations.length; i++) {\n        var declaration = declarations[i];\n        var init = declaration.init;\n        var info = this.getDeclaration(declaration.id);\n        var valueType = info.valueType;\n        var actualType = this.getType(declaration.init);\n        var dependencies = info.dependencies;\n        var type = inForLoopInit ? 'Integer' : actualType;\n\n        if (type === 'LiteralInteger') {\n          // We had the choice to go either float or int, choosing float\n          type = 'Number';\n        }\n\n        var markupType = typeMap[type];\n\n        if (!markupType) {\n          throw this.astErrorOutput(\"Markup type \".concat(markupType, \" not handled\"), varDecNode);\n        }\n\n        var declarationResult = [];\n\n        if (actualType === 'Integer' && type === 'Integer' && !inForLoopInit) {\n          // Since we are assigning to a float, ensure valueType is reset to that\n          info.valueType = 'Number';\n\n          if (i === 0 || lastType === null) {\n            declarationResult.push('float ');\n          } else if (type !== lastType) {\n            throw new Error('Unhandled declaration');\n          } else {\n            declarationResult.push(',');\n          }\n\n          lastType = type;\n          declarationResult.push(\"user_\".concat(declaration.id.name, \"=\"));\n          declarationResult.push('float(');\n          this.astGeneric(init, declarationResult);\n          declarationResult.push(')');\n        } else {\n          // Since we are assigning to a float, ensure valueType is reset to that\n          info.valueType = type;\n\n          if (i === 0 || lastType === null) {\n            declarationResult.push(\"\".concat(markupType, \" \"));\n          } else if (type !== lastType) {\n            result.push(';');\n            declarationResult.push(\"\".concat(markupType, \" \"));\n          } else {\n            declarationResult.push(',');\n          }\n\n          lastType = type;\n          declarationResult.push(\"user_\".concat(declaration.id.name, \"=\"));\n\n          if (actualType === 'Number' && type === 'Integer') {\n            if (init.left && init.left.type === 'Literal') {\n              this.astGeneric(init, declarationResult);\n            } else {\n              declarationResult.push('int(');\n              this.astGeneric(init, declarationResult);\n              declarationResult.push(')');\n            }\n          } else {\n            this.astGeneric(init, declarationResult);\n          }\n        }\n\n        result.push(declarationResult.join(''));\n      }\n\n      retArr.push(result.join(''));\n\n      if (!inForLoopInit) {\n        retArr.push(';');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *If* Statement\n     * @param {Object} ifNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astIfStatement\",\n    value: function astIfStatement(ifNode, retArr) {\n      retArr.push('if (');\n      this.astGeneric(ifNode.test, retArr);\n      retArr.push(')');\n\n      if (ifNode.consequent.type === 'BlockStatement') {\n        this.astGeneric(ifNode.consequent, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.consequent, retArr);\n        retArr.push('\\n}\\n');\n      }\n\n      if (ifNode.alternate) {\n        retArr.push('else ');\n\n        if (ifNode.alternate.type === 'BlockStatement') {\n          this.astGeneric(ifNode.alternate, retArr);\n        } else {\n          retArr.push(' {\\n');\n          this.astGeneric(ifNode.alternate, retArr);\n          retArr.push('\\n}\\n');\n        }\n      }\n\n      return retArr;\n    }\n  }, {\n    key: \"astSwitchStatement\",\n    value: function astSwitchStatement(ast, retArr) {\n      if (ast.type !== 'SwitchStatement') {\n        throw this.astErrorOutput('Invalid switch statement', ast);\n      }\n\n      var discriminant = ast.discriminant,\n          cases = ast.cases;\n      var type = this.getType(discriminant);\n      var varName = \"switchDiscriminant\".concat(ast.start, \"_\").concat(ast.end);\n\n      switch (type) {\n        case 'Float':\n        case 'Number':\n          retArr.push(\"float \".concat(varName, \" = \"));\n          this.astGeneric(discriminant, retArr);\n          retArr.push(';\\n');\n          break;\n\n        case 'Integer':\n          retArr.push(\"int \".concat(varName, \" = \"));\n          this.astGeneric(discriminant, retArr);\n          retArr.push(';\\n');\n          break;\n      } // switch with just a default:\n\n\n      if (cases.length === 1 && !cases[0].test) {\n        this.astGeneric(cases[0].consequent, retArr);\n        return retArr;\n      } // regular switches:\n\n\n      var fallingThrough = false;\n      var defaultResult = [];\n      var movingDefaultToEnd = false;\n      var pastFirstIf = false;\n\n      for (var i = 0; i < cases.length; i++) {\n        // default\n        if (!cases[i].test) {\n          if (cases.length > i + 1) {\n            movingDefaultToEnd = true;\n            this.astGeneric(cases[i].consequent, defaultResult);\n            continue;\n          } else {\n            retArr.push(' else {\\n');\n          }\n        } else {\n          // all others\n          if (i === 0 || !pastFirstIf) {\n            pastFirstIf = true;\n            retArr.push(\"if (\".concat(varName, \" == \"));\n          } else {\n            if (fallingThrough) {\n              retArr.push(\"\".concat(varName, \" == \"));\n              fallingThrough = false;\n            } else {\n              retArr.push(\" else if (\".concat(varName, \" == \"));\n            }\n          }\n\n          if (type === 'Integer') {\n            var testType = this.getType(cases[i].test);\n\n            switch (testType) {\n              case 'Number':\n              case 'Float':\n                this.castValueToInteger(cases[i].test, retArr);\n                break;\n\n              case 'LiteralInteger':\n                this.castLiteralToInteger(cases[i].test, retArr);\n                break;\n            }\n          } else if (type === 'Float') {\n            var _testType = this.getType(cases[i].test);\n\n            switch (_testType) {\n              case 'LiteralInteger':\n                this.castLiteralToFloat(cases[i].test, retArr);\n                break;\n\n              case 'Integer':\n                this.castValueToFloat(cases[i].test, retArr);\n                break;\n            }\n          } else {\n            throw new Error('unhanlded');\n          }\n\n          if (!cases[i].consequent || cases[i].consequent.length === 0) {\n            fallingThrough = true;\n            retArr.push(' || ');\n            continue;\n          }\n\n          retArr.push(\") {\\n\");\n        }\n\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('\\n}');\n      }\n\n      if (movingDefaultToEnd) {\n        retArr.push(' else {');\n        retArr.push(defaultResult.join(''));\n        retArr.push('}');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *This* expression\n     * @param {Object} tNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astThisExpression\",\n    value: function astThisExpression(tNode, retArr) {\n      retArr.push('this');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Member* Expression\n     * @param {Object} mNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astMemberExpression\",\n    value: function astMemberExpression(mNode, retArr) {\n      var _this$getMemberExpres = this.getMemberExpressionDetails(mNode),\n          property = _this$getMemberExpres.property,\n          name = _this$getMemberExpres.name,\n          signature = _this$getMemberExpres.signature,\n          origin = _this$getMemberExpres.origin,\n          type = _this$getMemberExpres.type,\n          xProperty = _this$getMemberExpres.xProperty,\n          yProperty = _this$getMemberExpres.yProperty,\n          zProperty = _this$getMemberExpres.zProperty;\n\n      switch (signature) {\n        case 'value.thread.value':\n        case 'this.thread.value':\n          if (name !== 'x' && name !== 'y' && name !== 'z') {\n            throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n          }\n\n          retArr.push(\"threadId.\".concat(name));\n          return retArr;\n\n        case 'this.output.value':\n          if (this.dynamicOutput) {\n            switch (name) {\n              case 'x':\n                if (this.isState('casting-to-float')) {\n                  retArr.push('float(uOutputDim.x)');\n                } else {\n                  retArr.push('uOutputDim.x');\n                }\n\n                break;\n\n              case 'y':\n                if (this.isState('casting-to-float')) {\n                  retArr.push('float(uOutputDim.y)');\n                } else {\n                  retArr.push('uOutputDim.y');\n                }\n\n                break;\n\n              case 'z':\n                if (this.isState('casting-to-float')) {\n                  retArr.push('float(uOutputDim.z)');\n                } else {\n                  retArr.push('uOutputDim.z');\n                }\n\n                break;\n\n              default:\n                throw this.astErrorOutput('Unexpected expression', mNode);\n            }\n          } else {\n            switch (name) {\n              case 'x':\n                if (this.isState('casting-to-integer')) {\n                  retArr.push(this.output[0]);\n                } else {\n                  retArr.push(this.output[0], '.0');\n                }\n\n                break;\n\n              case 'y':\n                if (this.isState('casting-to-integer')) {\n                  retArr.push(this.output[1]);\n                } else {\n                  retArr.push(this.output[1], '.0');\n                }\n\n                break;\n\n              case 'z':\n                if (this.isState('casting-to-integer')) {\n                  retArr.push(this.output[2]);\n                } else {\n                  retArr.push(this.output[2], '.0');\n                }\n\n                break;\n\n              default:\n                throw this.astErrorOutput('Unexpected expression', mNode);\n            }\n          }\n\n          return retArr;\n\n        case 'value':\n          throw this.astErrorOutput('Unexpected expression', mNode);\n\n        case 'value[]':\n        case 'value[][]':\n        case 'value[][][]':\n        case 'value[][][][]':\n        case 'value.value':\n          if (origin === 'Math') {\n            retArr.push(Math[name]);\n            return retArr;\n          }\n\n          switch (property) {\n            case 'r':\n              retArr.push(\"user_\".concat(name, \".r\"));\n              return retArr;\n\n            case 'g':\n              retArr.push(\"user_\".concat(name, \".g\"));\n              return retArr;\n\n            case 'b':\n              retArr.push(\"user_\".concat(name, \".b\"));\n              return retArr;\n\n            case 'a':\n              retArr.push(\"user_\".concat(name, \".a\"));\n              return retArr;\n          }\n\n          break;\n\n        case 'this.constants.value':\n          if (typeof xProperty === 'undefined') {\n            switch (type) {\n              case 'Array(2)':\n              case 'Array(3)':\n              case 'Array(4)':\n                retArr.push(\"constants_\".concat(name));\n                return retArr;\n            }\n          }\n\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n      }\n\n      if (mNode.computed === false) {\n        // handle simple types\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'Boolean':\n            retArr.push(\"\".concat(origin, \"_\").concat(name));\n            return retArr;\n        }\n      } // handle more complex types\n      // argument may have come from a parent\n\n\n      var synonymName = this.getKernelArgumentName(name);\n      var markupName = \"\".concat(origin, \"_\").concat(synonymName || name);\n\n      switch (type) {\n        case 'Array(2)':\n        case 'Array(3)':\n        case 'Array(4)':\n          // Get from local vec4\n          this.astGeneric(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n          retArr.push(']');\n          break;\n\n        case 'HTMLImageArray':\n          retArr.push(\"getImage3D(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        case 'ArrayTexture(1)':\n          retArr.push(\"getFloatFromSampler2D(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        case 'Array1D(2)':\n        case 'Array2D(2)':\n        case 'Array3D(2)':\n          retArr.push(\"getMemoryOptimizedVec2(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        case 'ArrayTexture(2)':\n          retArr.push(\"getVec2FromSampler2D(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        case 'Array1D(3)':\n        case 'Array2D(3)':\n        case 'Array3D(3)':\n          retArr.push(\"getMemoryOptimizedVec3(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        case 'ArrayTexture(3)':\n          retArr.push(\"getVec3FromSampler2D(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        case 'Array1D(4)':\n        case 'Array2D(4)':\n        case 'Array3D(4)':\n          retArr.push(\"getMemoryOptimizedVec4(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        case 'ArrayTexture(4)':\n        case 'HTMLImage':\n          retArr.push(\"getVec4FromSampler2D(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        case 'NumberTexture':\n        case 'Array':\n        case 'Array2D':\n        case 'Array3D':\n        case 'Array4D':\n        case 'Input':\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          if (this.precision === 'single') {\n            // bitRatio is always 4 here, javascript doesn't yet have 8 or 16 bit support\n            // TODO: make 8 or 16 bit work anyway!\n            retArr.push(\"getMemoryOptimized32(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n            this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n            retArr.push(')');\n          } else {\n            var bitRatio = origin === 'user' ? this.lookupFunctionArgumentBitRatio(this.name, name) : this.constantBitRatios[name];\n\n            switch (bitRatio) {\n              case 1:\n                retArr.push(\"get8(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n                break;\n\n              case 2:\n                retArr.push(\"get16(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n                break;\n\n              case 4:\n              case 0:\n                retArr.push(\"get32(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n                break;\n\n              default:\n                throw new Error(\"unhandled bit ratio of \".concat(bitRatio));\n            }\n\n            this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n            retArr.push(')');\n          }\n\n          break;\n\n        case 'MemoryOptimizedNumberTexture':\n          retArr.push(\"getMemoryOptimized32(\".concat(markupName, \", \").concat(markupName, \"Size, \").concat(markupName, \"Dim, \"));\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n          break;\n\n        default:\n          throw new Error(\"unhandled member expression \\\"\".concat(type, \"\\\"\"));\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *call* expression\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns  {Array} the append retArr\n     */\n\n  }, {\n    key: \"astCallExpression\",\n    value: function astCallExpression(ast, retArr) {\n      if (!ast.callee) {\n        throw this.astErrorOutput('Unknown CallExpression', ast);\n      }\n\n      var functionName = null;\n      var isMathFunction = this.isAstMathFunction(ast); // Its a math operator or this.something(), remove the prefix\n\n      if (isMathFunction || ast.callee.object && ast.callee.object.type === 'ThisExpression') {\n        functionName = ast.callee.property.name;\n      } // Issue #212, BABEL!\n      else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n          functionName = ast.callee.expressions[1].property.name;\n        } else {\n          functionName = ast.callee.name;\n        }\n\n      if (!functionName) {\n        throw this.astErrorOutput(\"Unhandled function, couldn't find name\", ast);\n      } // if this if grows to more than one, lets use a switch\n\n\n      if (functionName === 'atan2') {\n        functionName = 'atan';\n      } // Register the function into the called registry\n\n\n      if (this.calledFunctions.indexOf(functionName) < 0) {\n        this.calledFunctions.push(functionName);\n      }\n\n      if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n        for (var i = 0; i < this.plugins.length; i++) {\n          var plugin = this.plugins[i];\n\n          if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n            retArr.push(plugin.functionReplace);\n            return retArr;\n          }\n        }\n      } // track the function was called\n\n\n      if (this.onFunctionCall) {\n        this.onFunctionCall(this.name, functionName, ast.arguments);\n      } // Call the function\n\n\n      retArr.push(functionName); // Open arguments space\n\n      retArr.push('('); // Add the arguments\n\n      if (isMathFunction) {\n        for (var _i4 = 0; _i4 < ast.arguments.length; ++_i4) {\n          var argument = ast.arguments[_i4];\n          var argumentType = this.getType(argument);\n\n          if (_i4 > 0) {\n            retArr.push(', ');\n          }\n\n          switch (argumentType) {\n            case 'Integer':\n              this.castValueToFloat(argument, retArr);\n              break;\n\n            default:\n              this.astGeneric(argument, retArr);\n              break;\n          }\n        }\n      } else {\n        var targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n\n        for (var _i5 = 0; _i5 < ast.arguments.length; ++_i5) {\n          var _argument = ast.arguments[_i5];\n          var targetType = targetTypes[_i5];\n\n          if (_i5 > 0) {\n            retArr.push(', ');\n          }\n\n          var _argumentType = this.getType(_argument);\n\n          if (!targetType) {\n            this.triggerImplyArgumentType(functionName, _i5, _argumentType, this);\n            targetType = _argumentType;\n          }\n\n          switch (_argumentType) {\n            case 'Number':\n            case 'Float':\n              if (targetType === 'Integer') {\n                retArr.push('int(');\n                this.astGeneric(_argument, retArr);\n                retArr.push(')');\n                continue;\n              } else if (targetType === 'Number' || targetType === 'Float') {\n                this.astGeneric(_argument, retArr);\n                continue;\n              } else if (targetType === 'LiteralInteger') {\n                this.castLiteralToFloat(_argument, retArr);\n                continue;\n              }\n\n              break;\n\n            case 'Integer':\n              if (targetType === 'Number' || targetType === 'Float') {\n                retArr.push('float(');\n                this.astGeneric(_argument, retArr);\n                retArr.push(')');\n                continue;\n              } else if (targetType === 'Integer') {\n                this.astGeneric(_argument, retArr);\n                continue;\n              }\n\n              break;\n\n            case 'LiteralInteger':\n              if (targetType === 'Integer') {\n                this.castLiteralToInteger(_argument, retArr);\n                continue;\n              } else if (targetType === 'Number' || targetType === 'Float') {\n                this.castLiteralToFloat(_argument, retArr);\n                continue;\n              } else if (targetType === 'LiteralInteger') {\n                this.astGeneric(_argument, retArr);\n                continue;\n              }\n\n              break;\n\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              if (targetType === _argumentType) {\n                this.astGeneric(_argument, retArr);\n                continue;\n              }\n\n              break;\n\n            case 'ArrayTexture(1)':\n            case 'ArrayTexture(2)':\n            case 'ArrayTexture(3)':\n            case 'ArrayTexture(4)':\n            case 'Array':\n            case 'Input':\n              if (targetType === _argumentType) {\n                this.triggerTrackArgumentSynonym(this.name, _argument.name, functionName, _i5);\n                this.astGeneric(_argument, retArr);\n                continue;\n              }\n\n              break;\n          }\n\n          throw this.astErrorOutput(\"Unhandled argument combination of \".concat(_argumentType, \" and \").concat(targetType, \" for argument named \\\"\").concat(_argument.name, \"\\\"\"), ast);\n        }\n      } // Close arguments space\n\n\n      retArr.push(')');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Array* Expression\n     * @param {Object} arrNode - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astArrayExpression\",\n    value: function astArrayExpression(arrNode, retArr) {\n      var arrLen = arrNode.elements.length;\n      retArr.push('vec' + arrLen + '(');\n\n      for (var i = 0; i < arrLen; ++i) {\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        var subNode = arrNode.elements[i];\n        this.astGeneric(subNode, retArr);\n      }\n\n      retArr.push(')');\n      return retArr;\n    }\n  }, {\n    key: \"memberExpressionXYZ\",\n    value: function memberExpressionXYZ(x, y, z, retArr) {\n      if (z) {\n        retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n      } else {\n        retArr.push('0, ');\n      }\n\n      if (y) {\n        retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n      } else {\n        retArr.push('0, ');\n      }\n\n      retArr.push(this.memberExpressionPropertyMarkup(x));\n      return retArr;\n    }\n  }, {\n    key: \"memberExpressionPropertyMarkup\",\n    value: function memberExpressionPropertyMarkup(property) {\n      if (!property) {\n        throw new Error('Property not set');\n      }\n\n      var type = this.getType(property);\n      var result = [];\n\n      switch (type) {\n        case 'Number':\n        case 'Float':\n          this.castValueToInteger(property, result);\n          break;\n\n        case 'LiteralInteger':\n          this.castLiteralToInteger(property, result);\n          break;\n\n        default:\n          this.astGeneric(property, result);\n      }\n\n      return result.join('');\n    }\n  }]);\n\n  return WebGLFunctionNode;\n}(FunctionNode);\n\nvar typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D'\n};\nvar operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\nmodule.exports = {\n  WebGLFunctionNode: WebGLFunctionNode\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueHTMLImage =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueHTMLImage, _WebGLKernelValue);\n\n  function WebGLKernelValueHTMLImage(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueHTMLImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueHTMLImage).call(this, value, settings));\n    var width = value.width,\n        height = value.height;\n    _this.dimensions = [width, height, 1];\n\n    _this.requestTexture();\n\n    _this.textureSize = [width, height];\n    _this.uploadValue = value;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueHTMLImage, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \";\\n\");\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(inputImage) {\n      if (inputImage.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueHTMLImage;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage: WebGLKernelValueHTMLImage\n};","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueSingleInput =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueSingleInput, _WebGLKernelValue);\n\n  function WebGLKernelValueSingleInput(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueSingleInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueSingleInput).call(this, value, settings));\n\n    _this.requestTexture();\n\n    _this.bitRatio = 4;\n\n    var _value$size = _slicedToArray(value.size, 3),\n        w = _value$size[0],\n        h = _value$size[1],\n        d = _value$size[2];\n\n    _this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    _this.textureSize = utils.getMemoryOptimizedFloatTextureSize(_this.dimensions, _this.bitRatio);\n    _this.uploadArrayLength = _this.textureSize[0] * _this.textureSize[1] * _this.bitRatio;\n    _this.uploadValue = new Float32Array(_this.uploadArrayLength);\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueSingleInput, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return utils.linesToString([\"const uploadValue_\".concat(this.name, \" = new Float32Array(\").concat(this.uploadArrayLength, \")\"), \"flattenTo(\".concat(this.varName, \".value, uploadValue_\").concat(this.name, \")\")]);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(input) {\n      if (input.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flattenTo(input.value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueSingleInput;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueSingleInput: WebGLKernelValueSingleInput\n};","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueUnsignedInput =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueUnsignedInput, _WebGLKernelValue);\n\n  function WebGLKernelValueUnsignedInput(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueUnsignedInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueUnsignedInput).call(this, value, settings));\n\n    _this.requestTexture();\n\n    _this.bitRatio = _this.getBitRatio(value);\n\n    var _value$size = _slicedToArray(value.size, 3),\n        w = _value$size[0],\n        h = _value$size[1],\n        d = _value$size[2];\n\n    _this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    _this.textureSize = utils.getMemoryOptimizedPackedTextureSize(_this.dimensions, _this.bitRatio);\n    _this.uploadArrayLength = _this.textureSize[0] * _this.textureSize[1] * (4 / _this.bitRatio);\n    _this.TranserArrayType = _this.getTransferArrayType(value.value);\n    _this.preUploadValue = new _this.TranserArrayType(_this.uploadArrayLength);\n    _this.uploadValue = new Uint8Array(_this.preUploadValue.buffer);\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueUnsignedInput, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return utils.linesToString([\"const preUploadValue_\".concat(this.name, \" = new \").concat(this.TranserArrayType.name, \"(\").concat(this.uploadArrayLength, \")\"), \"const uploadValue_\".concat(this.name, \" = new Uint8Array(preUploadValue_\").concat(this.name, \".buffer)\"), \"flattenTo(\".concat(this.varName, \".value, preUploadValue_\").concat(this.name, \")\")]);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(input) {\n      if (input.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flattenTo(input.value, this.preUploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueUnsignedInput;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput: WebGLKernelValueUnsignedInput\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueMemoryOptimizedNumberTexture =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueMemoryOptimizedNumberTexture, _WebGLKernelValue);\n\n  function WebGLKernelValueMemoryOptimizedNumberTexture(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueMemoryOptimizedNumberTexture);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueMemoryOptimizedNumberTexture).call(this, value, settings));\n\n    _this.setupTexture();\n\n    _this.dimensions = value.dimensions;\n    _this.textureSize = value.size;\n    _this.uploadValue = value.texture;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueMemoryOptimizedNumberTexture, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \".texture;\\n\");\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(inputTexture) {\n      if (inputTexture.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      if (this.checkContext && inputTexture.context !== this.context) {\n        throw new Error(\"Value \".concat(this.name, \" (\").concat(this.type, \") must be from same context\"));\n      }\n\n      var gl = this.context;\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueMemoryOptimizedNumberTexture;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture: WebGLKernelValueMemoryOptimizedNumberTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueNumberTexture =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueNumberTexture, _WebGLKernelValue);\n\n  function WebGLKernelValueNumberTexture(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueNumberTexture);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueNumberTexture).call(this, value, settings));\n\n    _this.setupTexture();\n\n    var textureSize = value.size,\n        dimensions = value.dimensions;\n    _this.bitRatio = _this.getBitRatio(value);\n    _this.dimensions = dimensions;\n    _this.textureSize = textureSize;\n    _this.uploadValue = value.texture;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueNumberTexture, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \".texture;\\n\");\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(inputTexture) {\n      if (inputTexture.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      if (this.checkContext && inputTexture.context !== this.context) {\n        throw new Error(\"Value \".concat(this.name, \" (\").concat(this.type, \") must be from same context\"));\n      }\n\n      var gl = this.context;\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueNumberTexture;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture: WebGLKernelValueNumberTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueSingleArray =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueSingleArray, _WebGLKernelValue);\n\n  function WebGLKernelValueSingleArray(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueSingleArray);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueSingleArray).call(this, value, settings));\n\n    _this.requestTexture();\n\n    _this.bitRatio = 4;\n    _this.dimensions = utils.getDimensions(value, true);\n    _this.textureSize = utils.getMemoryOptimizedFloatTextureSize(_this.dimensions, _this.bitRatio);\n    _this.uploadArrayLength = _this.textureSize[0] * _this.textureSize[1] * _this.bitRatio;\n    _this.uploadValue = new Float32Array(_this.uploadArrayLength);\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueSingleArray, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return utils.linesToString([\"const uploadValue_\".concat(this.name, \" = new Float32Array(\").concat(this.uploadArrayLength, \")\"), \"flattenTo(\".concat(this.varName, \", uploadValue_\").concat(this.name, \")\")]);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flattenTo(value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueSingleArray;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueSingleArray: WebGLKernelValueSingleArray\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueSingleArray1DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueSingleArray1DI, _WebGLKernelValue);\n\n  function WebGLKernelValueSingleArray1DI(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueSingleArray1DI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueSingleArray1DI).call(this, value, settings));\n\n    _this.requestTexture();\n\n    _this.bitRatio = 4;\n\n    _this.setShape(value);\n\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueSingleArray1DI, [{\n    key: \"setShape\",\n    value: function setShape(value) {\n      var valueDimensions = utils.getDimensions(value, true);\n      this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n      this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n      this.uploadValue = new Float32Array(this.uploadArrayLength);\n    }\n  }, {\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return utils.linesToString([\"const uploadValue_\".concat(this.name, \" = new Float32Array(\").concat(this.uploadArrayLength, \")\"), \"flattenTo(\".concat(this.varName, \", uploadValue_\").concat(this.name, \")\")]);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flatten2dArrayTo(value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueSingleArray1DI;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI: WebGLKernelValueSingleArray1DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueSingleArray2DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueSingleArray2DI, _WebGLKernelValue);\n\n  function WebGLKernelValueSingleArray2DI(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueSingleArray2DI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueSingleArray2DI).call(this, value, settings));\n\n    _this.requestTexture();\n\n    _this.bitRatio = 4;\n\n    _this.setShape(value);\n\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueSingleArray2DI, [{\n    key: \"setShape\",\n    value: function setShape(value) {\n      var valueDimensions = utils.getDimensions(value, true);\n      this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n      this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n      this.uploadValue = new Float32Array(this.uploadArrayLength);\n    }\n  }, {\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return utils.linesToString([\"const uploadValue_\".concat(this.name, \" = new Float32Array(\").concat(this.uploadArrayLength, \")\"), \"flattenTo(\".concat(this.varName, \", uploadValue_\").concat(this.name, \")\")]);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flatten3dArrayTo(value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueSingleArray2DI;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI: WebGLKernelValueSingleArray2DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueSingleArray3DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueSingleArray3DI, _WebGLKernelValue);\n\n  function WebGLKernelValueSingleArray3DI(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueSingleArray3DI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueSingleArray3DI).call(this, value, settings));\n\n    _this.requestTexture();\n\n    _this.bitRatio = 4;\n\n    _this.setShape(value);\n\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueSingleArray3DI, [{\n    key: \"setShape\",\n    value: function setShape(value) {\n      var valueDimensions = utils.getDimensions(value, true);\n      this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n      this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n      this.uploadValue = new Float32Array(this.uploadArrayLength);\n    }\n  }, {\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return utils.linesToString([\"const uploadValue_\".concat(this.name, \" = new Float32Array(\").concat(this.uploadArrayLength, \")\"), \"flattenTo(\".concat(this.varName, \", uploadValue_\").concat(this.name, \")\")]);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flatten4dArrayTo(value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueSingleArray3DI;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI: WebGLKernelValueSingleArray3DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueUnsignedArray =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueUnsignedArray, _WebGLKernelValue);\n\n  function WebGLKernelValueUnsignedArray(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueUnsignedArray);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueUnsignedArray).call(this, value, settings));\n\n    _this.requestTexture();\n\n    _this.bitRatio = _this.getBitRatio(value);\n    _this.dimensions = utils.getDimensions(value, true);\n    _this.textureSize = utils.getMemoryOptimizedPackedTextureSize(_this.dimensions, _this.bitRatio);\n    _this.uploadArrayLength = _this.textureSize[0] * _this.textureSize[1] * (4 / _this.bitRatio);\n    _this.TranserArrayType = _this.getTransferArrayType(value);\n    _this.preUploadValue = new _this.TranserArrayType(_this.uploadArrayLength);\n    _this.uploadValue = new Uint8Array(_this.preUploadValue.buffer);\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueUnsignedArray, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return utils.linesToString([\"const preUploadValue_\".concat(this.name, \" = new \").concat(this.TranserArrayType.name, \"(\").concat(this.uploadArrayLength, \")\"), \"const uploadValue_\".concat(this.name, \" = new Uint8Array(preUploadValue_\").concat(this.name, \".buffer)\"), \"flattenTo(\".concat(this.varName, \", preUploadValue_\").concat(this.name, \")\")]);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"ivec2 \".concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"ivec3 \".concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flattenTo(value, this.preUploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGLKernelValueUnsignedArray;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray: WebGLKernelValueUnsignedArray\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('gpu-mock.js'),\n    gpuMock = _require.gpuMock;\n\nvar _require2 = require('./utils'),\n    utils = _require2.utils;\n\nvar _require3 = require('./backend/cpu/kernel'),\n    CPUKernel = _require3.CPUKernel;\n\nvar _require4 = require('./backend/headless-gl/kernel'),\n    HeadlessGLKernel = _require4.HeadlessGLKernel;\n\nvar _require5 = require('./backend/web-gl2/kernel'),\n    WebGL2Kernel = _require5.WebGL2Kernel;\n\nvar _require6 = require('./backend/web-gl/kernel'),\n    WebGLKernel = _require6.WebGLKernel;\n\nvar _require7 = require('./kernel-run-shortcut'),\n    kernelRunShortcut = _require7.kernelRunShortcut;\n/**\n *\n * @type {Kernel[]}\n */\n\n\nvar kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n/**\n *\n * @type {string[]}\n */\n\nvar kernelTypes = ['gpu', 'cpu'];\nvar internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel\n};\nvar validate = true;\n/**\n * The GPU.js library class which manages the GPU context for the creating kernels\n */\n\nvar GPU =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  _createClass(GPU, null, [{\n    key: \"disableValidation\",\n    value: function disableValidation() {\n      validate = false;\n    }\n  }, {\n    key: \"enableValidation\",\n    value: function enableValidation() {\n      validate = true;\n    }\n  }, {\n    key: \"isGPUSupported\",\n    get: function get() {\n      return kernelOrder.some(function (Kernel) {\n        return Kernel.isSupported;\n      });\n    }\n    /**\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isKernelMapSupported\",\n    get: function get() {\n      return kernelOrder.some(function (Kernel) {\n        return Kernel.isSupported && Kernel.features.kernelMap;\n      });\n    }\n    /**\n     * @desc TRUE is platform supports OffscreenCanvas\n     */\n\n  }, {\n    key: \"isOffscreenCanvasSupported\",\n    get: function get() {\n      return typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined' || typeof importScripts !== 'undefined';\n    }\n    /**\n     * @desc TRUE if platform supports WebGL\n     */\n\n  }, {\n    key: \"isWebGLSupported\",\n    get: function get() {\n      return WebGLKernel.isSupported;\n    }\n    /**\n     * @desc TRUE if platform supports WebGL2\n     */\n\n  }, {\n    key: \"isWebGL2Supported\",\n    get: function get() {\n      return WebGL2Kernel.isSupported;\n    }\n    /**\n     * @desc TRUE if platform supports HeadlessGL\n     */\n\n  }, {\n    key: \"isHeadlessGLSupported\",\n    get: function get() {\n      return HeadlessGLKernel.isSupported;\n    }\n    /**\n     *\n     * @desc TRUE if platform supports Canvas\n     */\n\n  }, {\n    key: \"isCanvasSupported\",\n    get: function get() {\n      return typeof HTMLCanvasElement !== 'undefined';\n    }\n    /**\n     * @desc TRUE if platform supports HTMLImageArray}\n     */\n\n  }, {\n    key: \"isGPUHTMLImageArraySupported\",\n    get: function get() {\n      return WebGL2Kernel.isSupported;\n    }\n    /**\n     * @desc TRUE if platform supports single precision}\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isSinglePrecisionSupported\",\n    get: function get() {\n      return kernelOrder.some(function (Kernel) {\n        return Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat;\n      });\n    }\n    /**\n     * Creates an instance of GPU.\n     * @param {IGPUSettings} [settings] - Settings to set mode, and other properties\n     */\n\n  }]);\n\n  function GPU(settings) {\n    _classCallCheck(this, GPU);\n\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    if (this.mode === 'dev') return;\n    this.chooseKernel(); // add functions from settings\n\n    if (settings.functions) {\n      for (var i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    } // add native functions from settings\n\n\n    if (settings.nativeFunctions) {\n      for (var p in settings.nativeFunctions) {\n        this.addNativeFunction(p, settings.nativeFunctions[p]);\n      }\n    }\n  }\n  /**\n   * Choose kernel type and save on .Kernel property of GPU\n   */\n\n\n  _createClass(GPU, [{\n    key: \"chooseKernel\",\n    value: function chooseKernel() {\n      if (this.Kernel) return;\n      var Kernel = null;\n\n      if (this.context) {\n        for (var i = 0; i < kernelOrder.length; i++) {\n          var ExternalKernel = kernelOrder[i];\n\n          if (ExternalKernel.isContextMatch(this.context)) {\n            if (!ExternalKernel.isSupported) {\n              throw new Error(\"Kernel type \".concat(ExternalKernel.name, \" not supported\"));\n            }\n\n            Kernel = ExternalKernel;\n            break;\n          }\n        }\n\n        if (Kernel === null) {\n          throw new Error('unknown Context');\n        }\n      } else if (this.mode) {\n        if (this.mode in internalKernels) {\n          if (!validate || internalKernels[this.mode].isSupported) {\n            Kernel = internalKernels[this.mode];\n          }\n        } else if (this.mode === 'gpu') {\n          for (var _i = 0; _i < kernelOrder.length; _i++) {\n            if (kernelOrder[_i].isSupported) {\n              Kernel = kernelOrder[_i];\n              break;\n            }\n          }\n        } else if (this.mode === 'cpu') {\n          Kernel = CPUKernel;\n        }\n\n        if (!Kernel) {\n          throw new Error(\"A requested mode of \\\"\".concat(this.mode, \"\\\" and is not supported\"));\n        }\n      } else {\n        for (var _i2 = 0; _i2 < kernelOrder.length; _i2++) {\n          if (kernelOrder[_i2].isSupported) {\n            Kernel = kernelOrder[_i2];\n            break;\n          }\n        }\n\n        if (!Kernel) {\n          Kernel = CPUKernel;\n        }\n      }\n\n      if (!this.mode) {\n        this.mode = Kernel.mode;\n      }\n\n      this.Kernel = Kernel;\n    }\n    /**\n     * @desc This creates a callable function object to call the kernel function with the argument parameter set\n     * @param {Function|String|object} source - The calling to perform the conversion\n     * @param {Object} [settings] - The parameter configuration object\n     * @return {Kernel} callable function to run\n     */\n\n  }, {\n    key: \"createKernel\",\n    value: function createKernel(source, settings) {\n      if (typeof source === 'undefined') {\n        throw new Error('Missing source parameter');\n      }\n\n      if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n        throw new Error('source parameter not a function');\n      }\n\n      if (this.mode === 'dev') {\n        var devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n        this.kernels.push(devKernel);\n        return devKernel;\n      }\n\n      source = typeof source === 'function' ? source.toString() : source;\n      var switchableKernels = {};\n      var settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {}; // handle conversion of argumentTypes\n\n      if (settings && typeof settings.argumentTypes === 'object') {\n        settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(function (argumentName) {\n          return settings.argumentTypes[argumentName];\n        });\n      }\n\n      function onRequestFallback(args) {\n        var fallbackKernel = new CPUKernel(source, {\n          argumentTypes: kernelRun.argumentTypes,\n          constantTypes: kernelRun.constantTypes,\n          graphical: kernelRun.graphical,\n          loopMaxIterations: kernelRun.loopMaxIterations,\n          constants: kernelRun.constants,\n          dynamicOutput: kernelRun.dynamicOutput,\n          dynamicArgument: kernelRun.dynamicArguments,\n          output: kernelRun.output,\n          precision: kernelRun.precision,\n          pipeline: kernelRun.pipeline,\n          immutable: kernelRun.immutable,\n          optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n          fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n          functions: kernelRun.functions,\n          nativeFunctions: kernelRun.nativeFunctions,\n          subKernels: kernelRun.subKernels,\n          strictIntegers: kernelRun.strictIntegers,\n          debug: kernelRun.debug,\n          warnVarUsage: kernelRun.warnVarUsage\n        });\n        fallbackKernel.build.apply(fallbackKernel, args);\n        var result = fallbackKernel.run.apply(fallbackKernel, args);\n        kernelRun.replaceKernel(fallbackKernel);\n        return result;\n      }\n\n      function onRequestSwitchKernel(args, kernel) {\n        var argumentTypes = new Array(args.length);\n\n        for (var i = 0; i < args.length; i++) {\n          var arg = args[i];\n          var type = kernel.argumentTypes[i];\n\n          if (arg.type) {\n            argumentTypes[i] = arg.type;\n          } else {\n            switch (type) {\n              case 'Number':\n              case 'Integer':\n              case 'Float':\n              case 'ArrayTexture(1)':\n                argumentTypes[i] = utils.getVariableType(arg);\n                break;\n\n              default:\n                argumentTypes[i] = type;\n            }\n          }\n        }\n\n        var signature = argumentTypes.join(',');\n        var existingKernel = switchableKernels[signature];\n\n        if (existingKernel) {\n          existingKernel.run.apply(existingKernel, args);\n\n          if (existingKernel.renderKernels) {\n            return existingKernel.renderKernels();\n          } else {\n            return existingKernel.renderOutput();\n          }\n        }\n\n        var newKernel = switchableKernels[signature] = new kernel.constructor(source, {\n          argumentTypes: argumentTypes,\n          constantTypes: kernel.constantTypes,\n          graphical: kernel.graphical,\n          loopMaxIterations: kernel.loopMaxIterations,\n          constants: kernel.constants,\n          dynamicOutput: kernel.dynamicOutput,\n          dynamicArgument: kernel.dynamicArguments,\n          context: kernel.context,\n          canvas: kernel.canvas,\n          output: kernel.output,\n          precision: kernel.precision,\n          pipeline: kernel.pipeline,\n          immutable: kernel.immutable,\n          optimizeFloatMemory: kernel.optimizeFloatMemory,\n          fixIntegerDivisionAccuracy: kernel.fixIntegerDivisionAccuracy,\n          functions: kernel.functions,\n          nativeFunctions: kernel.nativeFunctions,\n          subKernels: kernel.subKernels,\n          strictIntegers: kernel.strictIntegers,\n          debug: kernel.debug,\n          gpu: kernel.gpu,\n          validate: validate,\n          warnVarUsage: kernel.warnVarUsage,\n          returnType: kernel.returnType,\n          onRequestFallback: onRequestFallback,\n          onRequestSwitchKernel: onRequestSwitchKernel\n        });\n        newKernel.build.apply(newKernel, args);\n        newKernel.run.apply(newKernel, args);\n        kernelRun.replaceKernel(newKernel);\n\n        if (newKernel.renderKernels) {\n          return newKernel.renderKernels();\n        } else {\n          return newKernel.renderOutput();\n        }\n      }\n\n      var mergedSettings = Object.assign({\n        context: this.context,\n        canvas: this.canvas,\n        functions: this.functions,\n        nativeFunctions: this.nativeFunctions,\n        gpu: this,\n        validate: validate,\n        onRequestFallback: onRequestFallback,\n        onRequestSwitchKernel: onRequestSwitchKernel\n      }, settingsCopy);\n      var kernelRun = kernelRunShortcut(new this.Kernel(source, mergedSettings)); //if canvas didn't come from this, propagate from kernel\n\n      if (!this.canvas) {\n        this.canvas = kernelRun.canvas;\n      } //if context didn't come from this, propagate from kernel\n\n\n      if (!this.context) {\n        this.context = kernelRun.context;\n      }\n\n      this.kernels.push(kernelRun);\n      return kernelRun;\n    }\n    /**\n     *\n     * Create a super kernel which executes sub kernels\n     * and saves their output to be used with the next sub kernel.\n     * This can be useful if we want to save the output on one kernel,\n     * and then use it as an input to another kernel. *Machine Learning*\n     *\n     * @param {Object|Array} subKernels - Sub kernels for this kernel\n     * @param {Function} rootKernel - Root kernel\n     *\n     * @returns {Function} callable kernel function\n     *\n     * @example\n     * const megaKernel = gpu.createKernelMap({\n     *   addResult: function add(a, b) {\n     *     return a[this.thread.x] + b[this.thread.x];\n     *   },\n     *   multiplyResult: function multiply(a, b) {\n     *     return a[this.thread.x] * b[this.thread.x];\n     *   },\n     *  }, function(a, b, c) {\n     *       return multiply(add(a, b), c);\n     * });\n     *\n     * megaKernel(a, b, c);\n     *\n     * Note: You can also define subKernels as an array of functions.\n     * > [add, multiply]\n     *\n     */\n\n  }, {\n    key: \"createKernelMap\",\n    value: function createKernelMap() {\n      var fn;\n      var settings;\n\n      if (typeof arguments[arguments.length - 2] === 'function') {\n        fn = arguments[arguments.length - 2];\n        settings = arguments[arguments.length - 1];\n      } else {\n        fn = arguments[arguments.length - 1];\n      }\n\n      if (this.mode !== 'dev') {\n        if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n          if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n            throw new Error(\"kernelMap not supported on \".concat(this.Kernel.name));\n          }\n        }\n      }\n\n      var settingsCopy = upgradeDeprecatedCreateKernelSettings(settings); // handle conversion of argumentTypes\n\n      if (settings && typeof settings.argumentTypes === 'object') {\n        settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(function (argumentName) {\n          return settings.argumentTypes[argumentName];\n        });\n      }\n\n      if (Array.isArray(arguments[0])) {\n        settingsCopy.subKernels = [];\n        var functions = arguments[0];\n\n        for (var i = 0; i < functions.length; i++) {\n          var source = functions[i].toString();\n          var name = utils.getFunctionNameFromString(source);\n          settingsCopy.subKernels.push({\n            name: name,\n            source: source,\n            property: i\n          });\n        }\n      } else {\n        settingsCopy.subKernels = [];\n        var _functions = arguments[0];\n\n        for (var p in _functions) {\n          if (!_functions.hasOwnProperty(p)) continue;\n\n          var _source = _functions[p].toString();\n\n          var _name = utils.getFunctionNameFromString(_source);\n\n          settingsCopy.subKernels.push({\n            name: _name || p,\n            source: _source,\n            property: p\n          });\n        }\n      }\n\n      var kernel = this.createKernel(fn, settingsCopy);\n      return kernel;\n    }\n    /**\n     *\n     * Combine different kernels into one super Kernel,\n     * useful to perform multiple operations inside one\n     * kernel without the penalty of data transfer between\n     * cpu and gpu.\n     *\n     * The number of kernel functions sent to this method can be variable.\n     * You can send in one, two, etc.\n     *\n     * @param {Function} subKernels - Kernel function(s) to combine.\n     * @param {Function} rootKernel - Root kernel to combine kernels into\n     *\n     * @example\n     *   combineKernels(add, multiply, function(a,b,c){\n     *     return add(multiply(a,b), c)\n     *  })\n     *\n     * @returns {Function} Callable kernel function\n     *\n     */\n\n  }, {\n    key: \"combineKernels\",\n    value: function combineKernels() {\n      var firstKernel = arguments[0];\n      var combinedKernel = arguments[arguments.length - 1];\n      if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n      var canvas = arguments[0].canvas;\n      var context = arguments[0].context;\n      var max = arguments.length - 1;\n\n      for (var i = 0; i < max; i++) {\n        arguments[i].setCanvas(canvas).setContext(context).setPipeline(true);\n      }\n\n      return function () {\n        var texture = combinedKernel.apply(this, arguments);\n\n        if (texture.toArray) {\n          return texture.toArray();\n        }\n\n        return texture;\n      };\n    }\n    /**\n     * @desc Adds additional functions, that the kernel may call.\n     * @param {Function|String} source - Javascript function to convert\n     * @param {IFunctionSettings} [settings]\n     * @returns {GPU} returns itself\n     */\n\n  }, {\n    key: \"addFunction\",\n    value: function addFunction(source, settings) {\n      this.functions.push(utils.functionToIFunction(source, settings));\n      return this;\n    }\n    /**\n     * @desc Adds additional native functions, that the kernel may call.\n     * @param {String} name - native function name, used for reverse lookup\n     * @param {String} source - the native function implementation, as it would be defined in it's entirety\n     * @param {object} [settings]\n     * @returns {GPU} returns itself\n     */\n\n  }, {\n    key: \"addNativeFunction\",\n    value: function addNativeFunction(name, source, settings) {\n      if (this.kernels.length > 0) {\n        throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n      }\n\n      settings = settings || {};\n\n      var _ref = this.Kernel.nativeFunctionArguments(source) || {},\n          argumentTypes = _ref.argumentTypes,\n          argumentNames = _ref.argumentNames;\n\n      this.nativeFunctions.push({\n        name: name,\n        source: source,\n        settings: settings,\n        argumentTypes: argumentTypes,\n        argumentNames: argumentNames,\n        returnType: settings.returnType || this.Kernel.nativeFunctionReturnType(source)\n      });\n      return this;\n    }\n    /**\n     * @desc Destroys all memory associated with gpu.js & the webGl if we created it\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n\n      if (!this.kernels) return; // perform on next run loop - for some reason we dont get lose context events\n      // if webGl is created and destroyed in the same run loop.\n\n      setTimeout(function () {\n        for (var i = 0; i < _this.kernels.length; i++) {\n          _this.kernels[i].destroy(true); // remove canvas if exists\n\n        } // all kernels are associated with one context, go ahead and take care of it here\n\n\n        var firstKernel = _this.kernels[0];\n\n        if (firstKernel) {\n          // if it is shortcut\n          if (firstKernel.kernel) {\n            firstKernel = firstKernel.kernel;\n          }\n\n          if (firstKernel.constructor.destroyContext) {\n            firstKernel.constructor.destroyContext(_this.context);\n          }\n        }\n      }, 0);\n    }\n  }]);\n\n  return GPU;\n}();\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n\n  var upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU: GPU,\n  kernelOrder: kernelOrder,\n  kernelTypes: kernelTypes\n};","// Reserved word lists for various dialects of the language\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n}; // And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\nvar keywordRelationalOperator = /^in(stanceof)?$/; // ## Character categories\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar nonASCIIidentifierChars = \"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null; // These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n// eslint-disable-next-line comma-spacing\n\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 477, 28, 11, 0, 9, 21, 190, 52, 76, 44, 33, 24, 27, 35, 30, 0, 12, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 26, 230, 43, 117, 63, 32, 0, 257, 0, 11, 39, 8, 0, 22, 0, 12, 39, 3, 3, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 270, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 68, 12, 0, 67, 12, 65, 1, 31, 6129, 15, 754, 9486, 286, 82, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541]; // eslint-disable-next-line comma-spacing\n\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 525, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 280, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239]; // This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\n\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n\n    if (pos > code) {\n      return false;\n    }\n\n    pos += set[i + 1];\n\n    if (pos >= code) {\n      return true;\n    }\n  }\n} // Test whether a given character code starts an identifier.\n\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) {\n    return code === 36;\n  }\n\n  if (code < 91) {\n    return true;\n  }\n\n  if (code < 97) {\n    return code === 95;\n  }\n\n  if (code < 123) {\n    return true;\n  }\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  if (astral === false) {\n    return false;\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n} // Test whether a given character is part of an identifier.\n\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) {\n    return code === 36;\n  }\n\n  if (code < 58) {\n    return true;\n  }\n\n  if (code < 65) {\n    return false;\n  }\n\n  if (code < 91) {\n    return true;\n  }\n\n  if (code < 97) {\n    return code === 95;\n  }\n\n  if (code < 123) {\n    return true;\n  }\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  if (astral === false) {\n    return false;\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n} // ## Token types\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\n\nvar TokenType = function TokenType(label, conf) {\n  if (conf === void 0) conf = {};\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {\n    beforeExpr: true,\n    binop: prec\n  });\n}\n\nvar beforeExpr = {\n  beforeExpr: true\n};\nvar startsExpr = {\n  startsExpr: true\n}; // Map keyword names to token types.\n\nvar keywords$1 = {}; // Succinct definitions of keyword token types\n\nfunction kw(name, options) {\n  if (options === void 0) options = {};\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options);\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n  eq: new TokenType(\"=\", {\n    beforeExpr: true,\n    isAssign: true\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr: true,\n    isAssign: true\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix: true,\n    postfix: true,\n    startsExpr: true\n  }),\n  prefix: new TokenType(\"!/~\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr: true,\n    binop: 9,\n    prefix: true,\n    startsExpr: true\n  }),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {\n    beforeExpr: true\n  }),\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {\n    isLoop: true,\n    beforeExpr: true\n  }),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {\n    isLoop: true\n  }),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {\n    isLoop: true\n  }),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {\n    beforeExpr: true,\n    binop: 7\n  }),\n  _instanceof: kw(\"instanceof\", {\n    beforeExpr: true,\n    binop: 7\n  }),\n  _typeof: kw(\"typeof\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  _void: kw(\"void\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  _delete: kw(\"delete\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  })\n}; // Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || !ecma2019String && (code === 0x2028 || code === 0x2029);\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString; // Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName);\n}\n\nvar isArray = Array.isArray || function (obj) {\n  return toString.call(obj) === \"[object Array]\";\n}; // These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset(n) {\n  return new Position(this.line, this.column + n);\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n\n  if (p.sourceFile !== null) {\n    this.source = p.sourceFile;\n  }\n}; // The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n} // A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n}; // Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions) {\n    options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt];\n  }\n\n  if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null) {\n    options.allowReserved = options.ecmaVersion < 5;\n  }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n\n    options.onToken = function (token) {\n      return tokens.push(token);\n    };\n  }\n\n  if (isArray(options.onComment)) {\n    options.onComment = pushComment(options, options.onComment);\n  }\n\n  return options;\n}\n\nfunction pushComment(options, array) {\n  return function (block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n\n    if (options.locations) {\n      comment.loc = new SourceLocation(this, startLoc, endLoc);\n    }\n\n    if (options.ranges) {\n      comment.range = [start, end];\n    }\n\n    array.push(comment);\n  };\n} // Registered plugins\n\n\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\");\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--) {\n      if (reserved = reservedWords[v]) {\n        break;\n      }\n    }\n\n    if (options.sourceType === \"module\") {\n      reserved += \" await\";\n    }\n  }\n\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input); // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n\n  this.containsEsc = false; // Load plugins\n\n  this.loadPlugins(options.plugins); // Set up token state\n  // The current position of the tokenizer in the input.\n\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  } // Properties of the current token:\n  // Its type\n\n\n  this.type = types.eof; // For tokens that include more information than their type, the value\n\n  this.value = null; // Its start and end offset\n\n  this.start = this.end = this.pos; // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n\n  this.startLoc = this.endLoc = this.curPosition(); // Position information for the previous token\n\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos; // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n\n  this.context = this.initialContext();\n  this.exprAllowed = true; // Figure out if it's a module code.\n\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos); // Used to signify the start of a potential arrow function\n\n  this.potentialArrowAt = -1; // Flags to track whether we are in a function, a generator, an async function.\n\n  this.inFunction = this.inGenerator = this.inAsync = false; // Positions to delayed-check that yield/await does not exist in default parameters.\n\n  this.yieldPos = this.awaitPos = 0; // Labels in scope.\n\n  this.labels = []; // If enabled, skip leading hashbang line.\n\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\") {\n    this.skipLineComment(2);\n  } // Scope tracking for duplicate variable names (see scope.js)\n\n\n  this.scopeStack = [];\n  this.enterFunctionScope(); // For RegExp validation\n\n  this.regexpState = null;\n}; // DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\n\n\nParser.prototype.isKeyword = function isKeyword(word) {\n  return this.keywords.test(word);\n};\n\nParser.prototype.isReservedWord = function isReservedWord(word) {\n  return this.reservedWords.test(word);\n};\n\nParser.prototype.extend = function extend(name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins(pluginConfigs) {\n  var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n\n    if (!plugin) {\n      throw new Error(\"Plugin '\" + name + \"' not found\");\n    }\n\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse() {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node);\n};\n\nvar pp = Parser.prototype; // ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\n\npp.strictDirective = function (start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n\n    if (!match) {\n      return false;\n    }\n\n    if ((match[1] || match[2]) === \"use strict\") {\n      return true;\n    }\n\n    start += match[0].length;\n  }\n}; // Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\n\npp.eat = function (type) {\n  if (this.type === type) {\n    this.next();\n    return true;\n  } else {\n    return false;\n  }\n}; // Tests whether parsed token is a contextual keyword.\n\n\npp.isContextual = function (name) {\n  return this.type === types.name && this.value === name && !this.containsEsc;\n}; // Consumes contextual keyword if possible.\n\n\npp.eatContextual = function (name) {\n  if (!this.isContextual(name)) {\n    return false;\n  }\n\n  this.next();\n  return true;\n}; // Asserts that following token is given contextual keyword.\n\n\npp.expectContextual = function (name) {\n  if (!this.eatContextual(name)) {\n    this.unexpected();\n  }\n}; // Test whether a semicolon can be inserted at the current position.\n\n\npp.canInsertSemicolon = function () {\n  return this.type === types.eof || this.type === types.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n};\n\npp.insertSemicolon = function () {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon) {\n      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n    }\n\n    return true;\n  }\n}; // Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\n\npp.semicolon = function () {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) {\n    this.unexpected();\n  }\n};\n\npp.afterTrailingComma = function (tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma) {\n      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n    }\n\n    if (!notNext) {\n      this.next();\n    }\n\n    return true;\n  }\n}; // Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\n\npp.expect = function (type) {\n  this.eat(type) || this.unexpected();\n}; // Raise an unexpected token error.\n\n\npp.unexpected = function (pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n}\n\npp.checkPatternErrors = function (refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) {\n    return;\n  }\n\n  if (refDestructuringErrors.trailingComma > -1) {\n    this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\");\n  }\n\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n\n  if (parens > -1) {\n    this.raiseRecoverable(parens, \"Parenthesized pattern\");\n  }\n};\n\npp.checkExpressionErrors = function (refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) {\n    return false;\n  }\n\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n\n  if (!andThrow) {\n    return shorthandAssign >= 0 || doubleProto >= 0;\n  }\n\n  if (shorthandAssign >= 0) {\n    this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\");\n  }\n\n  if (doubleProto >= 0) {\n    this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\");\n  }\n};\n\npp.checkYieldAwaitInDefaultParams = function () {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {\n    this.raise(this.yieldPos, \"Yield expression cannot be a default value\");\n  }\n\n  if (this.awaitPos) {\n    this.raise(this.awaitPos, \"Await expression cannot be a default value\");\n  }\n};\n\npp.isSimpleAssignTarget = function (expr) {\n  if (expr.type === \"ParenthesizedExpression\") {\n    return this.isSimpleAssignTarget(expr.expression);\n  }\n\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\";\n};\n\nvar pp$1 = Parser.prototype; // ### Statement parsing\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function (node) {\n  var this$1 = this;\n  var exports = {};\n\n  if (!node.body) {\n    node.body = [];\n  }\n\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n\n  return this.finishNode(node, \"Program\");\n};\n\nvar loopLabel = {\n  kind: \"loop\"\n};\nvar switchLabel = {\n  kind: \"switch\"\n};\n\npp$1.isLet = function () {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) {\n    return false;\n  }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length,\n      nextCh = this.input.charCodeAt(next);\n\n  if (nextCh === 91 || nextCh === 123) {\n    return true;\n  } // '{' and '['\n\n\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) {\n      ++pos;\n    }\n\n    var ident = this.input.slice(next, pos);\n\n    if (!keywordRelationalOperator.test(ident)) {\n      return true;\n    }\n  }\n\n  return false;\n}; // check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\n\n\npp$1.isAsyncFunction = function () {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\")) {\n    return false;\n  }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === \"function\" && (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)));\n}; // Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\n\npp$1.parseStatement = function (declaration, topLevel, exports) {\n  var starttype = this.type,\n      node = this.startNode(),\n      kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  } // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n\n  switch (starttype) {\n    case types._break:\n    case types._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n\n    case types._debugger:\n      return this.parseDebuggerStatement(node);\n\n    case types._do:\n      return this.parseDoStatement(node);\n\n    case types._for:\n      return this.parseForStatement(node);\n\n    case types._function:\n      if (!declaration && this.options.ecmaVersion >= 6) {\n        this.unexpected();\n      }\n\n      return this.parseFunctionStatement(node, false);\n\n    case types._class:\n      if (!declaration) {\n        this.unexpected();\n      }\n\n      return this.parseClass(node, true);\n\n    case types._if:\n      return this.parseIfStatement(node);\n\n    case types._return:\n      return this.parseReturnStatement(node);\n\n    case types._switch:\n      return this.parseSwitchStatement(node);\n\n    case types._throw:\n      return this.parseThrowStatement(node);\n\n    case types._try:\n      return this.parseTryStatement(node);\n\n    case types._const:\n    case types._var:\n      kind = kind || this.value;\n\n      if (!declaration && kind !== \"var\") {\n        this.unexpected();\n      }\n\n      return this.parseVarStatement(node, kind);\n\n    case types._while:\n      return this.parseWhileStatement(node);\n\n    case types._with:\n      return this.parseWithStatement(node);\n\n    case types.braceL:\n      return this.parseBlock();\n\n    case types.semi:\n      return this.parseEmptyStatement(node);\n\n    case types._export:\n    case types._import:\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) {\n          this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n        }\n\n        if (!this.inModule) {\n          this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n        }\n      }\n\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports);\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (!declaration) {\n          this.unexpected();\n        }\n\n        this.next();\n        return this.parseFunctionStatement(node, true);\n      }\n\n      var maybeName = this.value,\n          expr = this.parseExpression();\n\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n        return this.parseLabeledStatement(node, maybeName, expr);\n      } else {\n        return this.parseExpressionStatement(node, expr);\n      }\n\n  }\n};\n\npp$1.parseBreakContinueStatement = function (node, keyword) {\n  var this$1 = this;\n  var isBreak = keyword === \"break\";\n  this.next();\n\n  if (this.eat(types.semi) || this.insertSemicolon()) {\n    node.label = null;\n  } else if (this.type !== types.name) {\n    this.unexpected();\n  } else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  } // Verify that there is an actual destination to break or\n  // continue to.\n\n\n  var i = 0;\n\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) {\n        break;\n      }\n\n      if (node.label && isBreak) {\n        break;\n      }\n    }\n  }\n\n  if (i === this.labels.length) {\n    this.raise(node.start, \"Unsyntactic \" + keyword);\n  }\n\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n};\n\npp$1.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\");\n};\n\npp$1.parseDoStatement = function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n\n  if (this.options.ecmaVersion >= 6) {\n    this.eat(types.semi);\n  } else {\n    this.semicolon();\n  }\n\n  return this.finishNode(node, \"DoWhileStatement\");\n}; // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\n\npp$1.parseForStatement = function (node) {\n  this.next();\n  var awaitAt = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual(\"await\") ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n\n  if (this.type === types.semi) {\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, null);\n  }\n\n  var isLet = this.isLet();\n\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(),\n        kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n\n    if ((this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && init$1.declarations.length === 1 && !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) {\n            this.unexpected(awaitAt);\n          }\n        } else {\n          node.await = awaitAt > -1;\n        }\n      }\n\n      return this.parseForIn(node, init$1);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init$1);\n  }\n\n  var refDestructuringErrors = new DestructuringErrors();\n  var init = this.parseExpression(true, refDestructuringErrors);\n\n  if (this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n      } else {\n        node.await = awaitAt > -1;\n      }\n    }\n\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init);\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n\n  if (awaitAt > -1) {\n    this.unexpected(awaitAt);\n  }\n\n  return this.parseFor(node, init);\n};\n\npp$1.parseFunctionStatement = function (node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync);\n};\n\npp$1.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression(); // allow function declarations in branches, but only in non-strict mode\n\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\");\n};\n\npp$1.parseReturnStatement = function (node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction) {\n    this.raise(this.start, \"'return' outside of function\");\n  }\n\n  this.next(); // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) {\n    node.argument = null;\n  } else {\n    node.argument = this.parseExpression();\n    this.semicolon();\n  }\n\n  return this.finishNode(node, \"ReturnStatement\");\n};\n\npp$1.parseSwitchStatement = function (node) {\n  var this$1 = this;\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope(); // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n\n      if (cur) {\n        this$1.finishNode(cur, \"SwitchCase\");\n      }\n\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) {\n          this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\");\n        }\n\n        sawDefault = true;\n        cur.test = null;\n      }\n\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) {\n        this$1.unexpected();\n      }\n\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n\n  this.exitLexicalScope();\n\n  if (cur) {\n    this.finishNode(cur, \"SwitchCase\");\n  }\n\n  this.next(); // Closing brace\n\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\");\n};\n\npp$1.parseThrowStatement = function (node) {\n  this.next();\n\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {\n    this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n  }\n\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\");\n}; // Reused empty array added for node fields that are always empty.\n\n\nvar empty = [];\n\npp$1.parseTryStatement = function (node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) {\n        this.unexpected();\n      }\n\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n  if (!node.handler && !node.finalizer) {\n    this.raise(node.start, \"Missing catch or finally clause\");\n  }\n\n  return this.finishNode(node, \"TryStatement\");\n};\n\npp$1.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\");\n};\n\npp$1.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\");\n};\n\npp$1.parseWithStatement = function (node) {\n  if (this.strict) {\n    this.raise(this.start, \"'with' in strict mode\");\n  }\n\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\");\n};\n\npp$1.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\");\n};\n\npp$1.parseLabeledStatement = function (node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1) {\n    var label = list[i$1];\n\n    if (label.name === maybeName) {\n      this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    }\n  }\n\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else {\n      break;\n    }\n  }\n\n  this.labels.push({\n    name: maybeName,\n    kind: kind,\n    statementStart: this.start\n  });\n  node.body = this.parseStatement(true);\n\n  if (node.body.type === \"ClassDeclaration\" || node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" || node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator || node.body.async)) {\n    this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\");\n  }\n\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\");\n};\n\npp$1.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\");\n}; // Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\n\npp$1.parseBlock = function (createNewLexicalScope) {\n  var this$1 = this;\n  if (createNewLexicalScope === void 0) createNewLexicalScope = true;\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n\n  return this.finishNode(node, \"BlockStatement\");\n}; // Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\n\npp$1.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\");\n}; // Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\n\npp$1.parseForIn = function (node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" || init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (this.strict || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, \"Invalid assignment in for-in loop head\");\n    }\n  }\n\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type);\n}; // Parse a list of variable declarations.\n\n\npp$1.parseVar = function (node, isFor, kind) {\n  var this$1 = this;\n  node.declarations = [];\n  node.kind = kind;\n\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\"))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n\n    if (!this$1.eat(types.comma)) {\n      break;\n    }\n  }\n\n  return node;\n};\n\npp$1.parseVarId = function (decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n}; // Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\n\npp$1.parseFunction = function (node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    node.generator = this.eat(types.star);\n  }\n\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n\n    if (node.id) {\n      this.checkLVal(node.id, this.inModule && !this.inFunction ? \"let\" : \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator,\n      oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement) {\n    node.id = this.type === types.name ? this.parseIdent() : null;\n  }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n};\n\npp$1.parseFunctionParams = function (node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n}; // Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\n\npp$1.parseClass = function (node, isStatement) {\n  var this$1 = this;\n  this.next();\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) {\n        this$1.raise(member.start, \"Duplicate constructor in the same class\");\n      }\n\n      hadConstructor = true;\n    }\n  }\n\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n};\n\npp$1.parseClassMember = function (classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) {\n    return null;\n  }\n\n  var method = this.startNode();\n\n  var tryContextual = function tryContextual(k, noLineBreak) {\n    if (noLineBreak === void 0) noLineBreak = false;\n    var start = this$1.start,\n        startLoc = this$1.startLoc;\n\n    if (!this$1.eatContextual(k)) {\n      return false;\n    }\n\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {\n      return true;\n    }\n\n    if (method.key) {\n      this$1.unexpected();\n    }\n\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false;\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n\n  if (!method.key) {\n    this.parsePropertyName(method);\n  }\n\n  var key = method.key;\n\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" || key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") {\n      this.raise(key.start, \"Constructor can't have get/set modifier\");\n    }\n\n    if (isGenerator) {\n      this.raise(key.start, \"Constructor can't be a generator\");\n    }\n\n    if (isAsync) {\n      this.raise(key.start, \"Constructor can't be an async method\");\n    }\n\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n\n  if (method.kind === \"get\" && method.value.params.length !== 0) {\n    this.raiseRecoverable(method.value.start, \"getter should have no params\");\n  }\n\n  if (method.kind === \"set\" && method.value.params.length !== 1) {\n    this.raiseRecoverable(method.value.start, \"setter should have exactly one param\");\n  }\n\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\") {\n    this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\");\n  }\n\n  return method;\n};\n\npp$1.parseClassMethod = function (classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function (node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function (node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n}; // Parses module export declaration.\n\n\npp$1.parseExport = function (node, exports) {\n  var this$1 = this;\n  this.next(); // export * from '...'\n\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n\n    if (this.type !== types.string) {\n      this.unexpected();\n    }\n\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\");\n  }\n\n  if (this.eat(types._default)) {\n    // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ExportDefaultDeclaration\");\n  } // export var|const|let|function|class ...\n\n\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n\n    if (node.declaration.type === \"VariableDeclaration\") {\n      this.checkVariableExport(exports, node.declaration.declarations);\n    } else {\n      this.checkExport(exports, node.declaration.id.name, node.declaration.id.start);\n    }\n\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) {\n        this.unexpected();\n      }\n\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n\n    this.semicolon();\n  }\n\n  return this.finishNode(node, \"ExportNamedDeclaration\");\n};\n\npp$1.checkExport = function (exports, name, pos) {\n  if (!exports) {\n    return;\n  }\n\n  if (has(exports, name)) {\n    this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\");\n  }\n\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function (exports, pat) {\n  var this$1 = this;\n  var type = pat.type;\n\n  if (type === \"Identifier\") {\n    this.checkExport(exports, pat.name, pat.start);\n  } else if (type === \"ObjectPattern\") {\n    for (var i = 0, list = pat.properties; i < list.length; i += 1) {\n      var prop = list[i];\n      this$1.checkPatternExport(exports, prop);\n    }\n  } else if (type === \"ArrayPattern\") {\n    for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n      if (elt) {\n        this$1.checkPatternExport(exports, elt);\n      }\n    }\n  } else if (type === \"Property\") {\n    this.checkPatternExport(exports, pat.value);\n  } else if (type === \"AssignmentPattern\") {\n    this.checkPatternExport(exports, pat.left);\n  } else if (type === \"RestElement\") {\n    this.checkPatternExport(exports, pat.argument);\n  } else if (type === \"ParenthesizedExpression\") {\n    this.checkPatternExport(exports, pat.expression);\n  }\n};\n\npp$1.checkVariableExport = function (exports, decls) {\n  var this$1 = this;\n\n  if (!exports) {\n    return;\n  }\n\n  for (var i = 0, list = decls; i < list.length; i += 1) {\n    var decl = list[i];\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function () {\n  return this.type.keyword === \"var\" || this.type.keyword === \"const\" || this.type.keyword === \"class\" || this.type.keyword === \"function\" || this.isLet() || this.isAsyncFunction();\n}; // Parses a comma-separated list of module exports.\n\n\npp$1.parseExportSpecifiers = function (exports) {\n  var this$1 = this;\n  var nodes = [],\n      first = true; // export { x, y as z } [from '...']\n\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n\n      if (this$1.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n\n  return nodes;\n}; // Parses import declaration.\n\n\npp$1.parseImport = function (node) {\n  this.next(); // import '...'\n\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\");\n}; // Parses a comma-separated list of module imports.\n\n\npp$1.parseImportSpecifiers = function () {\n  var this$1 = this;\n  var nodes = [],\n      first = true;\n\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n\n    if (!this.eat(types.comma)) {\n      return nodes;\n    }\n  }\n\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes;\n  }\n\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n\n      if (this$1.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n\n  return nodes;\n}; // Set `ExpressionStatement#directive` property for directive prologues.\n\n\npp$1.adaptDirectivePrologue = function (statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\n\npp$1.isDirectiveCandidate = function (statement) {\n  return statement.type === \"ExpressionStatement\" && statement.expression.type === \"Literal\" && typeof statement.expression.value === \"string\" && ( // Reject parenthesized strings.\n  this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\");\n};\n\nvar pp$2 = Parser.prototype; // Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function (node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\") {\n          this.raise(node.start, \"Can not use 'await' as identifier inside an async function\");\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        if (refDestructuringErrors) {\n          this.checkPatternErrors(refDestructuringErrors, true);\n        }\n\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n          this$1.toAssignable(prop, isBinding); // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n\n          if (prop.type === \"RestElement\" && (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")) {\n            this$1.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n\n        break;\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") {\n          this.raise(node.key.start, \"Object pattern can't contain getter or setter\");\n        }\n\n        this.toAssignable(node.value, isBinding);\n        break;\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n\n        if (refDestructuringErrors) {\n          this.checkPatternErrors(refDestructuringErrors, true);\n        }\n\n        this.toAssignableList(node.elements, isBinding);\n        break;\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n\n        if (node.argument.type === \"AssignmentPattern\") {\n          this.raise(node.argument.start, \"Rest elements cannot have a default value\");\n        }\n\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding);\n        break;\n\n      case \"MemberExpression\":\n        if (!isBinding) {\n          break;\n        }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n  }\n\n  return node;\n}; // Convert list of expression atoms to binding list.\n\n\npp$2.toAssignableList = function (exprList, isBinding) {\n  var this$1 = this;\n  var end = exprList.length;\n\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n\n    if (elt) {\n      this$1.toAssignable(elt, isBinding);\n    }\n  }\n\n  if (end) {\n    var last = exprList[end - 1];\n\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\") {\n      this.unexpected(last.argument.start);\n    }\n  }\n\n  return exprList;\n}; // Parses spread element.\n\n\npp$2.parseSpread = function (refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\");\n};\n\npp$2.parseRestBinding = function () {\n  var node = this.startNode();\n  this.next(); // RestElement inside of a function parameter must be an identifier\n\n  if (this.options.ecmaVersion === 6 && this.type !== types.name) {\n    this.unexpected();\n  }\n\n  node.argument = this.parseBindingAtom();\n  return this.finishNode(node, \"RestElement\");\n}; // Parses lvalue (assignable) atom.\n\n\npp$2.parseBindingAtom = function () {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\");\n\n      case types.braceL:\n        return this.parseObj(true);\n    }\n  }\n\n  return this.parseIdent();\n};\n\npp$2.parseBindingList = function (close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n  var elts = [],\n      first = true;\n\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this$1.expect(types.comma);\n    }\n\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break;\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n\n      if (this$1.type === types.comma) {\n        this$1.raise(this$1.start, \"Comma is not permitted after the rest element\");\n      }\n\n      this$1.expect(close);\n      break;\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n\n  return elts;\n};\n\npp$2.parseBindingListItem = function (param) {\n  return param;\n}; // Parses assignment pattern around given atom if possible.\n\n\npp$2.parseMaybeDefault = function (startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) {\n    return left;\n  }\n\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\");\n}; // Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\n\npp$2.checkLVal = function (expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {\n        this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n      }\n\n      if (checkClashes) {\n        if (has(checkClashes, expr.name)) {\n          this.raiseRecoverable(expr.start, \"Argument name clash\");\n        }\n\n        checkClashes[expr.name] = true;\n      }\n\n      if (bindingType && bindingType !== \"none\") {\n        if (bindingType === \"var\" && !this.canDeclareVarName(expr.name) || bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)) {\n          this.raiseRecoverable(expr.start, \"Identifier '\" + expr.name + \"' has already been declared\");\n        }\n\n        if (bindingType === \"var\") {\n          this.declareVarName(expr.name);\n        } else {\n          this.declareLexicalName(expr.name);\n        }\n      }\n\n      break;\n\n    case \"MemberExpression\":\n      if (bindingType) {\n        this.raiseRecoverable(expr.start, \"Binding member expression\");\n      }\n\n      break;\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n        this$1.checkLVal(prop, bindingType, checkClashes);\n      }\n\n      break;\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break;\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n        if (elem) {\n          this$1.checkLVal(elem, bindingType, checkClashes);\n        }\n      }\n\n      break;\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break;\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break;\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break;\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n}; // A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\nvar pp$3 = Parser.prototype; // Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function (prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\") {\n    return;\n  }\n\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {\n    return;\n  }\n\n  var key = prop.key;\n  var name;\n\n  switch (key.type) {\n    case \"Identifier\":\n      name = key.name;\n      break;\n\n    case \"Literal\":\n      name = String(key.value);\n      break;\n\n    default:\n      return;\n  }\n\n  var kind = prop.kind;\n\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) {\n          refDestructuringErrors.doubleProto = key.start;\n        } // Backwards-compat kludge. Can be removed in version 6.0\n        else {\n            this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n          }\n      }\n\n      propHash.proto = true;\n    }\n\n    return;\n  }\n\n  name = \"$\" + name;\n  var other = propHash[name];\n\n  if (other) {\n    var redefinition;\n\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n\n    if (redefinition) {\n      this.raiseRecoverable(key.start, \"Redefinition of property\");\n    }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n\n  other[kind] = true;\n}; // ### Expression parsing\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\n\npp$3.parseExpression = function (noIn, refDestructuringErrors) {\n  var this$1 = this;\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n\n    while (this.eat(types.comma)) {\n      node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors));\n    }\n\n    return this.finishNode(node, \"SequenceExpression\");\n  }\n\n  return expr;\n}; // Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\n\npp$3.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) {\n    return this.parseYield();\n  }\n\n  var ownDestructuringErrors = false,\n      oldParenAssign = -1,\n      oldTrailingComma = -1;\n\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors();\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start,\n      startLoc = this.startLoc;\n\n  if (this.type === types.parenL || this.type === types.name) {\n    this.potentialArrowAt = this.start;\n  }\n\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n\n  if (afterLeftParse) {\n    left = afterLeftParse.call(this, left, startPos, startLoc);\n  }\n\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n\n    if (!ownDestructuringErrors) {\n      DestructuringErrors.call(refDestructuringErrors);\n    }\n\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\");\n  } else {\n    if (ownDestructuringErrors) {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n  }\n\n  if (oldParenAssign > -1) {\n    refDestructuringErrors.parenthesizedAssign = oldParenAssign;\n  }\n\n  if (oldTrailingComma > -1) {\n    refDestructuringErrors.trailingComma = oldTrailingComma;\n  }\n\n  return left;\n}; // Parse a ternary conditional (`?:`) operator.\n\n\npp$3.parseMaybeConditional = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n\n  if (this.checkExpressionErrors(refDestructuringErrors)) {\n    return expr;\n  }\n\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  return expr;\n}; // Start the precedence parser.\n\n\npp$3.parseExprOps = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n\n  if (this.checkExpressionErrors(refDestructuringErrors)) {\n    return expr;\n  }\n\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n}; // Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\n\npp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start,\n          startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n  }\n\n  return left;\n};\n\npp$3.buildBinary = function (startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\");\n}; // Parse unary operators, both prefix and postfix.\n\n\npp$3.parseMaybeUnary = function (refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      expr;\n\n  if (this.isContextual(\"await\") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(),\n        update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n\n    if (update) {\n      this.checkLVal(node.argument);\n    } else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") {\n      this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\");\n    } else {\n      sawUnary = true;\n    }\n\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n\n    if (this.checkExpressionErrors(refDestructuringErrors)) {\n      return expr;\n    }\n\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar)) {\n    return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false);\n  } else {\n    return expr;\n  }\n}; // Parse call, dot, and `[]`-subscript expressions.\n\n\npp$3.parseExprSubscripts = function (refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) {\n    return expr;\n  }\n\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) {\n      refDestructuringErrors.parenthesizedAssign = -1;\n    }\n\n    if (refDestructuringErrors.parenthesizedBind >= result.start) {\n      refDestructuringErrors.parenthesizedBind = -1;\n    }\n  }\n\n  return result;\n};\n\npp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n\n  for (var computed = void 0;;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n\n      if (computed) {\n        this$1.expect(types.bracketR);\n      }\n\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors(),\n          oldYieldPos = this$1.yieldPos,\n          oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true);\n      }\n\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({\n        isTagged: true\n      });\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base;\n    }\n  }\n}; // Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\n\npp$3.parseExprAtom = function (refDestructuringErrors) {\n  var node,\n      canBeArrow = this.potentialArrowAt === this.start;\n\n  switch (this.type) {\n    case types._super:\n      if (!this.inFunction) {\n        this.raise(this.start, \"'super' outside of function or class\");\n      }\n\n      node = this.startNode();\n      this.next(); // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super Arguments\n\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL) {\n        this.unexpected();\n      }\n\n      return this.finishNode(node, \"Super\");\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\");\n\n    case types.name:\n      var startPos = this.start,\n          startLoc = this.startLoc,\n          containsEsc = this.containsEsc;\n      var id = this.parseIdent(this.type !== types.name);\n\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function)) {\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true);\n      }\n\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow)) {\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false);\n        }\n\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent();\n\n          if (this.canInsertSemicolon() || !this.eat(types.arrow)) {\n            this.unexpected();\n          }\n\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true);\n        }\n      }\n\n      return id;\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {\n        pattern: value.pattern,\n        flags: value.flags\n      };\n      return node;\n\n    case types.num:\n    case types.string:\n      return this.parseLiteral(this.value);\n\n    case types._null:\n    case types._true:\n    case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\");\n\n    case types.parenL:\n      var start = this.start,\n          expr = this.parseParenAndDistinguishExpression(canBeArrow);\n\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {\n          refDestructuringErrors.parenthesizedAssign = start;\n        }\n\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = start;\n        }\n      }\n\n      return expr;\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\");\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors);\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, false);\n\n    case types._class:\n      return this.parseClass(this.startNode(), false);\n\n    case types._new:\n      return this.parseNew();\n\n    case types.backQuote:\n      return this.parseTemplate();\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function (value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\");\n};\n\npp$3.parseParenExpression = function () {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val;\n};\n\npp$3.parseParenAndDistinguishExpression = function (canBeArrow) {\n  var this$1 = this;\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      val,\n      allowTrailingComma = this.options.ecmaVersion >= 8;\n\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n    var innerStartPos = this.start,\n        innerStartLoc = this.startLoc;\n    var exprList = [],\n        first = true,\n        lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors(),\n        oldYieldPos = this.yieldPos,\n        oldAwaitPos = this.awaitPos,\n        spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break;\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n\n        if (this$1.type === types.comma) {\n          this$1.raise(this$1.start, \"Comma is not permitted after the rest element\");\n        }\n\n        break;\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n\n    var innerEndPos = this.start,\n        innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList);\n    }\n\n    if (!exprList.length || lastIsComma) {\n      this.unexpected(this.lastTokStart);\n    }\n\n    if (spreadStart) {\n      this.unexpected(spreadStart);\n    }\n\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\");\n  } else {\n    return val;\n  }\n};\n\npp$3.parseParenItem = function (item) {\n  return item;\n};\n\npp$3.parseParenArrowList = function (startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);\n}; // New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\n\nvar empty$1 = [];\n\npp$3.parseNew = function () {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"target\" || containsEsc) {\n      this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\");\n    }\n\n    if (!this.inFunction) {\n      this.raiseRecoverable(node.start, \"new.target can only be used in functions\");\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n\n  if (this.eat(types.parenL)) {\n    node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false);\n  } else {\n    node.arguments = empty$1;\n  }\n\n  return this.finishNode(node, \"NewExpression\");\n}; // Parse template expression.\n\n\npp$3.parseTemplateElement = function (ref) {\n  var isTagged = ref.isTagged;\n  var elem = this.startNode();\n\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\");\n};\n\npp$3.parseTemplate = function (ref) {\n  var this$1 = this;\n  if (ref === void 0) ref = {};\n  var isTagged = ref.isTagged;\n  if (isTagged === void 0) isTagged = false;\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({\n    isTagged: isTagged\n  });\n  node.quasis = [curElt];\n\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) {\n      this$1.raise(this$1.pos, \"Unterminated template literal\");\n    }\n\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({\n      isTagged: isTagged\n    }));\n  }\n\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\");\n};\n\npp$3.isAsyncProp = function (prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" && (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n}; // Parse an object literal or binding pattern.\n\n\npp$3.parseObj = function (isPattern, refDestructuringErrors) {\n  var this$1 = this;\n  var node = this.startNode(),\n      first = true,\n      propHash = {};\n  node.properties = [];\n  this.next();\n\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n\n      if (this$1.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n\n    if (!isPattern) {\n      this$1.checkPropClash(prop, propHash, refDestructuringErrors);\n    }\n\n    node.properties.push(prop);\n  }\n\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n};\n\npp$3.parseProperty = function (isPattern, refDestructuringErrors) {\n  var prop = this.startNode(),\n      isGenerator,\n      isAsync,\n      startPos,\n      startLoc;\n\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n\n      return this.finishNode(prop, \"RestElement\");\n    } // To disallow parenthesized identifier via `this.toAssignable()`.\n\n\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    } // Parse argument.\n\n\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors); // To disallow trailing comma via `this.toAssignable()`.\n\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    } // Finish\n\n\n    return this.finishNode(prop, \"SpreadElement\");\n  }\n\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n  }\n\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\");\n};\n\npp$3.parsePropertyValue = function (prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon) {\n    this.unexpected();\n  }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) {\n      this.unexpected();\n    }\n\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && this.type !== types.comma && this.type !== types.braceR) {\n    if (isGenerator || isAsync) {\n      this.unexpected();\n    }\n\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n\n      if (prop.kind === \"get\") {\n        this.raiseRecoverable(start, \"getter should have no params\");\n      } else {\n        this.raiseRecoverable(start, \"setter should have exactly one param\");\n      }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\");\n      }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0) {\n        refDestructuringErrors.shorthandAssign = this.start;\n      }\n\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n\n    prop.shorthand = true;\n  } else {\n    this.unexpected();\n  }\n};\n\npp$3.parsePropertyName = function (prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key;\n    } else {\n      prop.computed = false;\n    }\n  }\n\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true);\n}; // Initialize empty function node.\n\n\npp$3.initFunction = function (node) {\n  node.id = null;\n\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n\n  if (this.options.ecmaVersion >= 8) {\n    node.async = false;\n  }\n}; // Parse object or class method.\n\n\npp$3.parseMethod = function (isGenerator, isAsync) {\n  var node = this.startNode(),\n      oldInGen = this.inGenerator,\n      oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      oldInFunc = this.inFunction;\n  this.initFunction(node);\n\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = isGenerator;\n  }\n\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\");\n}; // Parse arrow function expression with given parameters.\n\n\npp$3.parseArrowExpression = function (node, params, isAsync) {\n  var oldInGen = this.inGenerator,\n      oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      oldInFunc = this.inFunction;\n  this.enterFunctionScope();\n  this.initFunction(node);\n\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\");\n}; // Parse function body and check parameters.\n\n\npp$3.parseFunctionBody = function (node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict,\n      useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end); // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n\n      if (useStrict && nonSimple) {\n        this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\");\n      }\n    } // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n\n\n    var oldLabels = this.labels;\n    this.labels = [];\n\n    if (useStrict) {\n      this.strict = true;\n    } // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n\n\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function (params) {\n  for (var i = 0, list = params; i < list.length; i += 1) {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") {\n      return false;\n    }\n  }\n\n  return true;\n}; // Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\n\npp$3.checkParams = function (node, allowDuplicates) {\n  var this$1 = this;\n  var nameHash = {};\n\n  for (var i = 0, list = node.params; i < list.length; i += 1) {\n    var param = list[i];\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n}; // Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\n\npp$3.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n  var elts = [],\n      first = true;\n\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n\n    var elt = void 0;\n\n    if (allowEmpty && this$1.type === types.comma) {\n      elt = null;\n    } else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this$1.start;\n      }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n\n    elts.push(elt);\n  }\n\n  return elts;\n};\n\npp$3.checkUnreserved = function (ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\") {\n    this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\");\n  }\n\n  if (this.inAsync && name === \"await\") {\n    this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\");\n  }\n\n  if (this.isKeyword(name)) {\n    this.raise(start, \"Unexpected keyword '\" + name + \"'\");\n  }\n\n  if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf(\"\\\\\") !== -1) {\n    return;\n  }\n\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\") {\n      this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\");\n    }\n\n    this.raiseRecoverable(start, \"The keyword '\" + name + \"' is reserved\");\n  }\n}; // Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\n\npp$3.parseIdent = function (liberal, isBinding) {\n  var node = this.startNode();\n\n  if (liberal && this.options.allowReserved === \"never\") {\n    liberal = false;\n  }\n\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword; // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n\n    if ((node.name === \"class\" || node.name === \"function\") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n\n  this.next();\n  this.finishNode(node, \"Identifier\");\n\n  if (!liberal) {\n    this.checkUnreserved(node);\n  }\n\n  return node;\n}; // Parses yield expression inside generator.\n\n\npp$3.parseYield = function () {\n  if (!this.yieldPos) {\n    this.yieldPos = this.start;\n  }\n\n  var node = this.startNode();\n  this.next();\n\n  if (this.type === types.semi || this.canInsertSemicolon() || this.type !== types.star && !this.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n\n  return this.finishNode(node, \"YieldExpression\");\n};\n\npp$3.parseAwait = function () {\n  if (!this.awaitPos) {\n    this.awaitPos = this.start;\n  }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\");\n};\n\nvar pp$4 = Parser.prototype; // This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function (pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos;\n  err.loc = loc;\n  err.raisedAt = this.pos;\n  throw err;\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function () {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n};\n\nvar pp$5 = Parser.prototype; // Object.assign polyfill\n\nvar assign = Object.assign || function (target) {\n  var sources = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) {\n    sources[len] = arguments[len + 1];\n  }\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n\npp$5.enterFunctionScope = function () {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({\n    var: {},\n    lexical: {},\n    childVar: {},\n    parentLexical: {}\n  });\n};\n\npp$5.exitFunctionScope = function () {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function () {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {\n    var: {},\n    lexical: {},\n    childVar: {},\n    parentLexical: {}\n  };\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function () {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\n\n\npp$5.canDeclareVarName = function (name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name);\n};\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\n\n\npp$5.canDeclareLexicalName = function (name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name);\n};\n\npp$5.declareVarName = function (name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function (name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n\n  if (parser.options.locations) {\n    this.loc = new SourceLocation(parser, loc);\n  }\n\n  if (parser.options.directSourceFile) {\n    this.sourceFile = parser.options.directSourceFile;\n  }\n\n  if (parser.options.ranges) {\n    this.range = [pos, 0];\n  }\n}; // Start an AST node, attaching a start offset.\n\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function () {\n  return new Node(this, this.start, this.startLoc);\n};\n\npp$6.startNodeAt = function (pos, loc) {\n  return new Node(this, pos, loc);\n}; // Finish an AST node, adding `type` and `end` properties.\n\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n\n  if (this.options.locations) {\n    node.loc.end = loc;\n  }\n\n  if (this.options.ranges) {\n    node.range[1] = pos;\n  }\n\n  return node;\n}\n\npp$6.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n}; // Finish node at given position\n\n\npp$6.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n}; // The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) {\n    return p.tryReadTemplateToken();\n  }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function () {\n  return [types$1.b_stat];\n};\n\npp$7.braceIsBlock = function (prevType) {\n  var parent = this.curContext();\n\n  if (parent === types$1.f_expr || parent === types$1.f_stat) {\n    return true;\n  }\n\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr)) {\n    return !parent.isExpr;\n  } // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n\n\n  if (prevType === types._return || prevType === types.name && this.exprAllowed) {\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  }\n\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n    return true;\n  }\n\n  if (prevType === types.braceL) {\n    return parent === types$1.b_stat;\n  }\n\n  if (prevType === types._var || prevType === types.name) {\n    return false;\n  }\n\n  return !this.exprAllowed;\n};\n\npp$7.inGeneratorContext = function () {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n\n    if (context.token === \"function\") {\n      return context.generator;\n    }\n  }\n\n  return false;\n};\n\npp$7.updateContext = function (prevType) {\n  var update,\n      type = this.type;\n\n  if (type.keyword && prevType === types.dot) {\n    this.exprAllowed = false;\n  } else if (update = type.updateContext) {\n    update.call(this, prevType);\n  } else {\n    this.exprAllowed = type.beforeExpr;\n  }\n}; // Token-specific context update code\n\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return;\n  }\n\n  var out = this.context.pop();\n\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {// tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.context.push(types$1.f_expr);\n  } else {\n    this.context.push(types$1.f_stat);\n  }\n\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.q_tmpl) {\n    this.context.pop();\n  } else {\n    this.context.push(types$1.q_tmpl);\n  }\n\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function (prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n\n    if (this.context[index] === types$1.f_expr) {\n      this.context[index] = types$1.f_expr_gen;\n    } else {\n      this.context[index] = types$1.f_gen;\n    }\n  }\n\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function (prevType) {\n  var allowed = false;\n\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed || this.value === \"yield\" && this.inGeneratorContext()) {\n      allowed = true;\n    }\n  }\n\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\"ASCII\", \"ASCII_Hex_Digit\", \"AHex\", \"Alphabetic\", \"Alpha\", \"Any\", \"Assigned\", \"Bidi_Control\", \"Bidi_C\", \"Bidi_Mirrored\", \"Bidi_M\", \"Case_Ignorable\", \"CI\", \"Cased\", \"Changes_When_Casefolded\", \"CWCF\", \"Changes_When_Casemapped\", \"CWCM\", \"Changes_When_Lowercased\", \"CWL\", \"Changes_When_NFKC_Casefolded\", \"CWKCF\", \"Changes_When_Titlecased\", \"CWT\", \"Changes_When_Uppercased\", \"CWU\", \"Dash\", \"Default_Ignorable_Code_Point\", \"DI\", \"Deprecated\", \"Dep\", \"Diacritic\", \"Dia\", \"Emoji\", \"Emoji_Component\", \"Emoji_Modifier\", \"Emoji_Modifier_Base\", \"Emoji_Presentation\", \"Extender\", \"Ext\", \"Grapheme_Base\", \"Gr_Base\", \"Grapheme_Extend\", \"Gr_Ext\", \"Hex_Digit\", \"Hex\", \"IDS_Binary_Operator\", \"IDSB\", \"IDS_Trinary_Operator\", \"IDST\", \"ID_Continue\", \"IDC\", \"ID_Start\", \"IDS\", \"Ideographic\", \"Ideo\", \"Join_Control\", \"Join_C\", \"Logical_Order_Exception\", \"LOE\", \"Lowercase\", \"Lower\", \"Math\", \"Noncharacter_Code_Point\", \"NChar\", \"Pattern_Syntax\", \"Pat_Syn\", \"Pattern_White_Space\", \"Pat_WS\", \"Quotation_Mark\", \"QMark\", \"Radical\", \"Regional_Indicator\", \"RI\", \"Sentence_Terminal\", \"STerm\", \"Soft_Dotted\", \"SD\", \"Terminal_Punctuation\", \"Term\", \"Unified_Ideograph\", \"UIdeo\", \"Uppercase\", \"Upper\", \"Variation_Selector\", \"VS\", \"White_Space\", \"space\", \"XID_Continue\", \"XIDC\", \"XID_Start\", \"XIDS\"],\n  \"General_Category\": [\"Cased_Letter\", \"LC\", \"Close_Punctuation\", \"Pe\", \"Connector_Punctuation\", \"Pc\", \"Control\", \"Cc\", \"cntrl\", \"Currency_Symbol\", \"Sc\", \"Dash_Punctuation\", \"Pd\", \"Decimal_Number\", \"Nd\", \"digit\", \"Enclosing_Mark\", \"Me\", \"Final_Punctuation\", \"Pf\", \"Format\", \"Cf\", \"Initial_Punctuation\", \"Pi\", \"Letter\", \"L\", \"Letter_Number\", \"Nl\", \"Line_Separator\", \"Zl\", \"Lowercase_Letter\", \"Ll\", \"Mark\", \"M\", \"Combining_Mark\", \"Math_Symbol\", \"Sm\", \"Modifier_Letter\", \"Lm\", \"Modifier_Symbol\", \"Sk\", \"Nonspacing_Mark\", \"Mn\", \"Number\", \"N\", \"Open_Punctuation\", \"Ps\", \"Other\", \"C\", \"Other_Letter\", \"Lo\", \"Other_Number\", \"No\", \"Other_Punctuation\", \"Po\", \"Other_Symbol\", \"So\", \"Paragraph_Separator\", \"Zp\", \"Private_Use\", \"Co\", \"Punctuation\", \"P\", \"punct\", \"Separator\", \"Z\", \"Space_Separator\", \"Zs\", \"Spacing_Mark\", \"Mc\", \"Surrogate\", \"Cs\", \"Symbol\", \"S\", \"Titlecase_Letter\", \"Lt\", \"Unassigned\", \"Cn\", \"Uppercase_Letter\", \"Lu\"],\n  \"Script\": [\"Adlam\", \"Adlm\", \"Ahom\", \"Anatolian_Hieroglyphs\", \"Hluw\", \"Arabic\", \"Arab\", \"Armenian\", \"Armn\", \"Avestan\", \"Avst\", \"Balinese\", \"Bali\", \"Bamum\", \"Bamu\", \"Bassa_Vah\", \"Bass\", \"Batak\", \"Batk\", \"Bengali\", \"Beng\", \"Bhaiksuki\", \"Bhks\", \"Bopomofo\", \"Bopo\", \"Brahmi\", \"Brah\", \"Braille\", \"Brai\", \"Buginese\", \"Bugi\", \"Buhid\", \"Buhd\", \"Canadian_Aboriginal\", \"Cans\", \"Carian\", \"Cari\", \"Caucasian_Albanian\", \"Aghb\", \"Chakma\", \"Cakm\", \"Cham\", \"Cherokee\", \"Cher\", \"Common\", \"Zyyy\", \"Coptic\", \"Copt\", \"Qaac\", \"Cuneiform\", \"Xsux\", \"Cypriot\", \"Cprt\", \"Cyrillic\", \"Cyrl\", \"Deseret\", \"Dsrt\", \"Devanagari\", \"Deva\", \"Duployan\", \"Dupl\", \"Egyptian_Hieroglyphs\", \"Egyp\", \"Elbasan\", \"Elba\", \"Ethiopic\", \"Ethi\", \"Georgian\", \"Geor\", \"Glagolitic\", \"Glag\", \"Gothic\", \"Goth\", \"Grantha\", \"Gran\", \"Greek\", \"Grek\", \"Gujarati\", \"Gujr\", \"Gurmukhi\", \"Guru\", \"Han\", \"Hani\", \"Hangul\", \"Hang\", \"Hanunoo\", \"Hano\", \"Hatran\", \"Hatr\", \"Hebrew\", \"Hebr\", \"Hiragana\", \"Hira\", \"Imperial_Aramaic\", \"Armi\", \"Inherited\", \"Zinh\", \"Qaai\", \"Inscriptional_Pahlavi\", \"Phli\", \"Inscriptional_Parthian\", \"Prti\", \"Javanese\", \"Java\", \"Kaithi\", \"Kthi\", \"Kannada\", \"Knda\", \"Katakana\", \"Kana\", \"Kayah_Li\", \"Kali\", \"Kharoshthi\", \"Khar\", \"Khmer\", \"Khmr\", \"Khojki\", \"Khoj\", \"Khudawadi\", \"Sind\", \"Lao\", \"Laoo\", \"Latin\", \"Latn\", \"Lepcha\", \"Lepc\", \"Limbu\", \"Limb\", \"Linear_A\", \"Lina\", \"Linear_B\", \"Linb\", \"Lisu\", \"Lycian\", \"Lyci\", \"Lydian\", \"Lydi\", \"Mahajani\", \"Mahj\", \"Malayalam\", \"Mlym\", \"Mandaic\", \"Mand\", \"Manichaean\", \"Mani\", \"Marchen\", \"Marc\", \"Masaram_Gondi\", \"Gonm\", \"Meetei_Mayek\", \"Mtei\", \"Mende_Kikakui\", \"Mend\", \"Meroitic_Cursive\", \"Merc\", \"Meroitic_Hieroglyphs\", \"Mero\", \"Miao\", \"Plrd\", \"Modi\", \"Mongolian\", \"Mong\", \"Mro\", \"Mroo\", \"Multani\", \"Mult\", \"Myanmar\", \"Mymr\", \"Nabataean\", \"Nbat\", \"New_Tai_Lue\", \"Talu\", \"Newa\", \"Nko\", \"Nkoo\", \"Nushu\", \"Nshu\", \"Ogham\", \"Ogam\", \"Ol_Chiki\", \"Olck\", \"Old_Hungarian\", \"Hung\", \"Old_Italic\", \"Ital\", \"Old_North_Arabian\", \"Narb\", \"Old_Permic\", \"Perm\", \"Old_Persian\", \"Xpeo\", \"Old_South_Arabian\", \"Sarb\", \"Old_Turkic\", \"Orkh\", \"Oriya\", \"Orya\", \"Osage\", \"Osge\", \"Osmanya\", \"Osma\", \"Pahawh_Hmong\", \"Hmng\", \"Palmyrene\", \"Palm\", \"Pau_Cin_Hau\", \"Pauc\", \"Phags_Pa\", \"Phag\", \"Phoenician\", \"Phnx\", \"Psalter_Pahlavi\", \"Phlp\", \"Rejang\", \"Rjng\", \"Runic\", \"Runr\", \"Samaritan\", \"Samr\", \"Saurashtra\", \"Saur\", \"Sharada\", \"Shrd\", \"Shavian\", \"Shaw\", \"Siddham\", \"Sidd\", \"SignWriting\", \"Sgnw\", \"Sinhala\", \"Sinh\", \"Sora_Sompeng\", \"Sora\", \"Soyombo\", \"Soyo\", \"Sundanese\", \"Sund\", \"Syloti_Nagri\", \"Sylo\", \"Syriac\", \"Syrc\", \"Tagalog\", \"Tglg\", \"Tagbanwa\", \"Tagb\", \"Tai_Le\", \"Tale\", \"Tai_Tham\", \"Lana\", \"Tai_Viet\", \"Tavt\", \"Takri\", \"Takr\", \"Tamil\", \"Taml\", \"Tangut\", \"Tang\", \"Telugu\", \"Telu\", \"Thaana\", \"Thaa\", \"Thai\", \"Tibetan\", \"Tibt\", \"Tifinagh\", \"Tfng\", \"Tirhuta\", \"Tirh\", \"Ugaritic\", \"Ugar\", \"Vai\", \"Vaii\", \"Warang_Citi\", \"Wara\", \"Yi\", \"Yiii\", \"Zanabazar_Square\", \"Zanb\"]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset(start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise(message) {\n  this.parser.raiseRecoverable(this.start, \"Invalid regular expression: /\" + this.source + \"/: \" + message);\n}; // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n\n\nRegExpValidationState.prototype.at = function at(i) {\n  var s = this.source;\n  var l = s.length;\n\n  if (i >= l) {\n    return -1;\n  }\n\n  var c = s.charCodeAt(i);\n\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c;\n  }\n\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00;\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex(i) {\n  var s = this.source;\n  var l = s.length;\n\n  if (i >= l) {\n    return l;\n  }\n\n  var c = s.charCodeAt(i);\n\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1;\n  }\n\n  return i + 2;\n};\n\nRegExpValidationState.prototype.current = function current() {\n  return this.at(this.pos);\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead() {\n  return this.at(this.nextIndex(this.pos));\n};\n\nRegExpValidationState.prototype.advance = function advance() {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat(ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true;\n  }\n\n  return false;\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) {\n    return String.fromCharCode(ch);\n  }\n\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00);\n}\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\n\n\npp$9.validateRegExpFlags = function (state) {\n  var this$1 = this;\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\n\n\npp$9.validateRegExpPattern = function (state) {\n  this.regexp_pattern(state); // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n\n\npp$9.regexp_pattern = function (state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29\n    /* ) */\n    )) {\n      state.raise(\"Unmatched ')'\");\n    }\n\n    if (state.eat(0x5D\n    /* [ */\n    ) || state.eat(0x7D\n    /* } */\n    )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n\n\npp$9.regexp_disjunction = function (state) {\n  var this$1 = this;\n  this.regexp_alternative(state);\n\n  while (state.eat(0x7C\n  /* | */\n  )) {\n    this$1.regexp_alternative(state);\n  } // Make the same message as V8.\n\n\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n\n  if (state.eat(0x7B\n  /* { */\n  )) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n\n\npp$9.regexp_alternative = function (state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n\n\npp$9.regexp_eatTerm = function (state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n\n    return true;\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n\n\npp$9.regexp_eatAssertion = function (state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false; // ^, $\n\n  if (state.eat(0x5E\n  /* ^ */\n  ) || state.eat(0x24\n  /* $ */\n  )) {\n    return true;\n  } // \\b \\B\n\n\n  if (state.eat(0x5C\n  /* \\ */\n  )) {\n    if (state.eat(0x42\n    /* B */\n    ) || state.eat(0x62\n    /* b */\n    )) {\n      return true;\n    }\n\n    state.pos = start;\n  } // Lookahead / Lookbehind\n\n\n  if (state.eat(0x28\n  /* ( */\n  ) && state.eat(0x3F\n  /* ? */\n  )) {\n    var lookbehind = false;\n\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C\n      /* < */\n      );\n    }\n\n    if (state.eat(0x3D\n    /* = */\n    ) || state.eat(0x21\n    /* ! */\n    )) {\n      this.regexp_disjunction(state);\n\n      if (!state.eat(0x29\n      /* ) */\n      )) {\n        state.raise(\"Unterminated group\");\n      }\n\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true;\n    }\n  }\n\n  state.pos = start;\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n\n\npp$9.regexp_eatQuantifier = function (state, noError) {\n  if (noError === void 0) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F\n    /* ? */\n    );\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n\n\npp$9.regexp_eatQuantifierPrefix = function (state, noError) {\n  return state.eat(0x2A\n  /* * */\n  ) || state.eat(0x2B\n  /* + */\n  ) || state.eat(0x3F\n  /* ? */\n  ) || this.regexp_eatBracedQuantifier(state, noError);\n};\n\npp$9.regexp_eatBracedQuantifier = function (state, noError) {\n  var start = state.pos;\n\n  if (state.eat(0x7B\n  /* { */\n  )) {\n    var min = 0,\n        max = -1;\n\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n\n      if (state.eat(0x2C\n      /* , */\n      ) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n\n      if (state.eat(0x7D\n      /* } */\n      )) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n\n        return true;\n      }\n    }\n\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n\n\npp$9.regexp_eatAtom = function (state) {\n  return this.regexp_eatPatternCharacters(state) || state.eat(0x2E\n  /* . */\n  ) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);\n};\n\npp$9.regexp_eatReverseSolidusAtomEscape = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C\n  /* \\ */\n  )) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true;\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\npp$9.regexp_eatUncapturingGroup = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x28\n  /* ( */\n  )) {\n    if (state.eat(0x3F\n    /* ? */\n    ) && state.eat(0x3A\n    /* : */\n    )) {\n      this.regexp_disjunction(state);\n\n      if (state.eat(0x29\n      /* ) */\n      )) {\n        return true;\n      }\n\n      state.raise(\"Unterminated group\");\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\npp$9.regexp_eatCapturingGroup = function (state) {\n  if (state.eat(0x28\n  /* ( */\n  )) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F\n    /* ? */\n    ) {\n        state.raise(\"Invalid group\");\n      }\n\n    this.regexp_disjunction(state);\n\n    if (state.eat(0x29\n    /* ) */\n    )) {\n      state.numCapturingParens += 1;\n      return true;\n    }\n\n    state.raise(\"Unterminated group\");\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n\n\npp$9.regexp_eatExtendedAtom = function (state) {\n  return state.eat(0x2E\n  /* . */\n  ) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n\n\npp$9.regexp_eatInvalidBracedQuantifier = function (state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n\n\npp$9.regexp_eatSyntaxCharacter = function (state) {\n  var ch = state.current();\n\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n\n  return false;\n};\n\nfunction isSyntaxCharacter(ch) {\n  return ch === 0x24\n  /* $ */\n  || ch >= 0x28\n  /* ( */\n  && ch <= 0x2B\n  /* + */\n  || ch === 0x2E\n  /* . */\n  || ch === 0x3F\n  /* ? */\n  || ch >= 0x5B\n  /* [ */\n  && ch <= 0x5E\n  /* ^ */\n  || ch >= 0x7B\n  /* { */\n  && ch <= 0x7D\n  /* } */\n  ;\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\n\n\npp$9.regexp_eatPatternCharacters = function (state) {\n  var start = state.pos;\n  var ch = 0;\n\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n\n  return state.pos !== start;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n\n\npp$9.regexp_eatExtendedPatternCharacter = function (state) {\n  var ch = state.current();\n\n  if (ch !== -1 && ch !== 0x24\n  /* $ */\n  && !(ch >= 0x28\n  /* ( */\n  && ch <= 0x2B\n  /* + */\n  ) && ch !== 0x2E\n  /* . */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x5B\n  /* [ */\n  && ch !== 0x5E\n  /* ^ */\n  && ch !== 0x7C\n  /* | */\n  ) {\n      state.advance();\n      return true;\n    }\n\n  return false;\n}; // GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\n\n\npp$9.regexp_groupSpecifier = function (state) {\n  if (state.eat(0x3F\n  /* ? */\n  )) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n\n      state.groupNames.push(state.lastStringValue);\n      return;\n    }\n\n    state.raise(\"Invalid group\");\n  }\n}; // GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\n\n\npp$9.regexp_eatGroupName = function (state) {\n  state.lastStringValue = \"\";\n\n  if (state.eat(0x3C\n  /* < */\n  )) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E\n    /* > */\n    )) {\n      return true;\n    }\n\n    state.raise(\"Invalid capture group name\");\n  }\n\n  return false;\n}; // RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\n\n\npp$9.regexp_eatRegExpIdentifierName = function (state) {\n  state.lastStringValue = \"\";\n\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n\n    return true;\n  }\n\n  return false;\n}; // RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n\n\npp$9.regexp_eatRegExpIdentifierStart = function (state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C\n  /* \\ */\n  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true;\n  }\n\n  state.pos = start;\n  return false;\n};\n\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24\n  /* $ */\n  || ch === 0x5F;\n  /* _ */\n} // RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\n\n\npp$9.regexp_eatRegExpIdentifierPart = function (state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C\n  /* \\ */\n  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true;\n  }\n\n  state.pos = start;\n  return false;\n};\n\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24\n  /* $ */\n  || ch === 0x5F\n  /* _ */\n  || ch === 0x200C\n  /* <ZWNJ> */\n  || ch === 0x200D;\n  /* <ZWJ> */\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n\n\npp$9.regexp_eatAtomEscape = function (state) {\n  if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {\n    return true;\n  }\n\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63\n    /* c */\n    ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n\n    state.raise(\"Invalid escape\");\n  }\n\n  return false;\n};\n\npp$9.regexp_eatBackReference = function (state) {\n  var start = state.pos;\n\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n\n      return true;\n    }\n\n    if (n <= state.numCapturingParens) {\n      return true;\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\npp$9.regexp_eatKGroupName = function (state) {\n  if (state.eat(0x6B\n  /* k */\n  )) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true;\n    }\n\n    state.raise(\"Invalid named reference\");\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n\n\npp$9.regexp_eatCharacterEscape = function (state) {\n  return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);\n};\n\npp$9.regexp_eatCControlLetter = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x63\n  /* c */\n  )) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true;\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\npp$9.regexp_eatZero = function (state) {\n  if (state.current() === 0x30\n  /* 0 */\n  && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n\n\npp$9.regexp_eatControlEscape = function (state) {\n  var ch = state.current();\n\n  if (ch === 0x74\n  /* t */\n  ) {\n      state.lastIntValue = 0x09;\n      /* \\t */\n\n      state.advance();\n      return true;\n    }\n\n  if (ch === 0x6E\n  /* n */\n  ) {\n      state.lastIntValue = 0x0A;\n      /* \\n */\n\n      state.advance();\n      return true;\n    }\n\n  if (ch === 0x76\n  /* v */\n  ) {\n      state.lastIntValue = 0x0B;\n      /* \\v */\n\n      state.advance();\n      return true;\n    }\n\n  if (ch === 0x66\n  /* f */\n  ) {\n      state.lastIntValue = 0x0C;\n      /* \\f */\n\n      state.advance();\n      return true;\n    }\n\n  if (ch === 0x72\n  /* r */\n  ) {\n      state.lastIntValue = 0x0D;\n      /* \\r */\n\n      state.advance();\n      return true;\n    }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n\n\npp$9.regexp_eatControlLetter = function (state) {\n  var ch = state.current();\n\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true;\n  }\n\n  return false;\n};\n\nfunction isControlLetter(ch) {\n  return ch >= 0x41\n  /* A */\n  && ch <= 0x5A\n  /* Z */\n  || ch >= 0x61\n  /* a */\n  && ch <= 0x7A\n  /* z */\n  ;\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n\n\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x75\n  /* u */\n  )) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n\n        if (state.eat(0x5C\n        /* \\ */\n        ) && state.eat(0x75\n        /* u */\n        ) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true;\n          }\n        }\n\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n\n      return true;\n    }\n\n    if (state.switchU && state.eat(0x7B\n    /* { */\n    ) && this.regexp_eatHexDigits(state) && state.eat(0x7D\n    /* } */\n    ) && isValidUnicode(state.lastIntValue)) {\n      return true;\n    }\n\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF;\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n\n\npp$9.regexp_eatIdentityEscape = function (state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true;\n    }\n\n    if (state.eat(0x2F\n    /* / */\n    )) {\n      state.lastIntValue = 0x2F;\n      /* / */\n\n      return true;\n    }\n\n    return false;\n  }\n\n  var ch = state.current();\n\n  if (ch !== 0x63\n  /* c */\n  && (!state.switchN || ch !== 0x6B\n  /* k */\n  )) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n\n\npp$9.regexp_eatDecimalEscape = function (state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n\n  if (ch >= 0x31\n  /* 1 */\n  && ch <= 0x39\n  /* 9 */\n  ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30\n        /* 0 */\n        );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30\n      /* 0 */\n      && ch <= 0x39\n      /* 9 */\n      );\n\n      return true;\n    }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n\n\npp$9.regexp_eatCharacterClassEscape = function (state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true;\n  }\n\n  if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 0x50\n  /* P */\n  || ch === 0x70\n  /* p */\n  )) {\n    state.lastIntValue = -1;\n    state.advance();\n\n    if (state.eat(0x7B\n    /* { */\n    ) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(0x7D\n    /* } */\n    )) {\n      return true;\n    }\n\n    state.raise(\"Invalid property name\");\n  }\n\n  return false;\n};\n\nfunction isCharacterClassEscape(ch) {\n  return ch === 0x64\n  /* d */\n  || ch === 0x44\n  /* D */\n  || ch === 0x73\n  /* s */\n  || ch === 0x53\n  /* S */\n  || ch === 0x77\n  /* w */\n  || ch === 0x57\n  /* W */\n  ;\n} // UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\n\n\npp$9.regexp_eatUnicodePropertyValueExpression = function (state) {\n  var start = state.pos; // UnicodePropertyName `=` UnicodePropertyValue\n\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D\n  /* = */\n  )) {\n    var name = state.lastStringValue;\n\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true;\n    }\n  }\n\n  state.pos = start; // LoneUnicodePropertyNameOrValue\n\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true;\n  }\n\n  return false;\n};\n\npp$9.regexp_validateUnicodePropertyNameAndValue = function (state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\npp$9.regexp_validateUnicodePropertyNameOrValue = function (state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n}; // UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\n\n\npp$9.regexp_eatUnicodePropertyName = function (state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n\n  return state.lastStringValue !== \"\";\n};\n\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F;\n  /* _ */\n} // UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\n\n\npp$9.regexp_eatUnicodePropertyValue = function (state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n\n  return state.lastStringValue !== \"\";\n};\n\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);\n} // LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\n\n\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function (state) {\n  return this.regexp_eatUnicodePropertyValue(state);\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n\n\npp$9.regexp_eatCharacterClass = function (state) {\n  if (state.eat(0x5B\n  /* [ */\n  )) {\n    state.eat(0x5E\n    /* ^ */\n    );\n    this.regexp_classRanges(state);\n\n    if (state.eat(0x5D\n    /* [ */\n    )) {\n      return true;\n    } // Unreachable since it threw \"unterminated regular expression\" error before.\n\n\n    state.raise(\"Unterminated character class\");\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n\n\npp$9.regexp_classRanges = function (state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n\n    if (state.eat(0x2D\n    /* - */\n    ) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n\n\npp$9.regexp_eatClassAtom = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C\n  /* \\ */\n  )) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true;\n    }\n\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n\n      if (ch$1 === 0x63\n      /* c */\n      || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n\n      state.raise(\"Invalid escape\");\n    }\n\n    state.pos = start;\n  }\n\n  var ch = state.current();\n\n  if (ch !== 0x5D\n  /* [ */\n  ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true;\n    }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n\n\npp$9.regexp_eatClassEscape = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x62\n  /* b */\n  )) {\n    state.lastIntValue = 0x08;\n    /* <BS> */\n\n    return true;\n  }\n\n  if (state.switchU && state.eat(0x2D\n  /* - */\n  )) {\n    state.lastIntValue = 0x2D;\n    /* - */\n\n    return true;\n  }\n\n  if (!state.switchU && state.eat(0x63\n  /* c */\n  )) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true;\n    }\n\n    state.pos = start;\n  }\n\n  return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n\n\npp$9.regexp_eatClassControlLetter = function (state) {\n  var ch = state.current();\n\n  if (isDecimalDigit(ch) || ch === 0x5F\n  /* _ */\n  ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true;\n    }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n\n\npp$9.regexp_eatHexEscapeSequence = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x78\n  /* x */\n  )) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true;\n    }\n\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n\n\npp$9.regexp_eatDecimalDigits = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30\n    /* 0 */\n    );\n    state.advance();\n  }\n\n  return state.pos !== start;\n};\n\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30\n  /* 0 */\n  && ch <= 0x39;\n  /* 9 */\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n\n\npp$9.regexp_eatHexDigits = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n\n  return state.pos !== start;\n};\n\nfunction isHexDigit(ch) {\n  return ch >= 0x30\n  /* 0 */\n  && ch <= 0x39\n  /* 9 */\n  || ch >= 0x41\n  /* A */\n  && ch <= 0x46\n  /* F */\n  || ch >= 0x61\n  /* a */\n  && ch <= 0x66\n  /* f */\n  ;\n}\n\nfunction hexToInt(ch) {\n  if (ch >= 0x41\n  /* A */\n  && ch <= 0x46\n  /* F */\n  ) {\n      return 10 + (ch - 0x41\n      /* A */\n      );\n    }\n\n  if (ch >= 0x61\n  /* a */\n  && ch <= 0x66\n  /* f */\n  ) {\n      return 10 + (ch - 0x61\n      /* a */\n      );\n    }\n\n  return ch - 0x30;\n  /* 0 */\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\n\n\npp$9.regexp_eatLegacyOctalEscapeSequence = function (state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n\n\npp$9.regexp_eatOctalDigit = function (state) {\n  var ch = state.current();\n\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30;\n    /* 0 */\n\n    state.advance();\n    return true;\n  }\n\n  state.lastIntValue = 0;\n  return false;\n};\n\nfunction isOctalDigit(ch) {\n  return ch >= 0x30\n  /* 0 */\n  && ch <= 0x37;\n  /* 7 */\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n\n\npp$9.regexp_eatFixedHexDigits = function (state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false;\n    }\n\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n\n  return true;\n}; // Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n\n  if (p.options.locations) {\n    this.loc = new SourceLocation(p, p.startLoc, p.endLoc);\n  }\n\n  if (p.options.ranges) {\n    this.range = [p.start, p.end];\n  }\n}; // ## Tokenizer\n\n\nvar pp$8 = Parser.prototype; // Move to the next token\n\npp$8.next = function () {\n  if (this.options.onToken) {\n    this.options.onToken(new Token(this));\n  }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function () {\n  this.next();\n  return new Token(this);\n}; // If we're in an ES6 environment, make parsers iterable\n\n\nif (typeof Symbol !== \"undefined\") {\n  pp$8[Symbol.iterator] = function () {\n    var this$1 = this;\n    return {\n      next: function next() {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        };\n      }\n    };\n  };\n} // Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n\npp$8.curContext = function () {\n  return this.context[this.context.length - 1];\n}; // Read a single token, updating the parser object's token-related\n// properties.\n\n\npp$8.nextToken = function () {\n  var curContext = this.curContext();\n\n  if (!curContext || !curContext.preserveSpace) {\n    this.skipSpace();\n  }\n\n  this.start = this.pos;\n\n  if (this.options.locations) {\n    this.startLoc = this.curPosition();\n  }\n\n  if (this.pos >= this.input.length) {\n    return this.finishToken(types.eof);\n  }\n\n  if (curContext.override) {\n    return curContext.override(this);\n  } else {\n    this.readToken(this.fullCharCodeAtPos());\n  }\n};\n\npp$8.readToken = function (code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92\n  /* '\\' */\n  ) {\n      return this.readWord();\n    }\n\n  return this.getTokenFromCode(code);\n};\n\npp$8.fullCharCodeAtPos = function () {\n  var code = this.input.charCodeAt(this.pos);\n\n  if (code <= 0xd7ff || code >= 0xe000) {\n    return code;\n  }\n\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00;\n};\n\npp$8.skipBlockComment = function () {\n  var this$1 = this;\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos,\n      end = this.input.indexOf(\"*/\", this.pos += 2);\n\n  if (end === -1) {\n    this.raise(this.pos - 2, \"Unterminated comment\");\n  }\n\n  this.pos = end + 2;\n\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n\n  if (this.options.onComment) {\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n  }\n};\n\npp$8.skipLineComment = function (startSkip) {\n  var this$1 = this;\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n\n  if (this.options.onComment) {\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n  }\n}; // Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\n\npp$8.skipSpace = function () {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n\n    switch (ch) {\n      case 32:\n      case 160:\n        // ' '\n        ++this$1.pos;\n        break;\n\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n          ++this$1.pos;\n        }\n\n      case 10:\n      case 8232:\n      case 8233:\n        ++this$1.pos;\n\n        if (this$1.options.locations) {\n          ++this$1.curLine;\n          this$1.lineStart = this$1.pos;\n        }\n\n        break;\n\n      case 47:\n        // '/'\n        switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n          case 42:\n            // '*'\n            this$1.skipBlockComment();\n            break;\n\n          case 47:\n            this$1.skipLineComment(2);\n            break;\n\n          default:\n            break loop;\n        }\n\n        break;\n\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this$1.pos;\n        } else {\n          break loop;\n        }\n\n    }\n  }\n}; // Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\n\npp$8.finishToken = function (type, val) {\n  this.end = this.pos;\n\n  if (this.options.locations) {\n    this.endLoc = this.curPosition();\n  }\n\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n  this.updateContext(prevType);\n}; // ### Token reading\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\n\n\npp$8.readToken_dot = function () {\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next >= 48 && next <= 57) {\n    return this.readNumber(true);\n  }\n\n  var next2 = this.input.charCodeAt(this.pos + 2);\n\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n    // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis);\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot);\n  }\n};\n\npp$8.readToken_slash = function () {\n  // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (this.exprAllowed) {\n    ++this.pos;\n    return this.readRegexp();\n  }\n\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n\n  return this.finishOp(types.slash, 1);\n};\n\npp$8.readToken_mult_modulo_exp = function (code) {\n  // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo; // exponentiation operator ** and **=\n\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) {\n    return this.finishOp(types.assign, size + 1);\n  }\n\n  return this.finishOp(tokentype, size);\n};\n\npp$8.readToken_pipe_amp = function (code) {\n  // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next === code) {\n    return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n  }\n\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n};\n\npp$8.readToken_caret = function () {\n  // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n\n  return this.finishOp(types.bitwiseXOR, 1);\n};\n\npp$8.readToken_plus_min = function (code) {\n  // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken();\n    }\n\n    return this.finishOp(types.incDec, 2);\n  }\n\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n\n  return this.finishOp(types.plusMin, 1);\n};\n\npp$8.readToken_lt_gt = function (code) {\n  // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n\n    if (this.input.charCodeAt(this.pos + size) === 61) {\n      return this.finishOp(types.assign, size + 1);\n    }\n\n    return this.finishOp(types.bitShift, size);\n  }\n\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken();\n  }\n\n  if (next === 61) {\n    size = 2;\n  }\n\n  return this.finishOp(types.relational, size);\n};\n\npp$8.readToken_eq_excl = function (code) {\n  // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next === 61) {\n    return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n  }\n\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n    // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow);\n  }\n\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1);\n};\n\npp$8.getTokenFromCode = function (code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46:\n      // '.'\n      return this.readToken_dot();\n    // Punctuation tokens.\n\n    case 40:\n      ++this.pos;\n      return this.finishToken(types.parenL);\n\n    case 41:\n      ++this.pos;\n      return this.finishToken(types.parenR);\n\n    case 59:\n      ++this.pos;\n      return this.finishToken(types.semi);\n\n    case 44:\n      ++this.pos;\n      return this.finishToken(types.comma);\n\n    case 91:\n      ++this.pos;\n      return this.finishToken(types.bracketL);\n\n    case 93:\n      ++this.pos;\n      return this.finishToken(types.bracketR);\n\n    case 123:\n      ++this.pos;\n      return this.finishToken(types.braceL);\n\n    case 125:\n      ++this.pos;\n      return this.finishToken(types.braceR);\n\n    case 58:\n      ++this.pos;\n      return this.finishToken(types.colon);\n\n    case 63:\n      ++this.pos;\n      return this.finishToken(types.question);\n\n    case 96:\n      // '`'\n      if (this.options.ecmaVersion < 6) {\n        break;\n      }\n\n      ++this.pos;\n      return this.finishToken(types.backQuote);\n\n    case 48:\n      // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n\n      if (next === 120 || next === 88) {\n        return this.readRadixNumber(16);\n      } // '0x', '0X' - hex number\n\n\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) {\n          return this.readRadixNumber(8);\n        } // '0o', '0O' - octal number\n\n\n        if (next === 98 || next === 66) {\n          return this.readRadixNumber(2);\n        } // '0b', '0B' - binary number\n\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      // 1-9\n      return this.readNumber(false);\n    // Quotes produce strings.\n\n    case 34:\n    case 39:\n      // '\"', \"'\"\n      return this.readString(code);\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47:\n      // '/'\n      return this.readToken_slash();\n\n    case 37:\n    case 42:\n      // '%*'\n      return this.readToken_mult_modulo_exp(code);\n\n    case 124:\n    case 38:\n      // '|&'\n      return this.readToken_pipe_amp(code);\n\n    case 94:\n      // '^'\n      return this.readToken_caret();\n\n    case 43:\n    case 45:\n      // '+-'\n      return this.readToken_plus_min(code);\n\n    case 60:\n    case 62:\n      // '<>'\n      return this.readToken_lt_gt(code);\n\n    case 61:\n    case 33:\n      // '=!'\n      return this.readToken_eq_excl(code);\n\n    case 126:\n      // '~'\n      return this.finishOp(types.prefix, 1);\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function (type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str);\n};\n\npp$8.readRegexp = function () {\n  var this$1 = this;\n  var escaped,\n      inClass,\n      start = this.pos;\n\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) {\n      this$1.raise(start, \"Unterminated regular expression\");\n    }\n\n    var ch = this$1.input.charAt(this$1.pos);\n\n    if (lineBreak.test(ch)) {\n      this$1.raise(start, \"Unterminated regular expression\");\n    }\n\n    if (!escaped) {\n      if (ch === \"[\") {\n        inClass = true;\n      } else if (ch === \"]\" && inClass) {\n        inClass = false;\n      } else if (ch === \"/\" && !inClass) {\n        break;\n      }\n\n      escaped = ch === \"\\\\\";\n    } else {\n      escaped = false;\n    }\n\n    ++this$1.pos;\n  }\n\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n\n  if (this.containsEsc) {\n    this.unexpected(flagsStart);\n  } // Validate pattern\n\n\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state); // Create Literal#value property value.\n\n  var value = null;\n\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {// ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {\n    pattern: pattern,\n    flags: flags,\n    value: value\n  });\n}; // Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\n\npp$8.readInt = function (radix, len) {\n  var this$1 = this;\n  var start = this.pos,\n      total = 0;\n\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos),\n        val = void 0;\n\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } // a\n    else if (code >= 65) {\n        val = code - 65 + 10;\n      } // A\n      else if (code >= 48 && code <= 57) {\n          val = code - 48;\n        } // 0-9\n        else {\n            val = Infinity;\n          }\n\n    if (val >= radix) {\n      break;\n    }\n\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n\n  if (this.pos === start || len != null && this.pos - start !== len) {\n    return null;\n  }\n\n  return total;\n};\n\npp$8.readRadixNumber = function (radix) {\n  this.pos += 2; // 0x\n\n  var val = this.readInt(radix);\n\n  if (val == null) {\n    this.raise(this.start + 2, \"Expected number in radix \" + radix);\n  }\n\n  if (isIdentifierStart(this.fullCharCodeAtPos())) {\n    this.raise(this.pos, \"Identifier directly after number\");\n  }\n\n  return this.finishToken(types.num, val);\n}; // Read an integer, octal integer, or floating-point number.\n\n\npp$8.readNumber = function (startsWithDot) {\n  var start = this.pos;\n\n  if (!startsWithDot && this.readInt(10) === null) {\n    this.raise(start, \"Invalid number\");\n  }\n\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n  if (octal && this.strict) {\n    this.raise(start, \"Invalid number\");\n  }\n\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) {\n    octal = false;\n  }\n\n  var next = this.input.charCodeAt(this.pos);\n\n  if (next === 46 && !octal) {\n    // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n\n  if ((next === 69 || next === 101) && !octal) {\n    // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n\n    if (next === 43 || next === 45) {\n      ++this.pos;\n    } // '+-'\n\n\n    if (this.readInt(10) === null) {\n      this.raise(start, \"Invalid number\");\n    }\n  }\n\n  if (isIdentifierStart(this.fullCharCodeAtPos())) {\n    this.raise(this.pos, \"Identifier directly after number\");\n  }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val);\n}; // Read a string value, interpreting backslash-escapes.\n\n\npp$8.readCodePoint = function () {\n  var ch = this.input.charCodeAt(this.pos),\n      code;\n\n  if (ch === 123) {\n    // '{'\n    if (this.options.ecmaVersion < 6) {\n      this.unexpected();\n    }\n\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n\n    if (code > 0x10FFFF) {\n      this.invalidStringToken(codePos, \"Code point out of bounds\");\n    }\n  } else {\n    code = this.readHexChar(4);\n  }\n\n  return code;\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  }\n\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n}\n\npp$8.readString = function (quote) {\n  var this$1 = this;\n  var out = \"\",\n      chunkStart = ++this.pos;\n\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) {\n      this$1.raise(this$1.start, \"Unterminated string constant\");\n    }\n\n    var ch = this$1.input.charCodeAt(this$1.pos);\n\n    if (ch === quote) {\n      break;\n    }\n\n    if (ch === 92) {\n      // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) {\n        this$1.raise(this$1.start, \"Unterminated string constant\");\n      }\n\n      ++this$1.pos;\n    }\n  }\n\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out);\n}; // Reads template string tokens.\n\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function () {\n  this.inTemplateElement = true;\n\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err;\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function (position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR;\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function () {\n  var this$1 = this;\n  var out = \"\",\n      chunkStart = this.pos;\n\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) {\n      this$1.raise(this$1.start, \"Unterminated template\");\n    }\n\n    var ch = this$1.input.charCodeAt(this$1.pos);\n\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) {\n      // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL);\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote);\n        }\n      }\n\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out);\n    }\n\n    if (ch === 92) {\n      // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n\n      switch (ch) {\n        case 13:\n          if (this$1.input.charCodeAt(this$1.pos) === 10) {\n            ++this$1.pos;\n          }\n\n        case 10:\n          out += \"\\n\";\n          break;\n\n        default:\n          out += String.fromCharCode(ch);\n          break;\n      }\n\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n}; // Reads a template token to search for the end, without validating any escape sequences\n\n\npp$8.readInvalidTemplateToken = function () {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n      case \"\\\\\":\n        ++this$1.pos;\n        break;\n\n      case \"$\":\n        if (this$1.input[this$1.pos + 1] !== \"{\") {\n          break;\n        }\n\n      // falls through\n\n      case \"`\":\n        return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos));\n      // no default\n    }\n  }\n\n  this.raise(this.start, \"Unterminated template\");\n}; // Used to read escaped characters\n\n\npp$8.readEscapedChar = function (inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n\n  switch (ch) {\n    case 110:\n      return \"\\n\";\n    // 'n' -> '\\n'\n\n    case 114:\n      return \"\\r\";\n    // 'r' -> '\\r'\n\n    case 120:\n      return String.fromCharCode(this.readHexChar(2));\n    // 'x'\n\n    case 117:\n      return codePointToString(this.readCodePoint());\n    // 'u'\n\n    case 116:\n      return \"\\t\";\n    // 't' -> '\\t'\n\n    case 98:\n      return \"\\b\";\n    // 'b' -> '\\b'\n\n    case 118:\n      return \"\\x0B\";\n    // 'v' -> '\\u000b'\n\n    case 102:\n      return \"\\f\";\n    // 'f' -> '\\f'\n\n    case 13:\n      if (this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n      }\n\n    // '\\r\\n'\n\n    case 10:\n      // ' \\n'\n      if (this.options.locations) {\n        this.lineStart = this.pos;\n        ++this.curLine;\n      }\n\n      return \"\";\n\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? \"Octal literal in template string\" : \"Octal literal in strict mode\");\n        }\n\n        return String.fromCharCode(octal);\n      }\n\n      return String.fromCharCode(ch);\n  }\n}; // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n\npp$8.readHexChar = function (len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n\n  if (n === null) {\n    this.invalidStringToken(codePos, \"Bad character escape sequence\");\n  }\n\n  return n;\n}; // Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\n\npp$8.readWord1 = function () {\n  var this$1 = this;\n  this.containsEsc = false;\n  var word = \"\",\n      first = true,\n      chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) {\n      // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        {\n          this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n        }\n\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {\n        this$1.invalidStringToken(escStart, \"Invalid Unicode escape\");\n      }\n\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break;\n    }\n\n    first = false;\n  }\n\n  return word + this.input.slice(chunkStart, this.pos);\n}; // Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\n\npp$8.readWord = function () {\n  var word = this.readWord1();\n  var type = types.name;\n\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) {\n      this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word);\n    }\n\n    type = keywords$1[word];\n  }\n\n  return this.finishToken(type, word);\n}; // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\n\nvar version = \"5.7.3\"; // The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse();\n} // This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression();\n} // Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input);\n} // This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\n\n\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\n\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../kernel'),\n    Kernel = _require.Kernel;\n\nvar _require2 = require('../function-builder'),\n    FunctionBuilder = _require2.FunctionBuilder;\n\nvar _require3 = require('./function-node'),\n    CPUFunctionNode = _require3.CPUFunctionNode;\n\nvar _require4 = require('../../utils'),\n    utils = _require4.utils;\n\nvar _require5 = require('./kernel-string'),\n    cpuKernelString = _require5.cpuKernelString;\n/**\n * @desc Kernel Implementation for CPU.\n * <p>Instantiates properties to the CPU Kernel.</p>\n */\n\n\nvar CPUKernel =\n/*#__PURE__*/\nfunction (_Kernel) {\n  \"use strict\";\n\n  _inherits(CPUKernel, _Kernel);\n\n  _createClass(CPUKernel, null, [{\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      return this.features;\n    }\n  }, {\n    key: \"isContextMatch\",\n    value: function isContextMatch(context) {\n      return false;\n    }\n    /**\n     * @desc The current mode in which gpu.js is executing.\n     */\n\n  }, {\n    key: \"nativeFunctionArguments\",\n    value: function nativeFunctionArguments() {\n      return null;\n    }\n  }, {\n    key: \"nativeFunctionReturnType\",\n    value: function nativeFunctionReturnType() {\n      return null;\n    }\n  }, {\n    key: \"combineKernels\",\n    value: function combineKernels(combinedKernel) {\n      return combinedKernel;\n    }\n  }, {\n    key: \"features\",\n    get: function get() {\n      return Object.freeze({\n        kernelMap: true,\n        isIntegerDivisionAccurate: true\n      });\n    }\n  }, {\n    key: \"isSupported\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"mode\",\n    get: function get() {\n      return 'cpu';\n    }\n  }]);\n\n  function CPUKernel(source, settings) {\n    var _this;\n\n    _classCallCheck(this, CPUKernel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CPUKernel).call(this, source, settings));\n\n    _this.mergeSettings(source.settings || settings);\n\n    _this._imageData = null;\n    _this._colorData = null;\n    _this._kernelString = null;\n    _this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    _this.translatedSources = null;\n    return _this;\n  }\n\n  _createClass(CPUKernel, [{\n    key: \"initCanvas\",\n    value: function initCanvas() {\n      if (typeof document !== 'undefined') {\n        return document.createElement('canvas');\n      } else if (typeof OffscreenCanvas !== 'undefined') {\n        return new OffscreenCanvas(0, 0);\n      }\n    }\n  }, {\n    key: \"initContext\",\n    value: function initContext() {\n      if (!this.canvas) return null;\n      return this.canvas.getContext('2d');\n    }\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins(settings) {\n      return [];\n    }\n    /**\n     * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n     * @param {IArguments} args\n     */\n\n  }, {\n    key: \"validateSettings\",\n    value: function validateSettings(args) {\n      if (!this.output || this.output.length === 0) {\n        if (args.length !== 1) {\n          throw new Error('Auto output only supported for kernels with only one input');\n        }\n\n        var argType = utils.getVariableType(args[0], this.strictIntegers);\n\n        if (argType === 'Array') {\n          this.output = utils.getDimensions(argType);\n        } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n          this.output = args[0].output;\n        } else {\n          throw new Error('Auto output not supported for input type: ' + argType);\n        }\n      }\n\n      if (this.graphical) {\n        if (this.output.length !== 2) {\n          throw new Error('Output must have 2 dimensions on graphical mode');\n        }\n      }\n\n      this.checkOutput();\n    }\n  }, {\n    key: \"translateSource\",\n    value: function translateSource() {\n      this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n\n      if (this.subKernels) {\n        var followingReturnStatement = [];\n\n        for (var i = 0; i < this.subKernels.length; i++) {\n          var name = this.subKernels[i].name;\n          followingReturnStatement.push(this.output.length > 1 ? \"resultX_\".concat(name, \"[x] = subKernelResult_\").concat(name, \";\\n\") : \"result_\".concat(name, \"[x] = subKernelResult_\").concat(name, \";\\n\"));\n        }\n\n        this.followingReturnStatement = followingReturnStatement.join('');\n      }\n\n      var functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n      this.translatedSources = functionBuilder.getPrototypes('kernel');\n\n      if (!this.graphical && !this.returnType) {\n        this.returnType = functionBuilder.getKernelResultType();\n      }\n    }\n    /**\n     * @desc Builds the Kernel, by generating the kernel\n     * string using thread dimensions, and arguments\n     * supplied to the kernel.\n     *\n     * <p>If the graphical flag is enabled, canvas is used.</p>\n     */\n\n  }, {\n    key: \"build\",\n    value: function build() {\n      this.setupConstants();\n      this.setupArguments(arguments);\n      this.validateSettings(arguments);\n      this.translateSource();\n\n      if (this.graphical) {\n        var canvas = this.canvas,\n            output = this.output;\n\n        if (!canvas) {\n          throw new Error('no canvas available for using graphical output');\n        }\n\n        var width = output[0];\n        var height = output[1] || 1;\n        canvas.width = width;\n        canvas.height = height;\n        this._imageData = this.context.createImageData(width, height);\n        this._colorData = new Uint8ClampedArray(width * height * 4);\n      }\n\n      var kernelString = this.getKernelString();\n      this.kernelString = kernelString;\n\n      if (this.debug) {\n        console.log('Function output:');\n        console.log(kernelString);\n      }\n\n      try {\n        this.run = new Function([], kernelString).bind(this)();\n      } catch (e) {\n        console.error('An error occurred compiling the javascript: ', e);\n      }\n    }\n  }, {\n    key: \"color\",\n    value: function color(r, g, b, a) {\n      if (typeof a === 'undefined') {\n        a = 1;\n      }\n\n      r = Math.floor(r * 255);\n      g = Math.floor(g * 255);\n      b = Math.floor(b * 255);\n      a = Math.floor(a * 255);\n      var width = this.output[0];\n      var height = this.output[1];\n      var x = this.thread.x;\n      var y = height - this.thread.y - 1;\n      var index = x + y * width;\n      this._colorData[index * 4 + 0] = r;\n      this._colorData[index * 4 + 1] = g;\n      this._colorData[index * 4 + 2] = b;\n      this._colorData[index * 4 + 3] = a;\n    }\n    /**\n     * @desc Generates kernel string for this kernel program.\n     *\n     * <p>If sub-kernels are supplied, they are also factored in.\n     * This string can be saved by calling the `toString` method\n     * and then can be reused later.</p>\n     *\n     * @returns {String} result\n     *\n     */\n\n  }, {\n    key: \"getKernelString\",\n    value: function getKernelString() {\n      if (this._kernelString !== null) return this._kernelString;\n      var kernelThreadString = null;\n      var translatedSources = this.translatedSources;\n\n      if (translatedSources.length > 1) {\n        translatedSources = translatedSources.filter(function (fn) {\n          if (/^function/.test(fn)) return fn;\n          kernelThreadString = fn;\n          return false;\n        });\n      } else {\n        kernelThreadString = translatedSources.shift();\n      }\n\n      var kernelString = this._kernelString = \"  const LOOP_MAX = \".concat(this._getLoopMaxString(), \"\\n  const constants = this.constants;\\n  const _this = this;\\n  return (\").concat(this.argumentNames.map(function (argumentName) {\n        return 'user_' + argumentName;\n      }).join(', '), \") => {\\n    \").concat(this._processConstants(), \"\\n    \").concat(this._processArguments(), \"\\n    \").concat(this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString), \"\\n    \").concat(translatedSources.length > 0 ? translatedSources.join('\\n') : '', \"\\n  };\");\n      return kernelString;\n    }\n    /**\n     * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return cpuKernelString(this);\n    }\n    /**\n     * @desc Get the maximum loop size String.\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getLoopMaxString\",\n    value: function _getLoopMaxString() {\n      return this.loopMaxIterations ? \" \".concat(parseInt(this.loopMaxIterations), \";\") : ' 1000;';\n    }\n  }, {\n    key: \"_processConstants\",\n    value: function _processConstants() {\n      if (!this.constants) return '';\n      var result = [];\n\n      for (var p in this.constants) {\n        var type = this.constantTypes[p];\n\n        switch (type) {\n          case 'HTMLImage':\n            result.push(\"    const constants_\".concat(p, \" = this._imageTo2DArray(this.constants.\").concat(p, \");\\n\"));\n            break;\n\n          case 'HTMLImageArray':\n            result.push(\"    const constants_\".concat(p, \" = this._imageTo3DArray(this.constants.\").concat(p, \");\\n\"));\n            break;\n\n          case 'Input':\n            result.push(\"    const constants_\".concat(p, \" = this.constants.\").concat(p, \".value;\\n\"));\n            break;\n\n          default:\n            result.push(\"    const constants_\".concat(p, \" = this.constants.\").concat(p, \";\\n\"));\n        }\n      }\n\n      return result.join('');\n    }\n  }, {\n    key: \"_processArguments\",\n    value: function _processArguments() {\n      var result = [];\n\n      for (var i = 0; i < this.argumentTypes.length; i++) {\n        var variableName = \"user_\".concat(this.argumentNames[i]);\n\n        switch (this.argumentTypes[i]) {\n          case 'HTMLImage':\n            result.push(\"    \".concat(variableName, \" = this._imageTo2DArray(\").concat(variableName, \");\\n\"));\n            break;\n\n          case 'HTMLImageArray':\n            result.push(\"    \".concat(variableName, \" = this._imageTo3DArray(\").concat(variableName, \");\\n\"));\n            break;\n\n          case 'Input':\n            result.push(\"    \".concat(variableName, \" = \").concat(variableName, \".value;\\n\"));\n            break;\n\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'NumberTexture':\n          case 'MemoryOptimizedNumberTexture':\n            result.push(\"\\n    if (\".concat(variableName, \".toArray) {\\n      if (!_this.textureCache) {\\n        _this.textureCache = [];\\n        _this.arrayCache = [];\\n      }\\n      const textureIndex = _this.textureCache.indexOf(\").concat(variableName, \");\\n      if (textureIndex !== -1) {\\n        \").concat(variableName, \" = _this.arrayCache[textureIndex];\\n      } else {\\n        _this.textureCache.push(\").concat(variableName, \");\\n        \").concat(variableName, \" = \").concat(variableName, \".toArray();\\n        _this.arrayCache.push(\").concat(variableName, \");\\n      }\\n    }\"));\n            break;\n        }\n      }\n\n      return result.join('');\n    }\n  }, {\n    key: \"_imageTo2DArray\",\n    value: function _imageTo2DArray(image) {\n      var canvas = this.canvas;\n\n      if (canvas.width < image.width) {\n        canvas.width = image.width;\n      }\n\n      if (canvas.height < image.height) {\n        canvas.height = image.height;\n      }\n\n      var ctx = this.context;\n      ctx.drawImage(image, 0, 0, image.width, image.height);\n      var pixelsData = ctx.getImageData(0, 0, image.width, image.height).data;\n      var imageArray = new Array(image.height);\n      var index = 0;\n\n      for (var y = image.height - 1; y >= 0; y--) {\n        var row = imageArray[y] = new Array(image.width);\n\n        for (var x = 0; x < image.width; x++) {\n          var pixel = new Float32Array(4);\n          pixel[0] = pixelsData[index++] / 255; // r\n\n          pixel[1] = pixelsData[index++] / 255; // g\n\n          pixel[2] = pixelsData[index++] / 255; // b\n\n          pixel[3] = pixelsData[index++] / 255; // a\n\n          row[x] = pixel;\n        }\n      }\n\n      return imageArray;\n    }\n  }, {\n    key: \"getPixels\",\n    value: function getPixels(flip) {\n      var _this$output = _slicedToArray(this.output, 2),\n          width = _this$output[0],\n          height = _this$output[1]; // cpu is not flipped by default\n\n\n      return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n    }\n  }, {\n    key: \"_imageTo3DArray\",\n    value: function _imageTo3DArray(images) {\n      var imagesArray = new Array(images.length);\n\n      for (var i = 0; i < images.length; i++) {\n        imagesArray[i] = this._imageTo2DArray(images[i]);\n      }\n\n      return imagesArray;\n    }\n  }, {\n    key: \"_resultKernelBody\",\n    value: function _resultKernelBody(kernelString) {\n      switch (this.output.length) {\n        case 1:\n          return this._resultKernel1DLoop(kernelString) + this._kernelOutput();\n\n        case 2:\n          return this._resultKernel2DLoop(kernelString) + this._kernelOutput();\n\n        case 3:\n          return this._resultKernel3DLoop(kernelString) + this._kernelOutput();\n\n        default:\n          throw new Error('unsupported size kernel');\n      }\n    }\n  }, {\n    key: \"_graphicalKernelBody\",\n    value: function _graphicalKernelBody(kernelThreadString) {\n      switch (this.output.length) {\n        case 2:\n          return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n\n        default:\n          throw new Error('unsupported size kernel');\n      }\n    }\n  }, {\n    key: \"_graphicalOutput\",\n    value: function _graphicalOutput() {\n      return \"\\n    this._imageData.data.set(this._colorData);\\n    this.context.putImageData(this._imageData, 0, 0);\\n    return;\";\n    }\n  }, {\n    key: \"_getKernelResultTypeConstructorString\",\n    value: function _getKernelResultTypeConstructorString() {\n      switch (this.returnType) {\n        case 'LiteralInteger':\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n          return 'Float32Array';\n\n        case 'Array(2)':\n        case 'Array(3)':\n        case 'Array(4)':\n          return 'Array';\n\n        default:\n          if (this.graphical) {\n            return 'Float32Array';\n          }\n\n          throw new Error(\"unhandled returnType \".concat(this.returnType));\n      }\n    }\n  }, {\n    key: \"_resultKernel1DLoop\",\n    value: function _resultKernel1DLoop(kernelString) {\n      var output = this.output;\n\n      var constructorString = this._getKernelResultTypeConstructorString();\n\n      return \"  const outputX = _this.output[0];\\n    const result = new \".concat(constructorString, \"(outputX);\\n    \").concat(this._mapSubKernels(function (subKernel) {\n        return \"const result_\".concat(subKernel.name, \" = new \").concat(constructorString, \"(outputX);\\n\");\n      }).join('    '), \"\\n    \").concat(this._mapSubKernels(function (subKernel) {\n        return \"let subKernelResult_\".concat(subKernel.name, \";\\n\");\n      }).join('    '), \"\\n    for (let x = 0; x < outputX; x++) {\\n      this.thread.x = x;\\n      this.thread.y = 0;\\n      this.thread.z = 0;\\n      \").concat(kernelString, \"\\n    }\");\n    }\n  }, {\n    key: \"_resultKernel2DLoop\",\n    value: function _resultKernel2DLoop(kernelString) {\n      var output = this.output;\n\n      var constructorString = this._getKernelResultTypeConstructorString();\n\n      return \"  const outputX = _this.output[0];\\n    const outputY = _this.output[1];\\n    const result = new Array(outputY);\\n    \".concat(this._mapSubKernels(function (subKernel) {\n        return \"const result_\".concat(subKernel.name, \" = new Array(outputY);\\n\");\n      }).join('    '), \"\\n    \").concat(this._mapSubKernels(function (subKernel) {\n        return \"let subKernelResult_\".concat(subKernel.name, \";\\n\");\n      }).join('    '), \"\\n    for (let y = 0; y < outputY; y++) {\\n      this.thread.z = 0;\\n      this.thread.y = y;\\n      const resultX = result[y] = new \").concat(constructorString, \"(outputX);\\n      \").concat(this._mapSubKernels(function (subKernel) {\n        return \"const resultX_\".concat(subKernel.name, \" = result_\").concat(subKernel.name, \"[y] = new \").concat(constructorString, \"(outputX);\\n\");\n      }).join(''), \"\\n      for (let x = 0; x < outputX; x++) {\\n        this.thread.x = x;\\n        \").concat(kernelString, \"\\n      }\\n    }\");\n    }\n  }, {\n    key: \"_graphicalKernel2DLoop\",\n    value: function _graphicalKernel2DLoop(kernelString) {\n      var output = this.output;\n\n      var constructorString = this._getKernelResultTypeConstructorString();\n\n      return \"  const outputX = _this.output[0];\\n    const outputY = _this.output[1];\\n    \".concat(this._mapSubKernels(function (subKernel) {\n        return \"const result_\".concat(subKernel.name, \" = new Array(outputY);\\n\");\n      }).join('    '), \"\\n    \").concat(this._mapSubKernels(function (subKernel) {\n        return \"let subKernelResult_\".concat(subKernel.name, \";\\n\");\n      }).join('    '), \"\\n    for (let y = 0; y < outputY; y++) {\\n      this.thread.z = 0;\\n      this.thread.y = y;\\n      \").concat(this._mapSubKernels(function (subKernel) {\n        return \"const resultX_\".concat(subKernel.name, \" = result_\").concat(subKernel.name, \"[y] = new \").concat(constructorString, \"(outputX);\\n\");\n      }).join(''), \"\\n      for (let x = 0; x < outputX; x++) {\\n        this.thread.x = x;\\n        \").concat(kernelString, \"\\n      }\\n    }\");\n    }\n  }, {\n    key: \"_resultKernel3DLoop\",\n    value: function _resultKernel3DLoop(kernelString) {\n      var output = this.output;\n\n      var constructorString = this._getKernelResultTypeConstructorString();\n\n      return \"  const outputX = _this.output[0];\\n    const outputY = _this.output[1];\\n    const outputZ = _this.output[2];\\n    const result = new Array(outputZ);\\n    \".concat(this._mapSubKernels(function (subKernel) {\n        return \"const result_\".concat(subKernel.name, \" = new Array(outputZ);\\n\");\n      }).join('    '), \"\\n    \").concat(this._mapSubKernels(function (subKernel) {\n        return \"let subKernelResult_\".concat(subKernel.name, \";\\n\");\n      }).join('    '), \"\\n    for (let z = 0; z < outputZ; z++) {\\n      this.thread.z = z;\\n      const resultY = result[z] = new Array(outputY);\\n      \").concat(this._mapSubKernels(function (subKernel) {\n        return \"const resultY_\".concat(subKernel.name, \" = result_\").concat(subKernel.name, \"[z] = new Array(outputY);\\n\");\n      }).join('      '), \"\\n      for (let y = 0; y < outputY; y++) {\\n        this.thread.y = y;\\n        const resultX = resultY[y] = new \").concat(constructorString, \"(outputX);\\n        \").concat(this._mapSubKernels(function (subKernel) {\n        return \"const resultX_\".concat(subKernel.name, \" = resultY_\").concat(subKernel.name, \"[y] = new \").concat(constructorString, \"(outputX);\\n\");\n      }).join('        '), \"\\n        for (let x = 0; x < outputX; x++) {\\n          this.thread.x = x;\\n          \").concat(kernelString, \"\\n        }\\n      }\\n    }\");\n    }\n  }, {\n    key: \"_kernelOutput\",\n    value: function _kernelOutput() {\n      if (!this.subKernels) {\n        return '\\n    return result;';\n      }\n\n      return \"\\n    return {\\n      result: result,\\n      \".concat(this.subKernels.map(function (subKernel) {\n        return \"\".concat(subKernel.property, \": result_\").concat(subKernel.name);\n      }).join(',\\n      '), \"\\n    };\");\n    }\n  }, {\n    key: \"_mapSubKernels\",\n    value: function _mapSubKernels(fn) {\n      return this.subKernels === null ? [''] : this.subKernels.map(fn);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(removeCanvasReference) {\n      if (removeCanvasReference) {\n        delete this.canvas;\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(CPUKernel.prototype), \"toJSON\", this).call(this);\n\n      json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n      return json;\n    }\n  }, {\n    key: \"setOutput\",\n    value: function setOutput(output) {\n      _get(_getPrototypeOf(CPUKernel.prototype), \"setOutput\", this).call(this, output);\n\n      var _this$output2 = _slicedToArray(this.output, 2),\n          width = _this$output2[0],\n          height = _this$output2[1];\n\n      if (this.graphical) {\n        this._imageData = this.context.createImageData(width, height);\n        this._colorData = new Uint8ClampedArray(width * height * 4);\n      }\n    }\n  }], [{\n    key: \"destroyContext\",\n    value: function destroyContext(context) {}\n  }]);\n\n  return CPUKernel;\n}(Kernel);\n\nmodule.exports = {\n  CPUKernel: CPUKernel\n};","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../function-node'),\n    FunctionNode = _require.FunctionNode;\n/**\n * @desc [INTERNAL] Represents a single function, inside JS\n *\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n */\n\n\nvar CPUFunctionNode =\n/*#__PURE__*/\nfunction (_FunctionNode) {\n  \"use strict\";\n\n  _inherits(CPUFunctionNode, _FunctionNode);\n\n  function CPUFunctionNode() {\n    _classCallCheck(this, CPUFunctionNode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CPUFunctionNode).apply(this, arguments));\n  }\n\n  _createClass(CPUFunctionNode, [{\n    key: \"astFunction\",\n\n    /**\n     * @desc Parses the abstract syntax tree for to its *named function*\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n    value: function astFunction(ast, retArr) {\n      // Setup function return type and name\n      if (!this.isRootKernel) {\n        retArr.push('function');\n        retArr.push(' ');\n        retArr.push(this.name);\n        retArr.push('('); // Arguments handling\n\n        for (var i = 0; i < this.argumentNames.length; ++i) {\n          var argumentName = this.argumentNames[i];\n\n          if (i > 0) {\n            retArr.push(', ');\n          }\n\n          retArr.push('user_');\n          retArr.push(argumentName);\n        } // Function opening\n\n\n        retArr.push(') {\\n');\n      } // Body statement iteration\n\n\n      for (var _i = 0; _i < ast.body.body.length; ++_i) {\n        this.astGeneric(ast.body.body[_i], retArr);\n        retArr.push('\\n');\n      }\n\n      if (!this.isRootKernel) {\n        // Function closing\n        retArr.push('}\\n');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for to *return* statement\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astReturnStatement\",\n    value: function astReturnStatement(ast, retArr) {\n      var type = this.returnType || this.getType(ast.argument);\n\n      if (!this.returnType) {\n        this.returnType = type;\n      }\n\n      if (this.isRootKernel) {\n        retArr.push(this.leadingReturnStatement);\n        this.astGeneric(ast.argument, retArr);\n        retArr.push(';\\n');\n        retArr.push(this.followingReturnStatement);\n        retArr.push('continue;\\n');\n      } else if (this.isSubKernel) {\n        retArr.push(\"subKernelResult_\".concat(this.name, \" = \"));\n        this.astGeneric(ast.argument, retArr);\n        retArr.push(';');\n        retArr.push(\"return subKernelResult_\".concat(this.name, \";\"));\n      } else {\n        retArr.push('return ');\n        this.astGeneric(ast.argument, retArr);\n        retArr.push(';');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *literal value*\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astLiteral\",\n    value: function astLiteral(ast, retArr) {\n      // Reject non numeric literals\n      if (isNaN(ast.value)) {\n        throw this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n      }\n\n      retArr.push(ast.value);\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *binary* expression\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astBinaryExpression\",\n    value: function astBinaryExpression(ast, retArr) {\n      retArr.push('(');\n      this.astGeneric(ast.left, retArr);\n      retArr.push(ast.operator);\n      this.astGeneric(ast.right, retArr);\n      retArr.push(')');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *identifier* expression\n     * @param {Object} idtNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astIdentifierExpression\",\n    value: function astIdentifierExpression(idtNode, retArr) {\n      if (idtNode.type !== 'Identifier') {\n        throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n      }\n\n      switch (idtNode.name) {\n        case 'Infinity':\n          retArr.push('Infinity');\n          break;\n\n        default:\n          if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n            retArr.push('constants_' + idtNode.name);\n          } else {\n            var name = this.getKernelArgumentName(idtNode.name);\n\n            if (name) {\n              retArr.push('user_' + name);\n            } else {\n              retArr.push('user_' + idtNode.name);\n            }\n          }\n\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *for-loop* expression\n     * @param {Object} forNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the parsed webgl string\n     */\n\n  }, {\n    key: \"astForStatement\",\n    value: function astForStatement(forNode, retArr) {\n      if (forNode.type !== 'ForStatement') {\n        throw this.astErrorOutput('Invalid for statement', forNode);\n      }\n\n      var initArr = [];\n      var testArr = [];\n      var updateArr = [];\n      var bodyArr = [];\n      var isSafe = null;\n\n      if (forNode.init) {\n        this.pushState('in-for-loop-init');\n        this.astGeneric(forNode.init, initArr);\n\n        for (var i = 0; i < initArr.length; i++) {\n          if (initArr[i].includes && initArr[i].includes(',')) {\n            isSafe = false;\n          }\n        }\n\n        this.popState('in-for-loop-init');\n      } else {\n        isSafe = false;\n      }\n\n      if (forNode.test) {\n        this.astGeneric(forNode.test, testArr);\n      } else {\n        isSafe = false;\n      }\n\n      if (forNode.update) {\n        this.astGeneric(forNode.update, updateArr);\n      } else {\n        isSafe = false;\n      }\n\n      if (forNode.body) {\n        this.pushState('loop-body');\n        this.astGeneric(forNode.body, bodyArr);\n        this.popState('loop-body');\n      } // have all parts, now make them safe\n\n\n      if (isSafe === null) {\n        isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n      }\n\n      if (isSafe) {\n        retArr.push(\"for (\".concat(initArr.join(''), \";\").concat(testArr.join(''), \";\").concat(updateArr.join(''), \"){\\n\"));\n        retArr.push(bodyArr.join(''));\n        retArr.push('}\\n');\n      } else {\n        var iVariableName = this.getInternalVariableName('safeI');\n\n        if (initArr.length > 0) {\n          retArr.push(initArr.join(''), ';\\n');\n        }\n\n        retArr.push(\"for (let \".concat(iVariableName, \"=0;\").concat(iVariableName, \"<LOOP_MAX;\").concat(iVariableName, \"++){\\n\"));\n\n        if (testArr.length > 0) {\n          retArr.push(\"if (!\".concat(testArr.join(''), \") break;\\n\"));\n        }\n\n        retArr.push(bodyArr.join(''));\n        retArr.push(\"\\n\".concat(updateArr.join(''), \";\"));\n        retArr.push('}\\n');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *while* loop\n     * @param {Object} whileNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the parsed javascript string\n     */\n\n  }, {\n    key: \"astWhileStatement\",\n    value: function astWhileStatement(whileNode, retArr) {\n      if (whileNode.type !== 'WhileStatement') {\n        throw this.astErrorOutput('Invalid while statement', whileNode);\n      }\n\n      retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n      retArr.push('if (');\n      this.astGeneric(whileNode.test, retArr);\n      retArr.push(') {\\n');\n      this.astGeneric(whileNode.body, retArr);\n      retArr.push('} else {\\n');\n      retArr.push('break;\\n');\n      retArr.push('}\\n');\n      retArr.push('}\\n');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *do while* loop\n     * @param {Object} doWhileNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the parsed webgl string\n     */\n\n  }, {\n    key: \"astDoWhileStatement\",\n    value: function astDoWhileStatement(doWhileNode, retArr) {\n      if (doWhileNode.type !== 'DoWhileStatement') {\n        throw this.astErrorOutput('Invalid while statement', doWhileNode);\n      }\n\n      retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n      this.astGeneric(doWhileNode.body, retArr);\n      retArr.push('if (!');\n      this.astGeneric(doWhileNode.test, retArr);\n      retArr.push(') {\\n');\n      retArr.push('break;\\n');\n      retArr.push('}\\n');\n      retArr.push('}\\n');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Assignment* Expression\n     * @param {Object} assNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astAssignmentExpression\",\n    value: function astAssignmentExpression(assNode, retArr) {\n      var declaration = this.getDeclaration(assNode.left);\n\n      if (declaration && !declaration.assignable) {\n        throw new this.astErrorOutput(\"Variable \".concat(assNode.left.name, \" is not assignable here\"), assNode);\n      }\n\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      this.astGeneric(assNode.right, retArr);\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Block* statement\n     * @param {Object} bNode - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astBlockStatement\",\n    value: function astBlockStatement(bNode, retArr) {\n      if (this.isState('loop-body')) {\n        this.pushState('block-body'); // this prevents recursive removal of braces\n\n        for (var i = 0; i < bNode.body.length; i++) {\n          this.astGeneric(bNode.body[i], retArr);\n        }\n\n        this.popState('block-body');\n      } else {\n        retArr.push('{\\n');\n\n        for (var _i2 = 0; _i2 < bNode.body.length; _i2++) {\n          this.astGeneric(bNode.body[_i2], retArr);\n        }\n\n        retArr.push('}\\n');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Variable Declaration*\n     * @param {Object} varDecNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astVariableDeclaration\",\n    value: function astVariableDeclaration(varDecNode, retArr) {\n      if (varDecNode.kind === 'var' && this.warnVarUsage) {\n        this.varWarn();\n      }\n\n      retArr.push(\"\".concat(varDecNode.kind, \" \"));\n      var declarations = varDecNode.declarations;\n\n      for (var i = 0; i < declarations.length; i++) {\n        if (i > 0) {\n          retArr.push(',');\n        }\n\n        this.astGeneric(declarations[i], retArr);\n      }\n\n      if (!this.isState('in-for-loop-init')) {\n        retArr.push(';');\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *If* Statement\n     * @param {Object} ifNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astIfStatement\",\n    value: function astIfStatement(ifNode, retArr) {\n      retArr.push('if (');\n      this.astGeneric(ifNode.test, retArr);\n      retArr.push(')');\n\n      if (ifNode.consequent.type === 'BlockStatement') {\n        this.astGeneric(ifNode.consequent, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.consequent, retArr);\n        retArr.push('\\n}\\n');\n      }\n\n      if (ifNode.alternate) {\n        retArr.push('else ');\n\n        if (ifNode.alternate.type === 'BlockStatement') {\n          this.astGeneric(ifNode.alternate, retArr);\n        } else {\n          retArr.push(' {\\n');\n          this.astGeneric(ifNode.alternate, retArr);\n          retArr.push('\\n}\\n');\n        }\n      }\n\n      return retArr;\n    }\n  }, {\n    key: \"astSwitchStatement\",\n    value: function astSwitchStatement(ast, retArr) {\n      var discriminant = ast.discriminant,\n          cases = ast.cases;\n      retArr.push('switch (');\n      this.astGeneric(discriminant, retArr);\n      retArr.push(') {\\n');\n\n      for (var i = 0; i < cases.length; i++) {\n        if (cases[i].test === null) {\n          retArr.push('default:\\n');\n          this.astGeneric(cases[i].consequent, retArr);\n\n          if (cases[i].consequent && cases[i].consequent.length > 0) {\n            retArr.push('break;\\n');\n          }\n\n          continue;\n        }\n\n        retArr.push('case ');\n        this.astGeneric(cases[i].test, retArr);\n        retArr.push(':\\n');\n\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          this.astGeneric(cases[i].consequent, retArr);\n          retArr.push('break;\\n');\n        }\n      }\n\n      retArr.push('\\n}');\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *This* expression\n     * @param {Object} tNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astThisExpression\",\n    value: function astThisExpression(tNode, retArr) {\n      retArr.push('_this');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Member* Expression\n     * @param {Object} mNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astMemberExpression\",\n    value: function astMemberExpression(mNode, retArr) {\n      var _this$getMemberExpres = this.getMemberExpressionDetails(mNode),\n          signature = _this$getMemberExpres.signature,\n          type = _this$getMemberExpres.type,\n          property = _this$getMemberExpres.property,\n          xProperty = _this$getMemberExpres.xProperty,\n          yProperty = _this$getMemberExpres.yProperty,\n          zProperty = _this$getMemberExpres.zProperty,\n          name = _this$getMemberExpres.name,\n          origin = _this$getMemberExpres.origin;\n\n      switch (signature) {\n        case 'this.thread.value':\n          retArr.push(\"_this.thread.\".concat(name));\n          return retArr;\n\n        case 'this.output.value':\n          switch (name) {\n            case 'x':\n              retArr.push('outputX');\n              break;\n\n            case 'y':\n              retArr.push('outputY');\n              break;\n\n            case 'z':\n              retArr.push('outputZ');\n              break;\n\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n\n          return retArr;\n\n        case 'value':\n          throw this.astErrorOutput('Unexpected expression', mNode);\n\n        case 'value[]':\n        case 'value[][]':\n        case 'value[][][]':\n        case 'value.value':\n          if (origin === 'Math') {\n            retArr.push(Math[name]);\n            return retArr;\n          }\n\n          switch (property) {\n            case 'r':\n              retArr.push(\"user_\".concat(name, \"[0]\"));\n              return retArr;\n\n            case 'g':\n              retArr.push(\"user_\".concat(name, \"[1]\"));\n              return retArr;\n\n            case 'b':\n              retArr.push(\"user_\".concat(name, \"[2]\"));\n              return retArr;\n\n            case 'a':\n              retArr.push(\"user_\".concat(name, \"[3]\"));\n              return retArr;\n          }\n\n          break;\n\n        case 'this.constants.value':\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n          break;\n\n        case 'fn()[]':\n          this.astGeneric(mNode.object, retArr);\n          retArr.push('[');\n          this.astGeneric(mNode.property, retArr);\n          retArr.push(']');\n          return retArr;\n\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n      }\n\n      if (!mNode.computed) {\n        // handle simple types\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'Boolean':\n            retArr.push(\"\".concat(origin, \"_\").concat(name));\n            return retArr;\n        }\n      } // handle more complex types\n      // argument may have come from a parent\n\n\n      var synonymName = this.getKernelArgumentName(name);\n      var markupName = \"\".concat(origin, \"_\").concat(synonymName || name);\n\n      switch (type) {\n        case 'Array(2)':\n        case 'Array(3)':\n        case 'Array(4)':\n        case 'HTMLImageArray':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'HTMLImage':\n        default:\n          var size;\n          var isInput;\n\n          if (origin === 'constants') {\n            var constant = this.constants[name];\n            isInput = this.constantTypes[name] === 'Input';\n            size = isInput ? constant.size : null;\n          } else {\n            isInput = this.isInput(synonymName || name);\n            size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n          }\n\n          retArr.push(\"\".concat(markupName));\n\n          if (zProperty && yProperty) {\n            if (isInput) {\n              retArr.push('[(');\n              this.astGeneric(zProperty, retArr);\n              retArr.push(\"*\".concat(this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0], \")+(\"));\n              this.astGeneric(yProperty, retArr);\n              retArr.push(\"*\".concat(this.dynamicArguments ? 'outputX' : size[0], \")+\"));\n              this.astGeneric(xProperty, retArr);\n              retArr.push(']');\n            } else {\n              retArr.push('[');\n              this.astGeneric(zProperty, retArr);\n              retArr.push(']');\n              retArr.push('[');\n              this.astGeneric(yProperty, retArr);\n              retArr.push(']');\n              retArr.push('[');\n              this.astGeneric(xProperty, retArr);\n              retArr.push(']');\n            }\n          } else if (yProperty) {\n            if (isInput) {\n              retArr.push('[(');\n              this.astGeneric(yProperty, retArr);\n              retArr.push(\"*\".concat(this.dynamicArguments ? 'outputX' : size[0], \")+\"));\n              this.astGeneric(xProperty, retArr);\n              retArr.push(']');\n            } else {\n              retArr.push('[');\n              this.astGeneric(yProperty, retArr);\n              retArr.push(']');\n              retArr.push('[');\n              this.astGeneric(xProperty, retArr);\n              retArr.push(']');\n            }\n          } else if (typeof xProperty !== 'undefined') {\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n\n      }\n\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *call* expression\n     * @param {Object} ast - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns  {Array} the append retArr\n     */\n\n  }, {\n    key: \"astCallExpression\",\n    value: function astCallExpression(ast, retArr) {\n      if (ast.type !== 'CallExpression') {\n        // Failure, unknown expression\n        throw this.astErrorOutput('Unknown CallExpression', ast);\n      } // Get the full function call, unrolled\n\n\n      var functionName = this.astMemberExpressionUnroll(ast.callee); // Register the function into the called registry\n\n      if (this.calledFunctions.indexOf(functionName) < 0) {\n        this.calledFunctions.push(functionName);\n      }\n\n      var isMathFunction = this.isAstMathFunction(ast); // track the function was called\n\n      if (this.onFunctionCall) {\n        this.onFunctionCall(this.name, functionName, ast.arguments);\n      } // Call the function\n\n\n      retArr.push(functionName); // Open arguments space\n\n      retArr.push('(');\n      var targetTypes = this.lookupFunctionArgumentTypes(functionName) || []; // Add the arguments\n\n      for (var i = 0; i < ast.arguments.length; ++i) {\n        var argument = ast.arguments[i]; // in order to track return type, even though this is CPU\n\n        var argumentType = this.getType(argument);\n\n        if (!targetTypes[i]) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n        }\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        this.astGeneric(argument, retArr);\n      } // Close arguments space\n\n\n      retArr.push(')');\n      return retArr;\n    }\n    /**\n     * @desc Parses the abstract syntax tree for *Array* Expression\n     * @param {Object} arrNode - the AST object to parse\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n\n  }, {\n    key: \"astArrayExpression\",\n    value: function astArrayExpression(arrNode, retArr) {\n      var arrLen = arrNode.elements.length;\n      retArr.push('new Float32Array([');\n\n      for (var i = 0; i < arrLen; ++i) {\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        var subNode = arrNode.elements[i];\n        this.astGeneric(subNode, retArr);\n      }\n\n      retArr.push('])');\n      return retArr;\n    }\n  }, {\n    key: \"astDebuggerStatement\",\n    value: function astDebuggerStatement(arrNode, retArr) {\n      retArr.push('debugger;');\n      return retArr;\n    }\n  }]);\n\n  return CPUFunctionNode;\n}(FunctionNode);\n\nmodule.exports = {\n  CPUFunctionNode: CPUFunctionNode\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar getContext = require('gl');\n\nvar _require = require('../web-gl/kernel'),\n    WebGLKernel = _require.WebGLKernel;\n\nvar _require2 = require('../gl/kernel-string'),\n    glKernelString = _require2.glKernelString;\n\nvar isSupported = null;\nvar testCanvas = null;\nvar testContext = null;\nvar testExtensions = null;\nvar features = null;\n\nvar HeadlessGLKernel =\n/*#__PURE__*/\nfunction (_WebGLKernel) {\n  \"use strict\";\n\n  _inherits(HeadlessGLKernel, _WebGLKernel);\n\n  function HeadlessGLKernel() {\n    _classCallCheck(this, HeadlessGLKernel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HeadlessGLKernel).apply(this, arguments));\n  }\n\n  _createClass(HeadlessGLKernel, [{\n    key: \"initCanvas\",\n    value: function initCanvas() {\n      return {};\n    }\n  }, {\n    key: \"initContext\",\n    value: function initContext() {\n      var context = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      return context;\n    }\n  }, {\n    key: \"initExtensions\",\n    value: function initExtensions() {\n      this.extensions = {\n        STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: this.context.getExtension('OES_texture_float'),\n        OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers')\n      };\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      _get(_getPrototypeOf(HeadlessGLKernel.prototype), \"build\", this).apply(this, arguments);\n\n      if (!this.fallbackRequested) {\n        this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n      }\n    }\n  }, {\n    key: \"destroyExtensions\",\n    value: function destroyExtensions() {\n      this.extensions.STACKGL_resize_drawingbuffer = null;\n      this.extensions.STACKGL_destroy_context = null;\n      this.extensions.OES_texture_float = null;\n      this.extensions.OES_texture_float_linear = null;\n      this.extensions.OES_element_index_uint = null;\n      this.extensions.WEBGL_draw_buffers = null;\n    }\n  }, {\n    key: \"toString\",\n\n    /**\n     * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n     */\n    value: function toString() {\n      var setupContextString = \"const gl = context || require('gl')(1, 1);\\n\";\n      var destroyContextString = \"if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n\";\n      return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n    }\n  }, {\n    key: \"setOutput\",\n    value: function setOutput(output) {\n      _get(_getPrototypeOf(HeadlessGLKernel.prototype), \"setOutput\", this).call(this, output);\n\n      if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n        this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n      }\n    }\n  }], [{\n    key: \"setupFeatureChecks\",\n    value: function setupFeatureChecks() {\n      testCanvas = null;\n      testExtensions = null;\n      if (typeof getContext !== 'function') return;\n\n      try {\n        // just in case, edge cases\n        testContext = getContext(2, 2, {\n          preserveDrawingBuffer: true\n        });\n        if (!testContext || !testContext.getExtension) return;\n        testExtensions = {\n          STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n          STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n          OES_texture_float: testContext.getExtension('OES_texture_float'),\n          OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n          OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n          WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers')\n        };\n        features = this.getFeatures();\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }, {\n    key: \"isContextMatch\",\n    value: function isContextMatch(context) {\n      try {\n        return context.getParameter(context.RENDERER) === 'ANGLE';\n      } catch (e) {\n        return false;\n      }\n    }\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      var isDrawBuffers = this.getIsDrawBuffers();\n      return Object.freeze({\n        isFloatRead: this.getIsFloatRead(),\n        isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n        isTextureFloat: this.getIsTextureFloat(),\n        isDrawBuffers: isDrawBuffers,\n        kernelMap: isDrawBuffers,\n        channelCount: this.getChannelCount()\n      });\n    }\n  }, {\n    key: \"getIsTextureFloat\",\n    value: function getIsTextureFloat() {\n      return Boolean(testExtensions.OES_texture_float);\n    }\n  }, {\n    key: \"getIsDrawBuffers\",\n    value: function getIsDrawBuffers() {\n      return Boolean(testExtensions.WEBGL_draw_buffers);\n    }\n  }, {\n    key: \"getChannelCount\",\n    value: function getChannelCount() {\n      return testExtensions.WEBGL_draw_buffers ? testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) : 1;\n    }\n  }, {\n    key: \"destroyContext\",\n    value: function destroyContext(context) {\n      var extension = context.getExtension('STACKGL_destroy_context');\n\n      if (extension && extension.destroy) {\n        extension.destroy();\n      }\n    }\n  }, {\n    key: \"isSupported\",\n    get: function get() {\n      if (isSupported !== null) return isSupported;\n      this.setupFeatureChecks();\n      isSupported = testContext !== null;\n      return isSupported;\n    }\n  }, {\n    key: \"testCanvas\",\n    get: function get() {\n      return testCanvas;\n    }\n  }, {\n    key: \"testContext\",\n    get: function get() {\n      return testContext;\n    }\n  }, {\n    key: \"features\",\n    get: function get() {\n      return features;\n    }\n  }]);\n\n  return HeadlessGLKernel;\n}(WebGLKernel);\n\nmodule.exports = {\n  HeadlessGLKernel: HeadlessGLKernel\n};","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\"use strict\";\n\"use restrict\"; //Number of bits in an integer\n\nvar INT_BITS = 32; //Constants\n\nexports.INT_BITS = INT_BITS;\nexports.INT_MAX = 0x7fffffff;\nexports.INT_MIN = -1 << INT_BITS - 1; //Returns -1, 0, +1 depending on sign of x\n\nexports.sign = function (v) {\n  return (v > 0) - (v < 0);\n}; //Computes absolute value of integer\n\n\nexports.abs = function (v) {\n  var mask = v >> INT_BITS - 1;\n  return (v ^ mask) - mask;\n}; //Computes minimum of integers x and y\n\n\nexports.min = function (x, y) {\n  return y ^ (x ^ y) & -(x < y);\n}; //Computes maximum of integers x and y\n\n\nexports.max = function (x, y) {\n  return x ^ (x ^ y) & -(x < y);\n}; //Checks if a number is a power of two\n\n\nexports.isPow2 = function (v) {\n  return !(v & v - 1) && !!v;\n}; //Computes log base 2 of v\n\n\nexports.log2 = function (v) {\n  var r, shift;\n  r = (v > 0xFFFF) << 4;\n  v >>>= r;\n  shift = (v > 0xFF) << 3;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0xF) << 2;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0x3) << 1;\n  v >>>= shift;\n  r |= shift;\n  return r | v >> 1;\n}; //Computes log base 10 of v\n\n\nexports.log10 = function (v) {\n  return v >= 1000000000 ? 9 : v >= 100000000 ? 8 : v >= 10000000 ? 7 : v >= 1000000 ? 6 : v >= 100000 ? 5 : v >= 10000 ? 4 : v >= 1000 ? 3 : v >= 100 ? 2 : v >= 10 ? 1 : 0;\n}; //Counts number of bits\n\n\nexports.popCount = function (v) {\n  v = v - (v >>> 1 & 0x55555555);\n  v = (v & 0x33333333) + (v >>> 2 & 0x33333333);\n  return (v + (v >>> 4) & 0xF0F0F0F) * 0x1010101 >>> 24;\n}; //Counts number of trailing zeros\n\n\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\n\nexports.countTrailingZeros = countTrailingZeros; //Rounds to next power of 2\n\nexports.nextPow2 = function (v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}; //Rounds down to previous power of 2\n\n\nexports.prevPow2 = function (v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v >>> 1);\n}; //Computes parity of word\n\n\nexports.parity = function (v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return 0x6996 >>> v & 1;\n};\n\nvar REVERSE_TABLE = new Array(256);\n\n(function (tab) {\n  for (var i = 0; i < 256; ++i) {\n    var v = i,\n        r = i,\n        s = 7;\n\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n\n    tab[i] = r << s & 0xff;\n  }\n})(REVERSE_TABLE); //Reverse bits in a 32 bit word\n\n\nexports.reverse = function (v) {\n  return REVERSE_TABLE[v & 0xff] << 24 | REVERSE_TABLE[v >>> 8 & 0xff] << 16 | REVERSE_TABLE[v >>> 16 & 0xff] << 8 | REVERSE_TABLE[v >>> 24 & 0xff];\n}; //Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\n\n\nexports.interleave2 = function (x, y) {\n  x &= 0xFFFF;\n  x = (x | x << 8) & 0x00FF00FF;\n  x = (x | x << 4) & 0x0F0F0F0F;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y &= 0xFFFF;\n  y = (y | y << 8) & 0x00FF00FF;\n  y = (y | y << 4) & 0x0F0F0F0F;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n}; //Extracts the nth interleaved component\n\n\nexports.deinterleave2 = function (v, n) {\n  v = v >>> n & 0x55555555;\n  v = (v | v >>> 1) & 0x33333333;\n  v = (v | v >>> 2) & 0x0F0F0F0F;\n  v = (v | v >>> 4) & 0x00FF00FF;\n  v = (v | v >>> 16) & 0x000FFFF;\n  return v << 16 >> 16;\n}; //Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\n\n\nexports.interleave3 = function (x, y, z) {\n  x &= 0x3FF;\n  x = (x | x << 16) & 4278190335;\n  x = (x | x << 8) & 251719695;\n  x = (x | x << 4) & 3272356035;\n  x = (x | x << 2) & 1227133513;\n  y &= 0x3FF;\n  y = (y | y << 16) & 4278190335;\n  y = (y | y << 8) & 251719695;\n  y = (y | y << 4) & 3272356035;\n  y = (y | y << 2) & 1227133513;\n  x |= y << 1;\n  z &= 0x3FF;\n  z = (z | z << 16) & 4278190335;\n  z = (z | z << 8) & 251719695;\n  z = (z | z << 4) & 3272356035;\n  z = (z | z << 2) & 1227133513;\n  return x | z << 2;\n}; //Extracts nth interleaved component of a 3-tuple\n\n\nexports.deinterleave3 = function (v, n) {\n  v = v >>> n & 1227133513;\n  v = (v | v >>> 2) & 3272356035;\n  v = (v | v >>> 4) & 251719695;\n  v = (v | v >>> 8) & 4278190335;\n  v = (v | v >>> 16) & 0x3FF;\n  return v << 22 >> 22;\n}; //Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\n\n\nexports.nextCombination = function (v) {\n  var t = v | v - 1;\n  return t + 1 | (~t & -~t) - 1 >>> countTrailingZeros(v) + 1;\n};","module.exports = [// current\n'precision', 'highp', 'mediump', 'lowp', 'attribute', 'const', 'uniform', 'varying', 'break', 'continue', 'do', 'for', 'while', 'if', 'else', 'in', 'out', 'inout', 'float', 'int', 'uint', 'void', 'bool', 'true', 'false', 'discard', 'return', 'mat2', 'mat3', 'mat4', 'vec2', 'vec3', 'vec4', 'ivec2', 'ivec3', 'ivec4', 'bvec2', 'bvec3', 'bvec4', 'sampler1D', 'sampler2D', 'sampler3D', 'samplerCube', 'sampler1DShadow', 'sampler2DShadow', 'struct' // future\n, 'asm', 'class', 'union', 'enum', 'typedef', 'template', 'this', 'packed', 'goto', 'switch', 'default', 'inline', 'noinline', 'volatile', 'public', 'static', 'extern', 'external', 'interface', 'long', 'short', 'double', 'half', 'fixed', 'unsigned', 'input', 'output', 'hvec2', 'hvec3', 'hvec4', 'dvec2', 'dvec3', 'dvec4', 'fvec2', 'fvec3', 'fvec4', 'sampler2DRect', 'sampler3DRect', 'sampler2DRectShadow', 'sizeof', 'cast', 'namespace', 'using'];","module.exports = [// Keep this list sorted\n'abs', 'acos', 'all', 'any', 'asin', 'atan', 'ceil', 'clamp', 'cos', 'cross', 'dFdx', 'dFdy', 'degrees', 'distance', 'dot', 'equal', 'exp', 'exp2', 'faceforward', 'floor', 'fract', 'gl_BackColor', 'gl_BackLightModelProduct', 'gl_BackLightProduct', 'gl_BackMaterial', 'gl_BackSecondaryColor', 'gl_ClipPlane', 'gl_ClipVertex', 'gl_Color', 'gl_DepthRange', 'gl_DepthRangeParameters', 'gl_EyePlaneQ', 'gl_EyePlaneR', 'gl_EyePlaneS', 'gl_EyePlaneT', 'gl_Fog', 'gl_FogCoord', 'gl_FogFragCoord', 'gl_FogParameters', 'gl_FragColor', 'gl_FragCoord', 'gl_FragData', 'gl_FragDepth', 'gl_FragDepthEXT', 'gl_FrontColor', 'gl_FrontFacing', 'gl_FrontLightModelProduct', 'gl_FrontLightProduct', 'gl_FrontMaterial', 'gl_FrontSecondaryColor', 'gl_LightModel', 'gl_LightModelParameters', 'gl_LightModelProducts', 'gl_LightProducts', 'gl_LightSource', 'gl_LightSourceParameters', 'gl_MaterialParameters', 'gl_MaxClipPlanes', 'gl_MaxCombinedTextureImageUnits', 'gl_MaxDrawBuffers', 'gl_MaxFragmentUniformComponents', 'gl_MaxLights', 'gl_MaxTextureCoords', 'gl_MaxTextureImageUnits', 'gl_MaxTextureUnits', 'gl_MaxVaryingFloats', 'gl_MaxVertexAttribs', 'gl_MaxVertexTextureImageUnits', 'gl_MaxVertexUniformComponents', 'gl_ModelViewMatrix', 'gl_ModelViewMatrixInverse', 'gl_ModelViewMatrixInverseTranspose', 'gl_ModelViewMatrixTranspose', 'gl_ModelViewProjectionMatrix', 'gl_ModelViewProjectionMatrixInverse', 'gl_ModelViewProjectionMatrixInverseTranspose', 'gl_ModelViewProjectionMatrixTranspose', 'gl_MultiTexCoord0', 'gl_MultiTexCoord1', 'gl_MultiTexCoord2', 'gl_MultiTexCoord3', 'gl_MultiTexCoord4', 'gl_MultiTexCoord5', 'gl_MultiTexCoord6', 'gl_MultiTexCoord7', 'gl_Normal', 'gl_NormalMatrix', 'gl_NormalScale', 'gl_ObjectPlaneQ', 'gl_ObjectPlaneR', 'gl_ObjectPlaneS', 'gl_ObjectPlaneT', 'gl_Point', 'gl_PointCoord', 'gl_PointParameters', 'gl_PointSize', 'gl_Position', 'gl_ProjectionMatrix', 'gl_ProjectionMatrixInverse', 'gl_ProjectionMatrixInverseTranspose', 'gl_ProjectionMatrixTranspose', 'gl_SecondaryColor', 'gl_TexCoord', 'gl_TextureEnvColor', 'gl_TextureMatrix', 'gl_TextureMatrixInverse', 'gl_TextureMatrixInverseTranspose', 'gl_TextureMatrixTranspose', 'gl_Vertex', 'greaterThan', 'greaterThanEqual', 'inversesqrt', 'length', 'lessThan', 'lessThanEqual', 'log', 'log2', 'matrixCompMult', 'max', 'min', 'mix', 'mod', 'normalize', 'not', 'notEqual', 'pow', 'radians', 'reflect', 'refract', 'sign', 'sin', 'smoothstep', 'sqrt', 'step', 'tan', 'texture2D', 'texture2DLod', 'texture2DProj', 'texture2DProjLod', 'textureCube', 'textureCubeLod', 'texture2DLodEXT', 'texture2DProjLodEXT', 'textureCubeLodEXT', 'texture2DGradEXT', 'texture2DProjGradEXT', 'textureCubeGradEXT'];","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n} // path.resolve([from ...], to)\n// posix version\n\n\nexports.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  } // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n  // Normalize the path\n\n\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}; // path.normalize(path)\n// posix version\n\n\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n}; // posix version\n\n\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n}; // posix version\n\n\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    return p;\n  }).join('/'));\n}; // path.relative(from, to)\n// posix version\n\n\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47\n  /*/*/\n  ;\n  var end = -1;\n  var matchedSlash = true;\n\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n} // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\n\n\nexports.basename = function (path, ext) {\n  var f = basename(path);\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n\n  var preDotState = 0;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n\n    if (code === 46\n    /*.*/\n    ) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n  preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n\n  return path.slice(startDot, end);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n\n  return res;\n} // String.prototype.substr - negative index don't work in IE8\n\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","var _require = require('./native-gl'),\n    gl = _require.gl;\n\nvar _require2 = require('./webgl-uniform-location'),\n    WebGLUniformLocation = _require2.WebGLUniformLocation;\n\nfunction bindPublics(props, wrapper, privateInstance, privateMethods) {\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = privateInstance[prop];\n\n    if (typeof value === 'function') {\n      if (privateMethods.indexOf(prop) === -1) {\n        wrapper[prop] = value.bind(privateInstance);\n      }\n    } else {\n      if (prop[0] === '_' || prop[0] === '0' || prop[0] === '1') {\n        continue;\n      }\n\n      wrapper[prop] = value;\n    }\n  }\n}\n\nfunction checkObject(object) {\n  return typeof object === 'object' || object === void 0;\n}\n\nfunction checkUniform(program, location) {\n  return location instanceof WebGLUniformLocation && location._program === program && location._linkCount === program._linkCount;\n}\n\nfunction isTypedArray(data) {\n  return data instanceof Uint8Array || data instanceof Uint8ClampedArray || data instanceof Int8Array || data instanceof Uint16Array || data instanceof Int16Array || data instanceof Uint32Array || data instanceof Int32Array || data instanceof Float32Array || data instanceof Float64Array;\n} // Don't allow: \", $, `, @, \\, ', \\0\n\n\nfunction isValidString(str) {\n  // Remove comments first\n  var c = str.replace(/(?:\\/\\*(?:[\\s\\S]*?)\\*\\/)|(?:([\\s;])+\\/\\/(?:.*)$)/gm, '');\n  return !/[\"$`@\\\\'\\0]/.test(c);\n}\n\nfunction vertexCount(primitive, count) {\n  switch (primitive) {\n    case gl.TRIANGLES:\n      return count - count % 3;\n\n    case gl.LINES:\n      return count - count % 2;\n\n    case gl.LINE_LOOP:\n    case gl.POINTS:\n      return count;\n\n    case gl.TRIANGLE_FAN:\n    case gl.LINE_STRIP:\n      if (count < 2) {\n        return 0;\n      }\n\n      return count;\n\n    case gl.TRIANGLE_STRIP:\n      if (count < 3) {\n        return 0;\n      }\n\n      return count;\n\n    default:\n      return -1;\n  }\n}\n\nfunction typeSize(type) {\n  switch (type) {\n    case gl.UNSIGNED_BYTE:\n    case gl.BYTE:\n      return 1;\n\n    case gl.UNSIGNED_SHORT:\n    case gl.SHORT:\n      return 2;\n\n    case gl.UNSIGNED_INT:\n    case gl.INT:\n    case gl.FLOAT:\n      return 4;\n  }\n\n  return 0;\n}\n\nfunction uniformTypeSize(type) {\n  switch (type) {\n    case gl.BOOL_VEC4:\n    case gl.INT_VEC4:\n    case gl.FLOAT_VEC4:\n      return 4;\n\n    case gl.BOOL_VEC3:\n    case gl.INT_VEC3:\n    case gl.FLOAT_VEC3:\n      return 3;\n\n    case gl.BOOL_VEC2:\n    case gl.INT_VEC2:\n    case gl.FLOAT_VEC2:\n      return 2;\n\n    case gl.BOOL:\n    case gl.INT:\n    case gl.FLOAT:\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE:\n      return 1;\n\n    default:\n      return 0;\n  }\n}\n\nfunction unpackTypedArray(array) {\n  return new Uint8Array(array.buffer).subarray(array.byteOffset, array.byteLength + array.byteOffset);\n}\n\nfunction extractImageData(pixels) {\n  if (typeof pixels === 'object' && typeof pixels.width !== 'undefined' && typeof pixels.height !== 'undefined') {\n    if (typeof pixels.data !== 'undefined') {\n      return pixels;\n    }\n\n    var context = null;\n\n    if (typeof pixels.getContext === 'function') {\n      context = pixels.getContext('2d');\n    } else if (typeof pixels.src !== 'undefined' && typeof document === 'object' && typeof document.createElement === 'function') {\n      var canvas = document.createElement('canvas');\n\n      if (typeof canvas === 'object' && typeof canvas.getContext === 'function') {\n        context = canvas.getContext('2d');\n\n        if (context !== null) {\n          context.drawImage(pixels, 0, 0);\n        }\n      }\n    }\n\n    if (context !== null) {\n      return context.getImageData(0, 0, pixels.width, pixels.height);\n    }\n  }\n\n  return null;\n}\n\nfunction formatSize(internalFormat) {\n  switch (internalFormat) {\n    case gl.ALPHA:\n    case gl.LUMINANCE:\n      return 1;\n\n    case gl.LUMINANCE_ALPHA:\n      return 2;\n\n    case gl.RGB:\n      return 3;\n\n    case gl.RGBA:\n      return 4;\n  }\n\n  return 0;\n}\n\nfunction convertPixels(pixels) {\n  if (typeof pixels === 'object' && pixels !== null) {\n    if (pixels instanceof ArrayBuffer) {\n      return new Uint8Array(pixels);\n    } else if (pixels instanceof Uint8Array || pixels instanceof Uint16Array || pixels instanceof Uint8ClampedArray || pixels instanceof Float32Array) {\n      return unpackTypedArray(pixels);\n    } else if (pixels instanceof Buffer) {\n      return new Uint8Array(pixels);\n    }\n  }\n\n  return null;\n}\n\nfunction checkFormat(format) {\n  return format === gl.ALPHA || format === gl.LUMINANCE_ALPHA || format === gl.LUMINANCE || format === gl.RGB || format === gl.RGBA;\n}\n\nfunction validCubeTarget(target) {\n  return target === gl.TEXTURE_CUBE_MAP_POSITIVE_X || target === gl.TEXTURE_CUBE_MAP_NEGATIVE_X || target === gl.TEXTURE_CUBE_MAP_POSITIVE_Y || target === gl.TEXTURE_CUBE_MAP_NEGATIVE_Y || target === gl.TEXTURE_CUBE_MAP_POSITIVE_Z || target === gl.TEXTURE_CUBE_MAP_NEGATIVE_Z;\n}\n\nmodule.exports = {\n  bindPublics: bindPublics,\n  checkObject: checkObject,\n  isTypedArray: isTypedArray,\n  isValidString: isValidString,\n  vertexCount: vertexCount,\n  typeSize: typeSize,\n  uniformTypeSize: uniformTypeSize,\n  unpackTypedArray: unpackTypedArray,\n  extractImageData: extractImageData,\n  formatSize: formatSize,\n  checkFormat: checkFormat,\n  checkUniform: checkUniform,\n  convertPixels: convertPixels,\n  validCubeTarget: validCubeTarget\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar WebGLUniformLocation = function WebGLUniformLocation(_, program, info) {\n  \"use strict\";\n\n  _classCallCheck(this, WebGLUniformLocation);\n\n  this._ = _;\n  this._program = program;\n  this._linkCount = program._linkCount;\n  this._activeInfo = info;\n  this._array = null;\n};\n\nmodule.exports = {\n  WebGLUniformLocation: WebGLUniformLocation\n};","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../kernel'),\n    Kernel = _require.Kernel;\n\nvar _require2 = require('../../texture'),\n    Texture = _require2.Texture;\n\nvar _require3 = require('../../utils'),\n    utils = _require3.utils;\n\nvar _require4 = require('./texture/array-2-float'),\n    GLTextureArray2Float = _require4.GLTextureArray2Float;\n\nvar _require5 = require('./texture/array-2-float-2d'),\n    GLTextureArray2Float2D = _require5.GLTextureArray2Float2D;\n\nvar _require6 = require('./texture/array-2-float-3d'),\n    GLTextureArray2Float3D = _require6.GLTextureArray2Float3D;\n\nvar _require7 = require('./texture/array-3-float'),\n    GLTextureArray3Float = _require7.GLTextureArray3Float;\n\nvar _require8 = require('./texture/array-3-float-2d'),\n    GLTextureArray3Float2D = _require8.GLTextureArray3Float2D;\n\nvar _require9 = require('./texture/array-3-float-3d'),\n    GLTextureArray3Float3D = _require9.GLTextureArray3Float3D;\n\nvar _require10 = require('./texture/array-4-float'),\n    GLTextureArray4Float = _require10.GLTextureArray4Float;\n\nvar _require11 = require('./texture/array-4-float-2d'),\n    GLTextureArray4Float2D = _require11.GLTextureArray4Float2D;\n\nvar _require12 = require('./texture/array-4-float-3d'),\n    GLTextureArray4Float3D = _require12.GLTextureArray4Float3D;\n\nvar _require13 = require('./texture/float'),\n    GLTextureFloat = _require13.GLTextureFloat;\n\nvar _require14 = require('./texture/float-2d'),\n    GLTextureFloat2D = _require14.GLTextureFloat2D;\n\nvar _require15 = require('./texture/float-3d'),\n    GLTextureFloat3D = _require15.GLTextureFloat3D;\n\nvar _require16 = require('./texture/memory-optimized'),\n    GLTextureMemoryOptimized = _require16.GLTextureMemoryOptimized;\n\nvar _require17 = require('./texture/memory-optimized-2d'),\n    GLTextureMemoryOptimized2D = _require17.GLTextureMemoryOptimized2D;\n\nvar _require18 = require('./texture/memory-optimized-3d'),\n    GLTextureMemoryOptimized3D = _require18.GLTextureMemoryOptimized3D;\n\nvar _require19 = require('./texture/unsigned'),\n    GLTextureUnsigned = _require19.GLTextureUnsigned;\n\nvar _require20 = require('./texture/unsigned-2d'),\n    GLTextureUnsigned2D = _require20.GLTextureUnsigned2D;\n\nvar _require21 = require('./texture/unsigned-3d'),\n    GLTextureUnsigned3D = _require21.GLTextureUnsigned3D;\n\nvar _require22 = require('./texture/graphical'),\n    GLTextureGraphical = _require22.GLTextureGraphical;\n/**\n * @abstract\n * @extends Kernel\n */\n\n\nvar GLKernel =\n/*#__PURE__*/\nfunction (_Kernel) {\n  \"use strict\";\n\n  _inherits(GLKernel, _Kernel);\n\n  _createClass(GLKernel, [{\n    key: \"setFixIntegerDivisionAccuracy\",\n\n    /**\n     * @desc Fix division by factor of 3 FP accuracy bug\n     * @param {Boolean} fix - should fix\n     */\n    value: function setFixIntegerDivisionAccuracy(fix) {\n      this.fixIntegerDivisionAccuracy = fix;\n      return this;\n    }\n    /**\n     * @desc Toggle output mode\n     * @param {String} flag - 'single' or 'unsigned'\n     */\n\n  }, {\n    key: \"setPrecision\",\n    value: function setPrecision(flag) {\n      this.precision = flag;\n      return this;\n    }\n    /**\n     * @desc Toggle texture output mode\n     * @param {Boolean} flag - true to enable floatTextures\n     * @deprecated\n     */\n\n  }, {\n    key: \"setFloatTextures\",\n    value: function setFloatTextures(flag) {\n      utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n      this.floatTextures = flag;\n      return this;\n    }\n    /**\n     * A highly readable very forgiving micro-parser for a glsl function that gets argument types\n     * @param {String} source\n     * @returns {{argumentTypes: String[], argumentNames: String[]}}\n     */\n\n  }], [{\n    key: \"getIsFloatRead\",\n    value: function getIsFloatRead() {\n      var kernelString = \"function kernelFunction() {\\n      return 1;\\n    }\";\n      var kernel = new this(kernelString, {\n        context: this.testContext,\n        canvas: this.testCanvas,\n        validate: false,\n        output: [1],\n        precision: 'single',\n        returnType: 'Number',\n        tactic: 'speed'\n      });\n      kernel.build();\n      kernel.run();\n      var result = kernel.renderOutput();\n      kernel.destroy(true);\n      return result[0] === 1;\n    }\n  }, {\n    key: \"getIsIntegerDivisionAccurate\",\n    value: function getIsIntegerDivisionAccurate() {\n      function kernelFunction(v1, v2) {\n        return v1[this.thread.x] / v2[this.thread.x];\n      }\n\n      var kernel = new this(kernelFunction.toString(), {\n        context: this.testContext,\n        canvas: this.testCanvas,\n        validate: false,\n        output: [2],\n        returnType: 'Number',\n        precision: 'unsigned',\n        tactic: 'speed'\n      });\n      var args = [[6, 6030401], [3, 3991]];\n      kernel.build.apply(kernel, args);\n      kernel.run.apply(kernel, args);\n      var result = kernel.renderOutput();\n      kernel.destroy(true); // have we not got whole numbers for 6/3 or 6030401/3991\n      // add more here if others see this problem\n\n      return result[0] === 2 && result[1] === 1511;\n    }\n    /**\n     * @abstract\n     */\n\n  }, {\n    key: \"setupFeatureChecks\",\n\n    /**\n     * @abstract\n     */\n    value: function setupFeatureChecks() {\n      throw new Error(\"\\\"setupFeatureChecks\\\" not defined on \".concat(this.name));\n    }\n  }, {\n    key: \"nativeFunctionArguments\",\n    value: function nativeFunctionArguments(source) {\n      var argumentTypes = [];\n      var argumentNames = [];\n      var states = [];\n      var isStartingVariableName = /^[a-zA-Z_]/;\n      var isVariableChar = /[a-zA-Z_0-9]/;\n      var i = 0;\n      var argumentName = null;\n      var argumentType = null;\n\n      while (i < source.length) {\n        var _char = source[i];\n        var nextChar = source[i + 1];\n        var state = states.length > 0 ? states[states.length - 1] : null; // begin MULTI_LINE_COMMENT handling\n\n        if (state === 'FUNCTION_ARGUMENTS' && _char === '/' && nextChar === '*') {\n          states.push('MULTI_LINE_COMMENT');\n          i += 2;\n          continue;\n        } else if (state === 'MULTI_LINE_COMMENT' && _char === '*' && nextChar === '/') {\n          states.pop();\n          i += 2;\n          continue;\n        } // end MULTI_LINE_COMMENT handling\n        // begin COMMENT handling\n        else if (state === 'FUNCTION_ARGUMENTS' && _char === '/' && nextChar === '/') {\n            states.push('COMMENT');\n            i += 2;\n            continue;\n          } else if (state === 'COMMENT' && _char === '\\n') {\n            states.pop();\n            i++;\n            continue;\n          } // end COMMENT handling\n          // being FUNCTION_ARGUMENTS handling\n          else if (state === null && _char === '(') {\n              states.push('FUNCTION_ARGUMENTS');\n              i++;\n              continue;\n            } else if (state === 'FUNCTION_ARGUMENTS') {\n              if (_char === ')') {\n                states.pop();\n                break;\n              }\n\n              if (_char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n                states.push('DECLARE_VARIABLE');\n                argumentType = 'float';\n                argumentName = '';\n                i += 6;\n                continue;\n              } else if (_char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n                states.push('DECLARE_VARIABLE');\n                argumentType = 'int';\n                argumentName = '';\n                i += 4;\n                continue;\n              } else if (_char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n                states.push('DECLARE_VARIABLE');\n                argumentType = 'vec2';\n                argumentName = '';\n                i += 5;\n                continue;\n              } else if (_char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n                states.push('DECLARE_VARIABLE');\n                argumentType = 'vec3';\n                argumentName = '';\n                i += 5;\n                continue;\n              } else if (_char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n                states.push('DECLARE_VARIABLE');\n                argumentType = 'vec4';\n                argumentName = '';\n                i += 5;\n                continue;\n              }\n            } // end FUNCTION_ARGUMENTS handling\n            // begin DECLARE_VARIABLE handling\n            else if (state === 'DECLARE_VARIABLE') {\n                if (argumentName === '') {\n                  if (_char === ' ') {\n                    i++;\n                    continue;\n                  }\n\n                  if (!isStartingVariableName.test(_char)) {\n                    throw new Error('variable name is not expected string');\n                  }\n                }\n\n                argumentName += _char;\n\n                if (!isVariableChar.test(nextChar)) {\n                  states.pop();\n                  argumentNames.push(argumentName);\n                  argumentTypes.push(typeMap[argumentType]);\n                }\n              } // end DECLARE_VARIABLE handling\n        // Progress to next character\n\n\n        i++;\n      }\n\n      if (states.length > 0) {\n        throw new Error('GLSL function was not parsable');\n      }\n\n      return {\n        argumentNames: argumentNames,\n        argumentTypes: argumentTypes\n      };\n    }\n  }, {\n    key: \"nativeFunctionReturnType\",\n    value: function nativeFunctionReturnType(source) {\n      return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n    }\n  }, {\n    key: \"combineKernels\",\n    value: function combineKernels(combinedKernel, lastKernel) {\n      combinedKernel.apply(null, arguments);\n      var _lastKernel$texSize = lastKernel.texSize,\n          texSize = _lastKernel$texSize.texSize,\n          context = _lastKernel$texSize.context,\n          threadDim = _lastKernel$texSize.threadDim;\n      var result;\n\n      if (lastKernel.precision === 'single') {\n        var w = texSize[0];\n        var h = Math.ceil(texSize[1] / 4);\n        result = new Float32Array(w * h * 4 * 4);\n        context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n      } else {\n        var bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n        context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n        result = new Float32Array(bytes.buffer);\n      }\n\n      result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n      if (lastKernel.output.length === 1) {\n        return result;\n      } else if (lastKernel.output.length === 2) {\n        return utils.splitArray(result, lastKernel.output[0]);\n      } else if (lastKernel.output.length === 3) {\n        var cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n        return cube.map(function (x) {\n          return utils.splitArray(x, lastKernel.output[0]);\n        });\n      }\n    }\n  }, {\n    key: \"mode\",\n    get: function get() {\n      return 'gpu';\n    }\n  }, {\n    key: \"testCanvas\",\n    get: function get() {\n      throw new Error(\"\\\"testCanvas\\\" not defined on \".concat(this.name));\n    }\n    /**\n     * @abstract\n     */\n\n  }, {\n    key: \"testContext\",\n    get: function get() {\n      throw new Error(\"\\\"testContext\\\" not defined on \".concat(this.name));\n    }\n    /**\n     * @type {IKernelFeatures}\n     */\n\n  }, {\n    key: \"features\",\n    get: function get() {\n      throw new Error(\"\\\"features\\\" not defined on \".concat(this.name));\n    }\n  }]);\n\n  function GLKernel(source, settings) {\n    var _this;\n\n    _classCallCheck(this, GLKernel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLKernel).call(this, source, settings));\n    _this.transferValues = null;\n    _this.formatValues = null;\n    _this.TextureConstructor = null;\n    _this.renderOutput = null;\n    _this.renderRawOutput = null;\n    _this.texSize = null;\n    _this.translatedSource = null;\n    _this.renderStrategy = null;\n    _this.compiledFragmentShader = null;\n    _this.compiledVertexShader = null;\n    return _this;\n  }\n\n  _createClass(GLKernel, [{\n    key: \"translateSource\",\n    value: function translateSource() {\n      throw new Error(\"\\\"translateSource\\\" not defined on \".concat(this.constructor.name));\n    }\n    /**\n     * Picks a render strategy for the now finally parsed kernel\n     * @param args\n     * @return {null|KernelOutput}\n     */\n\n  }, {\n    key: \"pickRenderStrategy\",\n    value: function pickRenderStrategy(args) {\n      if (this.graphical) {\n        this.renderRawOutput = this.readPackedPixelsToUint8Array;\n\n        this.transferValues = function (pixels) {\n          return pixels;\n        };\n\n        this.TextureConstructor = GLTextureGraphical;\n        return null;\n      }\n\n      if (this.precision === 'unsigned') {\n        this.renderRawOutput = this.readPackedPixelsToUint8Array;\n        this.transferValues = this.readPackedPixelsToFloat32Array;\n\n        if (this.pipeline) {\n          this.renderOutput = this.renderTexture;\n\n          if (this.subKernels !== null) {\n            this.renderKernels = this.renderKernelsToTextures;\n          }\n\n          switch (this.returnType) {\n            case 'LiteralInteger':\n            case 'Float':\n            case 'Number':\n            case 'Integer':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureUnsigned3D;\n                this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureUnsigned2D;\n                this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureUnsigned;\n                this.renderStrategy = renderStrategy.PackedPixelToFloat;\n                return null;\n              }\n\n              break;\n\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n          }\n        } else {\n          if (this.subKernels !== null) {\n            this.renderKernels = this.renderKernelsToArrays;\n          }\n\n          switch (this.returnType) {\n            case 'LiteralInteger':\n            case 'Float':\n            case 'Number':\n            case 'Integer':\n              this.renderOutput = this.renderValues;\n\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureUnsigned3D;\n                this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\n                this.formatValues = utils.erect3DPackedFloat;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureUnsigned2D;\n                this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\n                this.formatValues = utils.erect2DPackedFloat;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureUnsigned;\n                this.renderStrategy = renderStrategy.PackedPixelToFloat;\n                this.formatValues = utils.erectPackedFloat;\n                return null;\n              }\n\n              break;\n\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n          }\n        }\n      } else if (this.precision === 'single') {\n        this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n        this.transferValues = this.readFloatPixelsToFloat32Array;\n\n        if (this.pipeline) {\n          this.renderStrategy = renderStrategy.FloatTexture;\n          this.renderOutput = this.renderTexture;\n\n          if (this.subKernels !== null) {\n            this.renderKernels = this.renderKernelsToTextures;\n          }\n\n          switch (this.returnType) {\n            case 'LiteralInteger':\n            case 'Float':\n            case 'Number':\n            case 'Integer':\n              if (this.optimizeFloatMemory) {\n                if (this.output[2] > 0) {\n                  this.TextureConstructor = GLTextureMemoryOptimized3D;\n                  return null;\n                } else if (this.output[1] > 0) {\n                  this.TextureConstructor = GLTextureMemoryOptimized2D;\n                  return null;\n                } else {\n                  this.TextureConstructor = GLTextureMemoryOptimized;\n                  return null;\n                }\n              } else {\n                if (this.output[2] > 0) {\n                  this.TextureConstructor = GLTextureFloat3D;\n                  return null;\n                } else if (this.output[1] > 0) {\n                  this.TextureConstructor = GLTextureFloat2D;\n                  return null;\n                } else {\n                  this.TextureConstructor = GLTextureFloat;\n                  return null;\n                }\n              }\n\n              break;\n\n            case 'Array(2)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray2Float3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray2Float2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray2Float;\n                return null;\n              }\n\n              break;\n\n            case 'Array(3)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray3Float3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray3Float2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray3Float;\n                return null;\n              }\n\n              break;\n\n            case 'Array(4)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray4Float3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray4Float2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray4Float;\n                return null;\n              }\n\n          }\n        }\n\n        this.renderOutput = this.renderValues;\n\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n\n        if (this.optimizeFloatMemory) {\n          switch (this.returnType) {\n            case 'LiteralInteger':\n            case 'Float':\n            case 'Number':\n            case 'Integer':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized3DFloat;\n                this.formatValues = utils.erectMemoryOptimized3DFloat;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized2DFloat;\n                this.formatValues = utils.erectMemoryOptimized2DFloat;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimizedFloat;\n                this.formatValues = utils.erectMemoryOptimizedFloat;\n                return null;\n              }\n\n              break;\n\n            case 'Array(2)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray2Float3D;\n                this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\n                this.formatValues = utils.erect3DArray2;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray2Float2D;\n                this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\n                this.formatValues = utils.erect2DArray2;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray2Float;\n                this.renderStrategy = renderStrategy.FloatPixelToArray2;\n                this.formatValues = utils.erectArray2;\n                return null;\n              }\n\n              break;\n\n            case 'Array(3)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray3Float3D;\n                this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\n                this.formatValues = utils.erect3DArray3;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray3Float2D;\n                this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\n                this.formatValues = utils.erect2DArray3;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray3Float;\n                this.renderStrategy = renderStrategy.FloatPixelToArray3;\n                this.formatValues = utils.erectArray3;\n                return null;\n              }\n\n              break;\n\n            case 'Array(4)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray4Float3D;\n                this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\n                this.formatValues = utils.erect3DArray4;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray4Float2D;\n                this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\n                this.formatValues = utils.erect2DArray4;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray4Float;\n                this.renderStrategy = renderStrategy.FloatPixelToArray4;\n                this.formatValues = utils.erectArray4;\n                return null;\n              }\n\n          }\n        } else {\n          switch (this.returnType) {\n            case 'LiteralInteger':\n            case 'Float':\n            case 'Number':\n            case 'Integer':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                this.renderStrategy = renderStrategy.FloatPixelTo3DFloat;\n                this.formatValues = utils.erect3DFloat;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                this.renderStrategy = renderStrategy.FloatPixelTo2DFloat;\n                this.formatValues = utils.erect2DFloat;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                this.renderStrategy = renderStrategy.FloatPixelToFloat;\n                this.formatValues = utils.erectFloat;\n                return null;\n              }\n\n              break;\n\n            case 'Array(2)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray2Float3D;\n                this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\n                this.formatValues = utils.erect3DArray2;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray2Float2D;\n                this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\n                this.formatValues = utils.erect2DArray2;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray2Float;\n                this.renderStrategy = renderStrategy.FloatPixelToArray2;\n                this.formatValues = utils.erectArray2;\n                return null;\n              }\n\n              break;\n\n            case 'Array(3)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray3Float3D;\n                this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\n                this.formatValues = utils.erect3DArray3;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray3Float2D;\n                this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\n                this.formatValues = utils.erect2DArray3;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray3Float;\n                this.renderStrategy = renderStrategy.FloatPixelToArray3;\n                this.formatValues = utils.erectArray3;\n                return null;\n              }\n\n              break;\n\n            case 'Array(4)':\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureArray4Float3D;\n                this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\n                this.formatValues = utils.erect3DArray4;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureArray4Float2D;\n                this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\n                this.formatValues = utils.erect2DArray4;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureArray4Float;\n                this.renderStrategy = renderStrategy.FloatPixelToArray4;\n                this.formatValues = utils.erectArray4;\n                return null;\n              }\n\n          }\n        }\n      } else {\n        throw new Error(\"unhandled precision of \\\"\".concat(this.precision, \"\\\"\"));\n      }\n\n      throw new Error(\"unhandled return type \\\"\".concat(this.returnType, \"\\\"\"));\n    }\n    /**\n     * @abstract\n     * @returns String\n     */\n\n  }, {\n    key: \"getKernelString\",\n    value: function getKernelString() {\n      throw new Error(\"abstract method call\");\n    }\n  }, {\n    key: \"getMainResultTexture\",\n    value: function getMainResultTexture() {\n      switch (this.returnType) {\n        case 'LiteralInteger':\n        case 'Float':\n        case 'Integer':\n        case 'Number':\n          return this.getMainResultNumberTexture();\n\n        case 'Array(2)':\n          return this.getMainResultArray2Texture();\n\n        case 'Array(3)':\n          return this.getMainResultArray3Texture();\n\n        case 'Array(4)':\n          return this.getMainResultArray4Texture();\n\n        default:\n          throw new Error(\"unhandled returnType type \".concat(this.returnType));\n      }\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultKernelNumberTexture\",\n    value: function getMainResultKernelNumberTexture() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultSubKernelNumberTexture\",\n    value: function getMainResultSubKernelNumberTexture() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultKernelArray2Texture\",\n    value: function getMainResultKernelArray2Texture() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultSubKernelArray2Texture\",\n    value: function getMainResultSubKernelArray2Texture() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultKernelArray3Texture\",\n    value: function getMainResultKernelArray3Texture() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultSubKernelArray3Texture\",\n    value: function getMainResultSubKernelArray3Texture() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultKernelArray4Texture\",\n    value: function getMainResultKernelArray4Texture() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultSubKernelArray4Texture\",\n    value: function getMainResultSubKernelArray4Texture() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultGraphical\",\n    value: function getMainResultGraphical() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultMemoryOptimizedFloats\",\n    value: function getMainResultMemoryOptimizedFloats() {\n      throw new Error(\"abstract method call\");\n    }\n    /**\n     * @abstract\n     * @returns String[]\n     */\n\n  }, {\n    key: \"getMainResultPackedPixels\",\n    value: function getMainResultPackedPixels() {\n      throw new Error(\"abstract method call\");\n    }\n  }, {\n    key: \"getMainResultString\",\n    value: function getMainResultString() {\n      if (this.graphical) {\n        return this.getMainResultGraphical();\n      } else if (this.precision === 'single') {\n        if (this.optimizeFloatMemory) {\n          return this.getMainResultMemoryOptimizedFloats();\n        }\n\n        return this.getMainResultTexture();\n      } else {\n        return this.getMainResultPackedPixels();\n      }\n    }\n  }, {\n    key: \"getMainResultNumberTexture\",\n    value: function getMainResultNumberTexture() {\n      return utils.linesToString(this.getMainResultKernelNumberTexture()) + utils.linesToString(this.getMainResultSubKernelNumberTexture());\n    }\n  }, {\n    key: \"getMainResultArray2Texture\",\n    value: function getMainResultArray2Texture() {\n      return utils.linesToString(this.getMainResultKernelArray2Texture()) + utils.linesToString(this.getMainResultSubKernelArray2Texture());\n    }\n  }, {\n    key: \"getMainResultArray3Texture\",\n    value: function getMainResultArray3Texture() {\n      return utils.linesToString(this.getMainResultKernelArray3Texture()) + utils.linesToString(this.getMainResultSubKernelArray3Texture());\n    }\n  }, {\n    key: \"getMainResultArray4Texture\",\n    value: function getMainResultArray4Texture() {\n      return utils.linesToString(this.getMainResultKernelArray4Texture()) + utils.linesToString(this.getMainResultSubKernelArray4Texture());\n    }\n    /**\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getFloatTacticDeclaration\",\n    value: function getFloatTacticDeclaration() {\n      switch (this.tactic) {\n        case 'speed':\n          return 'precision lowp float;\\n';\n\n        case 'performance':\n          return 'precision highp float;\\n';\n\n        case 'balanced':\n        default:\n          return 'precision mediump float;\\n';\n      }\n    }\n    /**\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getIntTacticDeclaration\",\n    value: function getIntTacticDeclaration() {\n      switch (this.tactic) {\n        case 'speed':\n          return 'precision lowp int;\\n';\n\n        case 'performance':\n          return 'precision highp int;\\n';\n\n        case 'balanced':\n        default:\n          return 'precision mediump int;\\n';\n      }\n    }\n    /**\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getSampler2DTacticDeclaration\",\n    value: function getSampler2DTacticDeclaration() {\n      switch (this.tactic) {\n        case 'speed':\n          return 'precision lowp sampler2D;\\n';\n\n        case 'performance':\n          return 'precision highp sampler2D;\\n';\n\n        case 'balanced':\n        default:\n          return 'precision mediump sampler2D;\\n';\n      }\n    }\n  }, {\n    key: \"getSampler2DArrayTacticDeclaration\",\n    value: function getSampler2DArrayTacticDeclaration() {\n      switch (this.tactic) {\n        case 'speed':\n          return 'precision lowp sampler2DArray;\\n';\n\n        case 'performance':\n          return 'precision highp sampler2DArray;\\n';\n\n        case 'balanced':\n        default:\n          return 'precision mediump sampler2DArray;\\n';\n      }\n    }\n  }, {\n    key: \"renderTexture\",\n    value: function renderTexture() {\n      return new this.TextureConstructor({\n        texture: this.outputTexture,\n        size: this.texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context\n      });\n    }\n  }, {\n    key: \"readPackedPixelsToUint8Array\",\n    value: function readPackedPixelsToUint8Array() {\n      if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n      var texSize = this.texSize,\n          gl = this.context;\n      var result = new Uint8Array(texSize[0] * texSize[1] * 4);\n      gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n      return result;\n    }\n  }, {\n    key: \"readPackedPixelsToFloat32Array\",\n    value: function readPackedPixelsToFloat32Array() {\n      return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n    }\n  }, {\n    key: \"readFloatPixelsToFloat32Array\",\n    value: function readFloatPixelsToFloat32Array() {\n      if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n      var texSize = this.texSize,\n          gl = this.context;\n      var w = texSize[0];\n      var h = texSize[1];\n      var result = new Float32Array(w * h * 4);\n      gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n      return result;\n    }\n  }, {\n    key: \"readMemoryOptimizedFloatPixelsToFloat32Array\",\n    value: function readMemoryOptimizedFloatPixelsToFloat32Array() {\n      if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n      var texSize = this.texSize,\n          gl = this.context;\n      var w = texSize[0];\n      var h = texSize[1];\n      var result = new Float32Array(w * h * 4);\n      gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n      return result;\n    }\n    /**\n     *\n     * @param {Boolean} [flip]\n     * @return {Uint8Array}\n     */\n\n  }, {\n    key: \"getPixels\",\n    value: function getPixels(flip) {\n      var gl = this.context,\n          output = this.output;\n\n      var _output = _slicedToArray(output, 2),\n          width = _output[0],\n          height = _output[1];\n\n      var pixels = new Uint8Array(width * height * 4);\n      gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels); // flipped by default, so invert\n\n      return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n    }\n  }, {\n    key: \"renderKernelsToArrays\",\n    value: function renderKernelsToArrays() {\n      var result = {\n        result: this.renderOutput()\n      };\n\n      for (var i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = new this.TextureConstructor({\n          texture: this.subKernelOutputTextures[i],\n          size: this.texSize,\n          dimensions: this.threadDim,\n          output: this.output,\n          context: this.context\n        }).toArray();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"renderKernelsToTextures\",\n    value: function renderKernelsToTextures() {\n      var result = {\n        result: this.renderOutput()\n      };\n\n      for (var i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = new this.TextureConstructor({\n          texture: this.subKernelOutputTextures[i],\n          size: this.texSize,\n          dimensions: this.threadDim,\n          output: this.output,\n          context: this.context\n        });\n      }\n\n      return result;\n    }\n  }, {\n    key: \"setOutput\",\n    value: function setOutput(output) {\n      _get(_getPrototypeOf(GLKernel.prototype), \"setOutput\", this).call(this, output);\n\n      if (this.program) {\n        this.threadDim = [this.output[0], this.output[1] || 1, this.output[2] || 1];\n        this.texSize = utils.getKernelTextureSize({\n          optimizeFloatMemory: this.optimizeFloatMemory,\n          precision: this.precision\n        }, this.output);\n        var gl = this.context;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        this.updateMaxTexSize();\n        this.framebuffer.width = this.texSize[0];\n        this.framebuffer.height = this.texSize[1];\n        this.context.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n        this.canvas.width = this.maxTexSize[0];\n        this.canvas.height = this.maxTexSize[1];\n\n        this._setupOutputTexture();\n\n        if (this.subKernels && this.subKernels.length > 0) {\n          this._setupSubOutputTextures();\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"renderValues\",\n    value: function renderValues() {\n      return this.formatValues(this.transferValues(), this.output[0], this.output[1], this.output[2]);\n    }\n  }]);\n\n  return GLKernel;\n}(Kernel);\n\nvar renderStrategy = Object.freeze({\n  PackedPixelToUint8Array: Symbol('PackedPixelToUint8Array'),\n  PackedPixelToFloat: Symbol('PackedPixelToFloat'),\n  PackedPixelTo2DFloat: Symbol('PackedPixelTo2DFloat'),\n  PackedPixelTo3DFloat: Symbol('PackedPixelTo3DFloat'),\n  PackedTexture: Symbol('PackedTexture'),\n  FloatPixelToFloat32Array: Symbol('FloatPixelToFloat32Array'),\n  FloatPixelToFloat: Symbol('FloatPixelToFloat'),\n  FloatPixelTo2DFloat: Symbol('FloatPixelTo2DFloat'),\n  FloatPixelTo3DFloat: Symbol('FloatPixelTo3DFloat'),\n  FloatPixelToArray2: Symbol('FloatPixelToArray2'),\n  FloatPixelTo2DArray2: Symbol('FloatPixelTo2DArray2'),\n  FloatPixelTo3DArray2: Symbol('FloatPixelTo3DArray2'),\n  FloatPixelToArray3: Symbol('FloatPixelToArray3'),\n  FloatPixelTo2DArray3: Symbol('FloatPixelTo2DArray3'),\n  FloatPixelTo3DArray3: Symbol('FloatPixelTo3DArray3'),\n  FloatPixelToArray4: Symbol('FloatPixelToArray4'),\n  FloatPixelTo2DArray4: Symbol('FloatPixelTo2DArray4'),\n  FloatPixelTo3DArray4: Symbol('FloatPixelTo3DArray4'),\n  FloatTexture: Symbol('FloatTexture'),\n  MemoryOptimizedFloatPixelToMemoryOptimizedFloat: Symbol('MemoryOptimizedFloatPixelToFloat'),\n  MemoryOptimizedFloatPixelToMemoryOptimized2DFloat: Symbol('MemoryOptimizedFloatPixelTo2DFloat'),\n  MemoryOptimizedFloatPixelToMemoryOptimized3DFloat: Symbol('MemoryOptimizedFloatPixelTo3DFloat')\n});\nvar typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)'\n};\nmodule.exports = {\n  GLKernel: GLKernel,\n  renderStrategy: renderStrategy\n};","var _require = require('gl-wiretap'),\n    glWiretap = _require.glWiretap;\n\nvar _require2 = require('../../utils'),\n    utils = _require2.utils;\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString().replace('=>', '').replace(/^function /, '').replace(/utils[.]/g, '/*utils.*/');\n}\n/**\n *\n * @param {Kernel} Kernel\n * @param {KernelVariable[]} args\n * @param {Kernel} originKernel\n * @param {string} [setupContextString]\n * @param {string} [destroyContextString]\n * @returns {string}\n */\n\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  var postResult = [];\n  var context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: function onReadPixels(targetName) {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(\"    const result = { result: \".concat(getRenderString(targetName, kernel), \" };\"));\n          subKernelsResultVariableSetup = true;\n        } else {\n          var property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(\"    result\".concat(isNaN(property) ? '.' + property : \"[\".concat(property, \"]\"), \" = \").concat(getRenderString(targetName, kernel), \";\"));\n        }\n\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n\n        return;\n      }\n\n      if (targetName) {\n        postResult.push(\"    return \".concat(getRenderString(targetName, kernel), \";\"));\n      } else {\n        postResult.push(\"    return null;\");\n      }\n    },\n    onUnrecognizedArgumentLookup: function onUnrecognizedArgumentLookup(argument) {\n      for (var i = 0; i < kernel.kernelConstants.length; i++) {\n        var value = kernel.kernelConstants[i];\n\n        if (value.type === 'HTMLImageArray') {\n          var constant = kernel.constants[value.name];\n          var variable = \"uploadValue_\".concat(value.name, \"[\").concat(constant.indexOf(value.uploadValue), \"]\");\n          context.insertVariable(variable, kernel.constants);\n          return variable;\n        } else if (value.uploadValue === argument) {\n          var _variable = \"uploadValue_\".concat(value.name);\n\n          context.insertVariable(_variable, value);\n          return _variable;\n        }\n      }\n    }\n  });\n  var subKernelsResultVariableSetup = false;\n  var subKernelsResultIndex = 0;\n  var source = originKernel.source,\n      canvas = originKernel.canvas,\n      output = originKernel.output,\n      pipeline = originKernel.pipeline,\n      graphical = originKernel.graphical,\n      loopMaxIterations = originKernel.loopMaxIterations,\n      constants = originKernel.constants,\n      optimizeFloatMemory = originKernel.optimizeFloatMemory,\n      precision = originKernel.precision,\n      fixIntegerDivisionAccuracy = originKernel.fixIntegerDivisionAccuracy,\n      functions = originKernel.functions,\n      nativeFunctions = originKernel.nativeFunctions,\n      subKernels = originKernel.subKernels,\n      immutable = originKernel.immutable,\n      argumentTypes = originKernel.argumentTypes,\n      constantTypes = originKernel.constantTypes,\n      kernelArguments = originKernel.kernelArguments,\n      kernelConstants = originKernel.kernelConstants;\n  var kernel = new Kernel(source, {\n    canvas: canvas,\n    context: context,\n    checkContext: false,\n    output: output,\n    pipeline: pipeline,\n    graphical: graphical,\n    loopMaxIterations: loopMaxIterations,\n    constants: constants,\n    optimizeFloatMemory: optimizeFloatMemory,\n    precision: precision,\n    fixIntegerDivisionAccuracy: fixIntegerDivisionAccuracy,\n    functions: functions,\n    nativeFunctions: nativeFunctions,\n    subKernels: subKernels,\n    immutable: immutable,\n    argumentTypes: argumentTypes,\n    constantTypes: constantTypes\n  });\n  var result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n  var upgradedArguments = Array.from(args).map(function (arg) {\n    switch (typeof arg) {\n      case 'number':\n      case 'boolean':\n        return new arg.constructor(arg);\n    }\n\n    return arg;\n  });\n  kernel.kernelArguments.forEach(function (kernelArgument, i) {\n    switch (kernelArgument.type) {\n      // primitives\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n        context.insertVariable(\"uploadValue_\".concat(kernelArgument.name), upgradedArguments[i]);\n        break;\n      // non-primitives\n\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        context.insertVariable(\"uploadValue_\".concat(kernelArgument.name), upgradedArguments[i]);\n        break;\n\n      case 'HTMLImage':\n        context.insertVariable(\"uploadValue_\".concat(kernelArgument.name), upgradedArguments[i]);\n        break;\n\n      case 'HTMLImageArray':\n        for (var imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          var arg = args[i];\n          context.insertVariable(\"uploadValue_\".concat(kernelArgument.name, \"[\").concat(imageIndex, \"]\"), arg[imageIndex]);\n        }\n\n        break;\n\n      case 'Input':\n        context.insertVariable(\"uploadValue_\".concat(kernelArgument.name), kernelArgument.uploadValue);\n        break;\n\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(\"uploadValue_\".concat(kernelArgument.name), upgradedArguments[i].texture);\n        break;\n\n      default:\n        throw new Error(\"unhandled kernelArgumentType insertion for glWiretap of type \".concat(kernelArgument.type));\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(\"function \".concat(toStringWithoutUtils(utils.flattenTo)));\n  result.push(\"function \".concat(toStringWithoutUtils(utils.flatten2dArrayTo)));\n  result.push(\"function \".concat(toStringWithoutUtils(utils.flatten3dArrayTo)));\n  result.push(\"function \".concat(toStringWithoutUtils(utils.isArray)));\n\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\"  const renderOutput = function \".concat(toStringWithoutUtils(kernel.formatValues), \";\"));\n  }\n\n  result.push('/** end of injected functions **/');\n  result.push(\"  const innerKernel = function (\".concat(kernel.kernelArguments.map(function (kernelArgument) {\n    return kernelArgument.varName;\n  }).join(', '), \") {\"));\n  context.setIndent(4);\n  kernel.run.apply(kernel, upgradedArguments);\n\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n\n  result.push('/** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(function (kernelArgument) {\n    result.push(kernelArgument.getStringValueHandler());\n  });\n  result.push('/** end setup uploads for kernel values **/');\n  result.push(context.toString());\n\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    var results = kernel.renderKernels();\n    var textureName = context.getContextVariableName(kernel.outputTexture);\n    result.push(\"    return {\\n      result: {\\n        texture: \".concat(textureName, \",\\n        type: '\").concat(results.result.type, \"',\\n        toArray: \").concat(getToArrayString(results.result, textureName), \"\\n      },\"));\n    var _subKernels = kernel.subKernels,\n        subKernelOutputTextures = kernel.subKernelOutputTextures;\n\n    for (var i = 0; i < _subKernels.length; i++) {\n      var texture = subKernelOutputTextures[i];\n      var subKernel = _subKernels[i];\n      var subKernelResult = results[subKernel.property];\n      var subKernelTextureName = context.getContextVariableName(texture);\n      result.push(\"\\n      \".concat(subKernel.property, \": {\\n        texture: \").concat(subKernelTextureName, \",\\n        type: '\").concat(subKernelResult.type, \"',\\n        toArray: \").concat(getToArrayString(subKernelResult, subKernelTextureName), \"\\n      },\"));\n    }\n\n    result.push(\"    };\");\n  }\n\n  result.push(\"    \".concat(destroyContextString ? '\\n' + destroyContextString + '    ' : ''));\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(\"innerKernel.getPixels = getPixels;\");\n  }\n\n  result.push('  return innerKernel;');\n  var constantsUpload = [];\n  kernelConstants.forEach(function (kernelConstant) {\n    constantsUpload.push(\"\".concat(kernelConstant.getStringValueHandler()));\n  });\n  return \"function kernel(settings) {\\n  const { context, constants } = settings;\\n  \".concat(constantsUpload.join(''), \"\\n  \").concat(setupContextString ? setupContextString : '', \"\\n\").concat(result.join('\\n'), \"\\n}\");\n}\n\nfunction getRenderString(targetName, kernel) {\n  var readBackValue = kernel.precision === 'single' ? targetName : \"new Float32Array(\".concat(targetName, \".buffer)\");\n\n  if (kernel.output[2]) {\n    return \"renderOutput(\".concat(readBackValue, \", \").concat(kernel.output[0], \", \").concat(kernel.output[1], \", \").concat(kernel.output[2], \")\");\n  }\n\n  if (kernel.output[1]) {\n    return \"renderOutput(\".concat(readBackValue, \", \").concat(kernel.output[0], \", \").concat(kernel.output[1], \")\");\n  }\n\n  return \"renderOutput(\".concat(readBackValue, \", \").concat(kernel.output[0], \")\");\n}\n\nfunction getGetPixelsString(kernel) {\n  var getPixels = kernel.getPixels.toString();\n  var useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(\"\".concat(useFunctionKeyword ? 'function ' : '').concat(getPixels), {\n    findDependency: function findDependency(object, name) {\n      if (object === 'utils') {\n        return \"const \".concat(name, \" = \").concat(utils[name].toString(), \";\");\n      }\n\n      return null;\n    },\n    thisLookup: function thisLookup(property) {\n      if (property === 'context') {\n        return null;\n      }\n\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n\n      throw new Error(\"unhandled thisLookup \".concat(property));\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName) {\n  var toArray = kernelResult.toArray.toString();\n  var useFunctionKeyword = !/^function/.test(toArray);\n  var flattenedFunctions = utils.flattenFunctionToString(\"\".concat(useFunctionKeyword ? 'function ' : '').concat(toArray), {\n    findDependency: function findDependency(object, name) {\n      if (object === 'utils') {\n        return \"const \".concat(name, \" = \").concat(utils[name].toString(), \";\");\n      } else if (object === 'this') {\n        return \"\".concat(useFunctionKeyword ? 'function ' : '').concat(kernelResult[name].toString());\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: function thisLookup(property) {\n      if (property === 'texture') {\n        return textureName;\n      }\n\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n\n      throw new Error(\"unhandled thisLookup \".concat(property));\n    }\n  });\n  return \"() => {\\n  \".concat(flattenedFunctions, \"\\n  return toArray();\\n  }\");\n}\n\nmodule.exports = {\n  glKernelString: glKernelString\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueBoolean =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueBoolean, _WebGLKernelValue);\n\n  function WebGLKernelValueBoolean(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueBoolean);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueBoolean).call(this, value, settings));\n    _this.uploadValue = value;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueBoolean, [{\n    key: \"getSource\",\n    value: function getSource(value) {\n      if (this.origin === 'constants') {\n        return \"const bool \".concat(this.id, \" = \").concat(value, \";\\n\");\n      }\n\n      return \"uniform bool \".concat(this.id, \";\\n\");\n    }\n  }, {\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \";\\n\");\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.origin === 'constants') return;\n      this.kernel.setUniform1i(this.id, this.uploadValue = value);\n    }\n  }]);\n\n  return WebGLKernelValueBoolean;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueBoolean: WebGLKernelValueBoolean\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueFloat =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueFloat, _WebGLKernelValue);\n\n  function WebGLKernelValueFloat(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueFloat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueFloat).call(this, value, settings));\n    _this.uploadValue = value;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueFloat, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \";\\n\");\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource(value) {\n      if (this.origin === 'constants') {\n        if (Number.isInteger(value)) {\n          return \"const float \".concat(this.id, \" = \").concat(value, \".0;\\n\");\n        }\n\n        return \"const float \".concat(this.id, \" = \").concat(value, \";\\n\");\n      }\n\n      return \"uniform float \".concat(this.id, \";\\n\");\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.origin === 'constants') return;\n      this.kernel.setUniform1f(this.id, this.uploadValue = value);\n    }\n  }]);\n\n  return WebGLKernelValueFloat;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueFloat: WebGLKernelValueFloat\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueInteger =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueInteger, _WebGLKernelValue);\n\n  function WebGLKernelValueInteger(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueInteger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueInteger).call(this, value, settings));\n    _this.uploadValue = value;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueInteger, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \";\\n\");\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource(value) {\n      if (this.origin === 'constants') {\n        return \"const int \".concat(this.id, \" = \").concat(parseInt(value), \";\\n\");\n      }\n\n      return \"uniform int \".concat(this.id, \";\\n\");\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.origin === 'constants') return;\n      this.kernel.setUniform1i(this.id, this.uploadValue = value);\n    }\n  }]);\n\n  return WebGLKernelValueInteger;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueInteger: WebGLKernelValueInteger\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./html-image'),\n    WebGLKernelValueHTMLImage = _require2.WebGLKernelValueHTMLImage;\n\nvar WebGLKernelValueDynamicHTMLImage =\n/*#__PURE__*/\nfunction (_WebGLKernelValueHTML) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicHTMLImage, _WebGLKernelValueHTML);\n\n  function WebGLKernelValueDynamicHTMLImage() {\n    _classCallCheck(this, WebGLKernelValueDynamicHTMLImage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicHTMLImage).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicHTMLImage, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      var width = value.width,\n          height = value.height;\n      this.dimensions = [width, height, 1];\n      this.textureSize = [width, height];\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicHTMLImage.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicHTMLImage;\n}(WebGLKernelValueHTMLImage);\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage: WebGLKernelValueDynamicHTMLImage\n};","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./unsigned-input'),\n    WebGLKernelValueUnsignedInput = _require2.WebGLKernelValueUnsignedInput;\n\nvar WebGLKernelValueDynamicUnsignedInput =\n/*#__PURE__*/\nfunction (_WebGLKernelValueUnsi) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicUnsignedInput, _WebGLKernelValueUnsi);\n\n  function WebGLKernelValueDynamicUnsignedInput() {\n    _classCallCheck(this, WebGLKernelValueDynamicUnsignedInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicUnsignedInput).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicUnsignedInput, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      var _value$size = _slicedToArray(value.size, 3),\n          w = _value$size[0],\n          h = _value$size[1],\n          d = _value$size[2];\n\n      this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n      this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n      var Type = this.getTransferArrayType(value.value);\n      this.preUploadValue = new Type(this.uploadArrayLength);\n      this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicUnsignedInput.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicUnsignedInput;\n}(WebGLKernelValueUnsignedInput);\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput: WebGLKernelValueDynamicUnsignedInput\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./memory-optimized-number-texture'),\n    WebGLKernelValueMemoryOptimizedNumberTexture = _require2.WebGLKernelValueMemoryOptimizedNumberTexture;\n\nvar WebGLKernelValueDynamicMemoryOptimizedNumberTexture =\n/*#__PURE__*/\nfunction (_WebGLKernelValueMemo) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicMemoryOptimizedNumberTexture, _WebGLKernelValueMemo);\n\n  function WebGLKernelValueDynamicMemoryOptimizedNumberTexture() {\n    _classCallCheck(this, WebGLKernelValueDynamicMemoryOptimizedNumberTexture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicMemoryOptimizedNumberTexture).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicMemoryOptimizedNumberTexture, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(inputTexture) {\n      this.dimensions = inputTexture.dimensions;\n      this.textureSize = inputTexture.size;\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicMemoryOptimizedNumberTexture.prototype), \"updateValue\", this).call(this, inputTexture);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicMemoryOptimizedNumberTexture;\n}(WebGLKernelValueMemoryOptimizedNumberTexture);\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture: WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./number-texture'),\n    WebGLKernelValueNumberTexture = _require2.WebGLKernelValueNumberTexture;\n\nvar WebGLKernelValueDynamicNumberTexture =\n/*#__PURE__*/\nfunction (_WebGLKernelValueNumb) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicNumberTexture, _WebGLKernelValueNumb);\n\n  function WebGLKernelValueDynamicNumberTexture() {\n    _classCallCheck(this, WebGLKernelValueDynamicNumberTexture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicNumberTexture).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicNumberTexture, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.dimensions = value.dimensions;\n      this.textureSize = value.size;\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicNumberTexture.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicNumberTexture;\n}(WebGLKernelValueNumberTexture);\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture: WebGLKernelValueDynamicNumberTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueSingleArray2 =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueSingleArray2, _WebGLKernelValue);\n\n  function WebGLKernelValueSingleArray2(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueSingleArray2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueSingleArray2).call(this, value, settings));\n    _this.uploadValue = value;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueSingleArray2, [{\n    key: \"getSource\",\n    value: function getSource(value) {\n      if (this.origin === 'constants') {\n        return \"const vec2 \".concat(this.id, \" = vec2(\").concat(value[0], \",\").concat(value[1], \");\\n\");\n      }\n\n      return \"uniform vec2 \".concat(this.id, \";\\n\");\n    }\n  }, {\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \";\\n\");\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.origin === 'constants') return;\n      this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n    }\n  }]);\n\n  return WebGLKernelValueSingleArray2;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2: WebGLKernelValueSingleArray2\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueSingleArray3 =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueSingleArray3, _WebGLKernelValue);\n\n  function WebGLKernelValueSingleArray3(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueSingleArray3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueSingleArray3).call(this, value, settings));\n    _this.uploadValue = value;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueSingleArray3, [{\n    key: \"getSource\",\n    value: function getSource(value) {\n      if (this.origin === 'constants') {\n        return \"const vec3 \".concat(this.id, \" = vec3(\").concat(value[0], \",\").concat(value[1], \",\").concat(value[2], \");\\n\");\n      }\n\n      return \"uniform vec3 \".concat(this.id, \";\\n\");\n    }\n  }, {\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \";\\n\");\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.origin === 'constants') return;\n      this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n    }\n  }]);\n\n  return WebGLKernelValueSingleArray3;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3: WebGLKernelValueSingleArray3\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGLKernelValueSingleArray4 =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueSingleArray4, _WebGLKernelValue);\n\n  function WebGLKernelValueSingleArray4(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGLKernelValueSingleArray4);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueSingleArray4).call(this, value, settings));\n    _this.uploadValue = value;\n    return _this;\n  }\n\n  _createClass(WebGLKernelValueSingleArray4, [{\n    key: \"getSource\",\n    value: function getSource(value) {\n      if (this.origin === 'constants') {\n        return \"const vec4 \".concat(this.id, \" = vec4(\").concat(value[0], \",\").concat(value[1], \",\").concat(value[2], \",\").concat(value[3], \");\\n\");\n      }\n\n      return \"uniform vec4 \".concat(this.id, \";\\n\");\n    }\n  }, {\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \";\\n\");\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.origin === 'constants') return;\n      this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n    }\n  }]);\n\n  return WebGLKernelValueSingleArray4;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGLKernelValueSingleArray4: WebGLKernelValueSingleArray4\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./unsigned-array'),\n    WebGLKernelValueUnsignedArray = _require2.WebGLKernelValueUnsignedArray;\n\nvar WebGLKernelValueDynamicUnsignedArray =\n/*#__PURE__*/\nfunction (_WebGLKernelValueUnsi) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicUnsignedArray, _WebGLKernelValueUnsi);\n\n  function WebGLKernelValueDynamicUnsignedArray() {\n    _classCallCheck(this, WebGLKernelValueDynamicUnsignedArray);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicUnsignedArray).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicUnsignedArray, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.dimensions = utils.getDimensions(value, true);\n      this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n      var Type = this.getTransferArrayType(value);\n      this.preUploadValue = new Type(this.uploadArrayLength);\n      this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicUnsignedArray.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicUnsignedArray;\n}(WebGLKernelValueUnsignedArray);\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray: WebGLKernelValueDynamicUnsignedArray\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../web-gl/kernel'),\n    WebGLKernel = _require.WebGLKernel;\n\nvar _require2 = require('./function-node'),\n    WebGL2FunctionNode = _require2.WebGL2FunctionNode;\n\nvar _require3 = require('../function-builder'),\n    FunctionBuilder = _require3.FunctionBuilder;\n\nvar _require4 = require('../../utils'),\n    utils = _require4.utils;\n\nvar _require5 = require('./fragment-shader'),\n    fragmentShader = _require5.fragmentShader;\n\nvar _require6 = require('./vertex-shader'),\n    vertexShader = _require6.vertexShader;\n\nvar _require7 = require('./kernel-value-maps'),\n    _lookupKernelValueType = _require7.lookupKernelValueType;\n\nvar isSupported = null;\nvar testCanvas = null;\nvar testContext = null;\nvar testExtensions = null;\n/**\n *\n * @type {IKernelFeatures}\n */\n\nvar features = null;\n/**\n * @extends WebGLKernel\n */\n\nvar WebGL2Kernel =\n/*#__PURE__*/\nfunction (_WebGLKernel) {\n  \"use strict\";\n\n  _inherits(WebGL2Kernel, _WebGLKernel);\n\n  function WebGL2Kernel() {\n    _classCallCheck(this, WebGL2Kernel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2Kernel).apply(this, arguments));\n  }\n\n  _createClass(WebGL2Kernel, [{\n    key: \"initContext\",\n    value: function initContext() {\n      var settings = {\n        alpha: false,\n        depth: false,\n        antialias: false\n      };\n      var context = this.canvas.getContext('webgl2', settings);\n      return context;\n    }\n  }, {\n    key: \"initExtensions\",\n    value: function initExtensions() {\n      this.extensions = {\n        EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n        OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear')\n      };\n    }\n    /**\n     * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n     * @param {IArguments} args\n     */\n\n  }, {\n    key: \"validateSettings\",\n    value: function validateSettings(args) {\n      if (!this.validate) {\n        this.texSize = utils.getKernelTextureSize({\n          optimizeFloatMemory: this.optimizeFloatMemory,\n          precision: this.precision\n        }, this.output);\n        return;\n      }\n\n      var features = this.constructor.features;\n\n      if (this.precision === 'single' && !features.isFloatRead) {\n        throw new Error('Float texture outputs are not supported');\n      } else if (!this.graphical && this.precision === null) {\n        this.precision = features.isFloatRead ? 'single' : 'unsigned';\n      }\n\n      if (this.fixIntegerDivisionAccuracy === null) {\n        this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n      } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n        this.fixIntegerDivisionAccuracy = false;\n      }\n\n      this.checkOutput();\n\n      if (!this.output || this.output.length === 0) {\n        if (args.length !== 1) {\n          throw new Error('Auto output only supported for kernels with only one input');\n        }\n\n        var argType = utils.getVariableType(args[0], this.strictIntegers);\n\n        switch (argType) {\n          case 'Array':\n            this.output = utils.getDimensions(argType);\n            break;\n\n          case 'NumberTexture':\n          case 'MemoryOptimizedNumberTexture':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n            this.output = args[0].output;\n            break;\n\n          default:\n            throw new Error('Auto output not supported for input type: ' + argType);\n        }\n      }\n\n      if (this.graphical) {\n        if (this.output.length !== 2) {\n          throw new Error('Output must have 2 dimensions on graphical mode');\n        }\n\n        if (this.precision === 'single') {\n          console.warn('Cannot use graphical mode and single precision at the same time');\n          this.precision = 'unsigned';\n        }\n\n        this.texSize = utils.clone(this.output);\n        return;\n      } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n        this.precision = 'single';\n      }\n\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision\n      }, this.output);\n    }\n  }, {\n    key: \"translateSource\",\n    value: function translateSource() {\n      var functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n        fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n      });\n      this.translatedSource = functionBuilder.getPrototypeString('kernel');\n\n      if (!this.graphical && !this.returnType) {\n        this.returnType = functionBuilder.getKernelResultType();\n      }\n\n      if (this.subKernels && this.subKernels.length > 0) {\n        for (var i = 0; i < this.subKernels.length; i++) {\n          var subKernel = this.subKernels[i];\n\n          if (!subKernel.returnType) {\n            subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var kernelArguments = this.kernelArguments,\n          texSize = this.texSize;\n      var gl = this.context;\n      gl.useProgram(this.program);\n      gl.scissor(0, 0, texSize[0], texSize[1]);\n\n      if (this.dynamicOutput) {\n        this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n        this.setUniform2iv('uTexSize', texSize);\n      }\n\n      this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n      for (var i = 0; i < kernelArguments.length; i++) {\n        kernelArguments[i].updateValue(arguments[i]);\n        if (this.switchingKernels) return;\n      }\n\n      if (this.plugins) {\n        for (var _i = 0; _i < this.plugins.length; _i++) {\n          var plugin = this.plugins[_i];\n\n          if (plugin.onBeforeRun) {\n            plugin.onBeforeRun(this);\n          }\n        }\n      }\n\n      if (this.graphical) {\n        if (this.pipeline) {\n          gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n          if (!this.outputTexture || this.immutable) {\n            this._setupOutputTexture();\n          }\n\n          gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n          return new this.TextureConstructor({\n            texture: this.outputTexture,\n            size: texSize,\n            dimensions: this.threadDim,\n            output: this.output,\n            context: this.context\n          });\n        }\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return;\n      }\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n      if (this.immutable) {\n        this._setupOutputTexture();\n      }\n\n      if (this.subKernels !== null) {\n        if (this.immutable) {\n          this._setupSubOutputTextures();\n        }\n\n        gl.drawBuffers(this.drawBuffersMap);\n      }\n\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n  }, {\n    key: \"drawBuffers\",\n    value: function drawBuffers() {\n      this.context.drawBuffers(this.drawBuffersMap);\n    }\n  }, {\n    key: \"getOutputTexture\",\n    value: function getOutputTexture() {\n      return this.outputTexture;\n    }\n  }, {\n    key: \"_setupOutputTexture\",\n    value: function _setupOutputTexture() {\n      var texSize = this.texSize;\n      var gl = this.context;\n      var texture = this.outputTexture = gl.createTexture();\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n      if (this.precision === 'single') {\n        if (this.pipeline) {\n          switch (this.returnType) {\n            case 'Number':\n            case 'Float':\n            case 'Integer':\n              if (this.optimizeFloatMemory) {\n                gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n              } else {\n                gl.texStorage2D(gl.TEXTURE_2D, 1, gl.R32F, texSize[0], texSize[1]);\n              }\n\n              break;\n\n            case 'Array(2)':\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG32F, texSize[0], texSize[1]);\n              break;\n\n            case 'Array(3)': // there is _no_ 3 channel format which is guaranteed to be color-renderable\n\n            case 'Array(4)':\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n              break;\n\n            default:\n              throw new Error('Unhandled return type');\n          }\n        } else {\n          gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n        }\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    }\n  }, {\n    key: \"_setupSubOutputTextures\",\n    value: function _setupSubOutputTextures() {\n      var texSize = this.texSize;\n      var gl = this.context;\n      this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n      this.subKernelOutputTextures = [];\n\n      for (var i = 0; i < this.subKernels.length; i++) {\n        var texture = this.context.createTexture();\n        this.subKernelOutputTextures.push(texture);\n        this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n        gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST); // TODO: upgrade this\n\n        if (this.precision === 'single') {\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n        } else {\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        }\n\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n      }\n    }\n    /**\n     *\n     * @desc Get the header string for the program.\n     * This returns an empty string if no sub-kernels are defined.\n     *\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getHeaderString\",\n    value: function _getHeaderString() {\n      return '';\n    }\n    /**\n     * @desc Get texture coordinate string for the program\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getTextureCoordinate\",\n    value: function _getTextureCoordinate() {\n      var subKernels = this.subKernels;\n\n      if (subKernels === null || subKernels.length < 1) {\n        switch (this.tactic) {\n          case 'speed':\n            return 'in lowp vec2 vTexCoord;\\n';\n\n          case 'performance':\n            return 'in highp vec2 vTexCoord;\\n';\n\n          case 'balanced':\n          default:\n            return 'in mediump vec2 vTexCoord;\\n';\n        }\n      } else {\n        switch (this.tactic) {\n          case 'speed':\n            return 'out lowp vec2 vTexCoord;\\n';\n\n          case 'performance':\n            return 'out highp vec2 vTexCoord;\\n';\n\n          case 'balanced':\n          default:\n            return 'out mediump vec2 vTexCoord;\\n';\n        }\n      }\n    }\n    /**\n     * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n     * @param {Array} args - The actual parameters sent to the Kernel\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"_getMainArgumentsString\",\n    value: function _getMainArgumentsString(args) {\n      var result = [];\n      var argumentNames = this.argumentNames;\n\n      for (var i = 0; i < argumentNames.length; i++) {\n        result.push(this.kernelArguments[i].getSource(args[i]));\n      }\n\n      return result.join('');\n    }\n    /**\n     * @desc Get Kernel program string (in *glsl*) for a kernel.\n     * @returns {String} result\n     */\n\n  }, {\n    key: \"getKernelString\",\n    value: function getKernelString() {\n      var kernelResultDeclaration;\n\n      switch (this.returnType) {\n        case 'Array(2)':\n          kernelResultDeclaration = 'vec2 kernelResult';\n          break;\n\n        case 'Array(3)':\n          kernelResultDeclaration = 'vec3 kernelResult';\n          break;\n\n        case 'Array(4)':\n          kernelResultDeclaration = 'vec4 kernelResult';\n          break;\n\n        case 'LiteralInteger':\n        case 'Float':\n        case 'Number':\n        case 'Integer':\n          kernelResultDeclaration = 'float kernelResult';\n          break;\n\n        default:\n          if (this.graphical) {\n            kernelResultDeclaration = 'float kernelResult';\n          } else {\n            throw new Error(\"unrecognized output type \\\"\".concat(this.returnType, \"\\\"\"));\n          }\n\n      }\n\n      var result = [];\n      var subKernels = this.subKernels;\n\n      if (subKernels !== null) {\n        result.push(kernelResultDeclaration, 'layout(location = 0) out vec4 data0');\n\n        for (var i = 0; i < subKernels.length; i++) {\n          var subKernel = subKernels[i];\n          result.push(subKernel.returnType === 'Integer' ? \"int subKernelResult_\".concat(subKernel.name, \" = 0\") : \"float subKernelResult_\".concat(subKernel.name, \" = 0.0\"), \"layout(location = \".concat(i + 1, \") out vec4 data\").concat(i + 1));\n        }\n      } else {\n        result.push('out vec4 data0', kernelResultDeclaration);\n      }\n\n      return utils.linesToString(result) + this.translatedSource;\n    }\n  }, {\n    key: \"getMainResultGraphical\",\n    value: function getMainResultGraphical() {\n      return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = actualColor']);\n    }\n  }, {\n    key: \"getMainResultPackedPixels\",\n    value: function getMainResultPackedPixels() {\n      switch (this.returnType) {\n        case 'LiteralInteger':\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n          return this.getMainResultKernelPackedPixels() + this.getMainResultSubKernelPackedPixels();\n\n        default:\n          throw new Error(\"packed output only usable with Numbers, \\\"\".concat(this.returnType, \"\\\" specified\"));\n      }\n    }\n    /**\n     * @return {String}\n     */\n\n  }, {\n    key: \"getMainResultKernelPackedPixels\",\n    value: function getMainResultKernelPackedPixels() {\n      return utils.linesToString(['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', \"  data0 = \".concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', \"(kernelResult)\")]);\n    }\n    /**\n     * @return {String}\n     */\n\n  }, {\n    key: \"getMainResultSubKernelPackedPixels\",\n    value: function getMainResultSubKernelPackedPixels() {\n      var result = [];\n      if (!this.subKernels) return '';\n\n      for (var i = 0; i < this.subKernels.length; i++) {\n        var subKernel = this.subKernels[i];\n\n        if (subKernel.returnType === 'Integer') {\n          result.push(\"  data\".concat(i + 1, \" = \").concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', \"(float(subKernelResult_\").concat(this.subKernels[i].name, \"))\"));\n        } else {\n          result.push(\"  data\".concat(i + 1, \" = \").concat(this.useLegacyEncoder ? 'legacyEncode32' : 'encode32', \"(subKernelResult_\").concat(this.subKernels[i].name, \")\"));\n        }\n      }\n\n      return utils.linesToString(result);\n    }\n  }, {\n    key: \"getMainResultMemoryOptimizedFloats\",\n    value: function getMainResultMemoryOptimizedFloats() {\n      var result = ['  index *= 4'];\n\n      switch (this.returnType) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n          var channels = ['r', 'g', 'b', 'a'];\n\n          for (var i = 0; i < channels.length; i++) {\n            var channel = channels[i];\n            this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n            this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n\n            if (i + 1 < channels.length) {\n              result.push('  index += 1');\n            }\n          }\n\n          break;\n\n        default:\n          throw new Error(\"optimized output only usable with Numbers, \".concat(this.returnType, \" specified\"));\n      }\n\n      return utils.linesToString(result);\n    }\n  }, {\n    key: \"getMainResultKernelMemoryOptimizedFloats\",\n    value: function getMainResultKernelMemoryOptimizedFloats(result, channel) {\n      result.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', \"  data0.\".concat(channel, \" = kernelResult\"));\n    }\n  }, {\n    key: \"getMainResultSubKernelMemoryOptimizedFloats\",\n    value: function getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; i++) {\n        var subKernel = this.subKernels[i];\n\n        if (subKernel.returnType === 'Integer') {\n          result.push(\"  data\".concat(i + 1, \".\").concat(channel, \" = float(subKernelResult_\").concat(subKernel.name, \")\"));\n        } else {\n          result.push(\"  data\".concat(i + 1, \".\").concat(channel, \" = subKernelResult_\").concat(subKernel.name));\n        }\n      }\n    }\n  }, {\n    key: \"getMainResultKernelNumberTexture\",\n    value: function getMainResultKernelNumberTexture() {\n      return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult'];\n    }\n  }, {\n    key: \"getMainResultSubKernelNumberTexture\",\n    value: function getMainResultSubKernelNumberTexture() {\n      var result = [];\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; ++i) {\n        var subKernel = this.subKernels[i];\n\n        if (subKernel.returnType === 'Integer') {\n          result.push(\"  data\".concat(i + 1, \"[0] = float(subKernelResult_\").concat(subKernel.name, \")\"));\n        } else {\n          result.push(\"  data\".concat(i + 1, \"[0] = subKernelResult_\").concat(subKernel.name));\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getMainResultKernelArray2Texture\",\n    value: function getMainResultKernelArray2Texture() {\n      return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult[0]', '  data0[1] = kernelResult[1]'];\n    }\n  }, {\n    key: \"getMainResultSubKernelArray2Texture\",\n    value: function getMainResultSubKernelArray2Texture() {\n      var result = [];\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; ++i) {\n        var subKernel = this.subKernels[i];\n        result.push(\"  data\".concat(i + 1, \"[0] = subKernelResult_\").concat(subKernel.name, \"[0]\"), \"  data\".concat(i + 1, \"[1] = subKernelResult_\").concat(subKernel.name, \"[1]\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getMainResultKernelArray3Texture\",\n    value: function getMainResultKernelArray3Texture() {\n      return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0[0] = kernelResult[0]', '  data0[1] = kernelResult[1]', '  data0[2] = kernelResult[2]'];\n    }\n  }, {\n    key: \"getMainResultSubKernelArray3Texture\",\n    value: function getMainResultSubKernelArray3Texture() {\n      var result = [];\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; ++i) {\n        var subKernel = this.subKernels[i];\n        result.push(\"  data\".concat(i + 1, \"[0] = subKernelResult_\").concat(subKernel.name, \"[0]\"), \"  data\".concat(i + 1, \"[1] = subKernelResult_\").concat(subKernel.name, \"[1]\"), \"  data\".concat(i + 1, \"[2] = subKernelResult_\").concat(subKernel.name, \"[2]\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getMainResultKernelArray4Texture\",\n    value: function getMainResultKernelArray4Texture() {\n      return ['  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = kernelResult'];\n    }\n  }, {\n    key: \"getMainResultSubKernelArray4Texture\",\n    value: function getMainResultSubKernelArray4Texture() {\n      var result = [];\n      if (!this.subKernels) return result;\n\n      for (var i = 0; i < this.subKernels.length; ++i) {\n        result.push(\"  data\".concat(i + 1, \" = subKernelResult_\").concat(this.subKernels[i].name));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"destroyExtensions\",\n    value: function destroyExtensions() {\n      this.extensions.EXT_color_buffer_float = null;\n      this.extensions.OES_texture_float_linear = null;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(WebGL2Kernel.prototype), \"toJSON\", this).call(this);\n\n      json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n      return json;\n    }\n  }], [{\n    key: \"setupFeatureChecks\",\n    value: function setupFeatureChecks() {\n      if (typeof document !== 'undefined') {\n        testCanvas = document.createElement('canvas');\n      } else if (typeof OffscreenCanvas !== 'undefined') {\n        testCanvas = new OffscreenCanvas(0, 0);\n      }\n\n      if (!testCanvas) return;\n      testContext = testCanvas.getContext('webgl2');\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear')\n      };\n      features = this.getFeatures();\n    }\n  }, {\n    key: \"isContextMatch\",\n    value: function isContextMatch(context) {\n      // from global\n      if (typeof WebGL2RenderingContext !== 'undefined') {\n        return context instanceof WebGL2RenderingContext;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      return Object.freeze({\n        isFloatRead: this.getIsFloatRead(),\n        isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n        kernelMap: true,\n        isTextureFloat: true,\n        channelCount: this.getChannelCount()\n      });\n    }\n  }, {\n    key: \"getIsTextureFloat\",\n    value: function getIsTextureFloat() {\n      return true;\n    }\n  }, {\n    key: \"getIsIntegerDivisionAccurate\",\n    value: function getIsIntegerDivisionAccurate() {\n      return _get(_getPrototypeOf(WebGL2Kernel), \"getIsIntegerDivisionAccurate\", this).call(this);\n    }\n  }, {\n    key: \"getChannelCount\",\n    value: function getChannelCount() {\n      return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n    }\n  }, {\n    key: \"lookupKernelValueType\",\n    value: function lookupKernelValueType(type, dynamic, precision, value) {\n      return _lookupKernelValueType(type, dynamic, precision, value);\n    }\n  }, {\n    key: \"isSupported\",\n    get: function get() {\n      if (isSupported !== null) {\n        return isSupported;\n      }\n\n      this.setupFeatureChecks();\n      isSupported = this.isContextMatch(testContext);\n      return isSupported;\n    }\n  }, {\n    key: \"testCanvas\",\n    get: function get() {\n      return testCanvas;\n    }\n  }, {\n    key: \"testContext\",\n    get: function get() {\n      return testContext;\n    }\n    /**\n     *\n     * @returns {{isFloatRead: Boolean, isIntegerDivisionAccurate: Boolean, kernelMap: Boolean, isTextureFloat: Boolean}}\n     */\n\n  }, {\n    key: \"features\",\n    get: function get() {\n      return features;\n    }\n  }, {\n    key: \"fragmentShader\",\n    get: function get() {\n      return fragmentShader;\n    }\n  }, {\n    key: \"vertexShader\",\n    get: function get() {\n      return vertexShader;\n    }\n  }]);\n\n  return WebGL2Kernel;\n}(WebGLKernel);\n\nmodule.exports = {\n  WebGL2Kernel: WebGL2Kernel\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../web-gl/function-node'),\n    WebGLFunctionNode = _require.WebGLFunctionNode;\n/**\n * @class WebGL2FunctionNode\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective webGL code.\n * @extends WebGLFunctionNode\n * @returns the converted webGL function string\n */\n\n\nvar WebGL2FunctionNode =\n/*#__PURE__*/\nfunction (_WebGLFunctionNode) {\n  \"use strict\";\n\n  _inherits(WebGL2FunctionNode, _WebGLFunctionNode);\n\n  function WebGL2FunctionNode() {\n    _classCallCheck(this, WebGL2FunctionNode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2FunctionNode).apply(this, arguments));\n  }\n\n  _createClass(WebGL2FunctionNode, [{\n    key: \"astIdentifierExpression\",\n\n    /**\n     * @desc Parses the abstract syntax tree for *identifier* expression\n     * @param {Object} idtNode - An ast Node\n     * @param {Array} retArr - return array string\n     * @returns {Array} the append retArr\n     */\n    value: function astIdentifierExpression(idtNode, retArr) {\n      if (idtNode.type !== 'Identifier') {\n        throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n      }\n\n      var type = this.getType(idtNode);\n\n      if (idtNode.name === 'Infinity') {\n        retArr.push('intBitsToFloat(2139095039)');\n      } else if (type === 'Boolean') {\n        if (this.argumentNames.indexOf(idtNode.name) > -1) {\n          retArr.push(\"bool(user_\".concat(idtNode.name, \")\"));\n        } else {\n          retArr.push(\"user_\".concat(idtNode.name));\n        }\n      } else {\n        var userArgumentName = this.getKernelArgumentName(idtNode.name);\n\n        if (userArgumentName) {\n          retArr.push(\"user_\".concat(userArgumentName));\n        } else {\n          retArr.push(\"user_\".concat(idtNode.name));\n        }\n      }\n\n      return retArr;\n    }\n  }]);\n\n  return WebGL2FunctionNode;\n}(WebGLFunctionNode);\n\nmodule.exports = {\n  WebGL2FunctionNode: WebGL2FunctionNode\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/index'),\n    WebGLKernelValue = _require2.WebGLKernelValue;\n\nvar WebGL2KernelValueHtmlImageArray =\n/*#__PURE__*/\nfunction (_WebGLKernelValue) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueHtmlImageArray, _WebGLKernelValue);\n\n  function WebGL2KernelValueHtmlImageArray(value, settings) {\n    var _this;\n\n    _classCallCheck(this, WebGL2KernelValueHtmlImageArray);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueHtmlImageArray).call(this, value, settings));\n\n    _this.requestTexture();\n\n    _this.dimensions = [value[0].width, value[0].height, value.length];\n    _this.textureSize = [value[0].width, value[0].height];\n    return _this;\n  }\n\n  _createClass(WebGL2KernelValueHtmlImageArray, [{\n    key: \"getStringValueHandler\",\n    value: function getStringValueHandler() {\n      return \"const uploadValue_\".concat(this.name, \" = \").concat(this.varName, \";\\n\");\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2DArray \").concat(this.id), \"\".concat(variablePrecision, \" ivec2 \").concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"\".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(images) {\n      var gl = this.context;\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true); // Upload the images into the texture.\n\n      gl.texImage3D(gl.TEXTURE_2D_ARRAY, 0, gl.RGBA, images[0].width, images[0].height, images.length, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n      for (var i = 0; i < images.length; i++) {\n        var xOffset = 0;\n        var yOffset = 0;\n        var imageDepth = 1;\n        gl.texSubImage3D(gl.TEXTURE_2D_ARRAY, 0, xOffset, yOffset, i, images[i].width, images[i].height, imageDepth, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = images[i]);\n      }\n\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGL2KernelValueHtmlImageArray;\n}(WebGLKernelValue);\n\nmodule.exports = {\n  WebGL2KernelValueHtmlImageArray: WebGL2KernelValueHtmlImageArray\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/single-input'),\n    WebGLKernelValueSingleInput = _require2.WebGLKernelValueSingleInput;\n\nvar WebGL2KernelValueSingleInput =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueSingleInput, _WebGLKernelValueSing);\n\n  function WebGL2KernelValueSingleInput() {\n    _classCallCheck(this, WebGL2KernelValueSingleInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueSingleInput).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueSingleInput, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"\".concat(variablePrecision, \" ivec2 \").concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"\".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(input) {\n      var gl = this.context;\n      utils.flattenTo(input.value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGL2KernelValueSingleInput;\n}(WebGLKernelValueSingleInput);\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput: WebGL2KernelValueSingleInput\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/single-array'),\n    WebGLKernelValueSingleArray = _require2.WebGLKernelValueSingleArray;\n\nvar WebGL2KernelValueSingleArray =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueSingleArray, _WebGLKernelValueSing);\n\n  function WebGL2KernelValueSingleArray() {\n    _classCallCheck(this, WebGL2KernelValueSingleArray);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueSingleArray).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueSingleArray, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"\".concat(variablePrecision, \" ivec2 \").concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"\".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flattenTo(value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGL2KernelValueSingleArray;\n}(WebGLKernelValueSingleArray);\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray: WebGL2KernelValueSingleArray\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/single-array1d-i'),\n    WebGLKernelValueSingleArray1DI = _require2.WebGLKernelValueSingleArray1DI;\n\nvar WebGL2KernelValueSingleArray1DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueSingleArray1DI, _WebGLKernelValueSing);\n\n  function WebGL2KernelValueSingleArray1DI() {\n    _classCallCheck(this, WebGL2KernelValueSingleArray1DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueSingleArray1DI).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueSingleArray1DI, [{\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flattenTo(value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGL2KernelValueSingleArray1DI;\n}(WebGLKernelValueSingleArray1DI);\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI: WebGL2KernelValueSingleArray1DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/single-array2d-i'),\n    WebGLKernelValueSingleArray2DI = _require2.WebGLKernelValueSingleArray2DI;\n\nvar WebGL2KernelValueSingleArray2DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueSingleArray2DI, _WebGLKernelValueSing);\n\n  function WebGL2KernelValueSingleArray2DI() {\n    _classCallCheck(this, WebGL2KernelValueSingleArray2DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueSingleArray2DI).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueSingleArray2DI, [{\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flattenTo(value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGL2KernelValueSingleArray2DI;\n}(WebGLKernelValueSingleArray2DI);\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI: WebGL2KernelValueSingleArray2DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/single-array3d-i'),\n    WebGLKernelValueSingleArray3DI = _require2.WebGLKernelValueSingleArray3DI;\n\nvar WebGL2KernelValueSingleArray3DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueSingleArray3DI, _WebGLKernelValueSing);\n\n  function WebGL2KernelValueSingleArray3DI() {\n    _classCallCheck(this, WebGL2KernelValueSingleArray3DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueSingleArray3DI).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueSingleArray3DI, [{\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (value.constructor !== this.initialValueConstructor) {\n        this.onUpdateValueMismatch();\n        return;\n      }\n\n      var gl = this.context;\n      utils.flattenTo(value, this.uploadValue);\n      gl.activeTexture(this.contextHandle);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n      this.kernel.setUniform1i(this.id, this.index);\n    }\n  }]);\n\n  return WebGL2KernelValueSingleArray3DI;\n}(WebGLKernelValueSingleArray3DI);\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI: WebGL2KernelValueSingleArray3DI\n};","var _require = require('./gpu'),\n    GPU = _require.GPU;\n\nvar _require2 = require('./alias'),\n    alias = _require2.alias;\n\nvar _require3 = require('./utils'),\n    utils = _require3.utils;\n\nvar _require4 = require('./input'),\n    Input = _require4.Input,\n    input = _require4.input;\n\nvar _require5 = require('./texture'),\n    Texture = _require5.Texture;\n\nvar _require6 = require('./backend/function-builder'),\n    FunctionBuilder = _require6.FunctionBuilder;\n\nvar _require7 = require('./backend/function-node'),\n    FunctionNode = _require7.FunctionNode;\n\nvar _require8 = require('./backend/cpu/function-node'),\n    CPUFunctionNode = _require8.CPUFunctionNode;\n\nvar _require9 = require('./backend/cpu/kernel'),\n    CPUKernel = _require9.CPUKernel;\n\nvar _require10 = require('./backend/headless-gl/kernel'),\n    HeadlessGLKernel = _require10.HeadlessGLKernel;\n\nvar _require11 = require('./backend/web-gl/function-node'),\n    WebGLFunctionNode = _require11.WebGLFunctionNode;\n\nvar _require12 = require('./backend/web-gl/kernel'),\n    WebGLKernel = _require12.WebGLKernel;\n\nvar _require13 = require('./backend/web-gl2/function-node'),\n    WebGL2FunctionNode = _require13.WebGL2FunctionNode;\n\nvar _require14 = require('./backend/web-gl2/kernel'),\n    WebGL2Kernel = _require14.WebGL2Kernel;\n\nvar _require15 = require('./backend/gl/kernel'),\n    GLKernel = _require15.GLKernel;\n\nvar _require16 = require('./backend/kernel'),\n    Kernel = _require16.Kernel;\n\nmodule.exports = {\n  alias: alias,\n  CPUFunctionNode: CPUFunctionNode,\n  CPUKernel: CPUKernel,\n  GPU: GPU,\n  FunctionBuilder: FunctionBuilder,\n  FunctionNode: FunctionNode,\n  HeadlessGLKernel: HeadlessGLKernel,\n  Input: Input,\n  input: input,\n  Texture: Texture,\n  utils: utils,\n  WebGL2FunctionNode: WebGL2FunctionNode,\n  WebGL2Kernel: WebGL2Kernel,\n  WebGLFunctionNode: WebGLFunctionNode,\n  WebGLKernel: WebGLKernel,\n  GLKernel: GLKernel,\n  Kernel: Kernel\n};","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nfunction setupArguments(args) {\n  var newArguments = new Array(args.length);\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n\n  return newArguments;\n}\n\nfunction mock1D() {\n  var args = setupArguments(arguments);\n  var row = new Float32Array(this.output.x);\n\n  for (var x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n\n  return row;\n}\n\nfunction mock2D() {\n  var args = setupArguments(arguments);\n  var matrix = new Array(this.output.y);\n\n  for (var y = 0; y < this.output.y; y++) {\n    var row = new Float32Array(this.output.x);\n\n    for (var x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n\n    matrix[y] = row;\n  }\n\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  var args = setupArguments(arguments);\n\n  for (var y = 0; y < this.output.y; y++) {\n    for (var x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  var args = setupArguments(arguments);\n  var cube = new Array(this.output.z);\n\n  for (var z = 0; z < this.output.z; z++) {\n    var matrix = new Array(this.output.y);\n\n    for (var y = 0; y < this.output.y; y++) {\n      var row = new Float32Array(this.output.x);\n\n      for (var x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n\n      matrix[y] = row;\n    }\n\n    cube[z] = matrix;\n  }\n\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = function (output) {\n    kernel.output = setupOutput(output);\n\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n\n  kernel.toJSON = function () {\n    throw new Error('Not usable with gpuMock');\n  };\n\n  kernel.setConstants = function (flag) {\n    kernel.constants = flag;\n    return kernel;\n  };\n\n  kernel.setGraphical = function (flag) {\n    kernel.graphical = flag;\n    return kernel;\n  };\n\n  kernel.setCanvas = function (flag) {\n    kernel.canvas = flag;\n    return kernel;\n  };\n\n  kernel.setContext = function (flag) {\n    kernel.context = flag;\n    return kernel;\n  };\n\n  kernel.exec = function () {\n    var _arguments = arguments;\n    return new Promise(function (resolve, reject) {\n      try {\n        resolve(kernel.apply(kernel, _arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n\n  kernel.getPixels = function (flip) {\n    var _kernel$output = kernel.output,\n        x = _kernel$output.x,\n        y = _kernel$output.y; // cpu is not flipped by default\n\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n\n  kernel.color = function (r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n    var width = kernel.output.x;\n    var height = kernel.output.y;\n    var x = kernel.thread.x;\n    var y = height - kernel.thread.y - 1;\n    var index = x + y * width;\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  }; // these are added for api compatibility, but have no affect\n\n\n  kernel.setWarnVarUsage = function () {\n    return kernel;\n  };\n\n  kernel.setOptimizeFloatMemory = function () {\n    return kernel;\n  };\n\n  kernel.setArgumentTypes = function () {\n    return kernel;\n  };\n\n  kernel.setDebug = function () {\n    return kernel;\n  };\n\n  kernel.setLoopMaxIterations = function () {\n    return kernel;\n  };\n\n  kernel.setPipeline = function () {\n    return kernel;\n  };\n\n  kernel.setPrecision = function () {\n    return kernel;\n  };\n\n  kernel.setImmutable = function () {\n    return kernel;\n  };\n\n  kernel.setFunctions = function () {\n    return kernel;\n  };\n\n  kernel.addSubKernel = function () {\n    return kernel;\n  };\n\n  kernel.destroy = function () {};\n\n  kernel.validateSettings = function () {};\n\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  var _kernel$output2 = kernel.output,\n      x = _kernel$output2.x,\n      y = _kernel$output2.y;\n\n  if (kernel.context && kernel.context.createImageData) {\n    var data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    var _data = new Uint8ClampedArray(x * y * 4);\n\n    kernel._imageData = {\n      data: _data\n    };\n    kernel._colorData = _data;\n  }\n}\n\nfunction setupOutput(output) {\n  var result = null;\n\n  if (output.length) {\n    if (output.length === 3) {\n      var _output = _slicedToArray(output, 3),\n          x = _output[0],\n          y = _output[1],\n          z = _output[2];\n\n      result = {\n        x: x,\n        y: y,\n        z: z\n      };\n    } else if (output.length === 2) {\n      var _output2 = _slicedToArray(output, 2),\n          _x = _output2[0],\n          _y = _output2[1];\n\n      result = {\n        x: _x,\n        y: _y\n      };\n    } else {\n      var _output3 = _slicedToArray(output, 1),\n          _x2 = _output3[0];\n\n      result = {\n        x: _x2\n      };\n    }\n  } else {\n    result = output;\n  }\n\n  return result;\n}\n\nfunction gpuMock(fn) {\n  var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var output = settings.output ? setupOutput(settings.output) : null;\n\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  // https://stackoverflow.com/a/41973289/1324039\n  var halfHeight = height / 2 | 0; // the | 0 keeps the result an int\n\n  var bytesPerRow = width * 4; // make a temp buffer to hold one row\n\n  var temp = new Uint8ClampedArray(width * 4);\n  var result = pixels.slice(0);\n\n  for (var y = 0; y < halfHeight; ++y) {\n    var topOffset = y * bytesPerRow;\n    var bottomOffset = (height - y - 1) * bytesPerRow; // make copy of a row on the top half\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow)); // copy a row from the bottom half to the top\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow); // copy the copy of the top half row to the bottom half\n\n    result.set(temp, bottomOffset);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  gpuMock: gpuMock\n};","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar FunctionTracer =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function FunctionTracer(ast) {\n    _classCallCheck(this, FunctionTracer);\n\n    this.runningContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.inLoopInit = false;\n    this.scan(ast);\n  }\n\n  _createClass(FunctionTracer, [{\n    key: \"newContext\",\n    value: function newContext(run) {\n      var newContext = Object.assign({}, this.currentContext);\n      this.contexts.push(newContext);\n      this.runningContexts.push(newContext);\n      run();\n      this.runningContexts.pop();\n    }\n    /**\n     * Recursively scans AST for declarations and functions, and add them to their respective context\n     * @param ast\n     */\n\n  }, {\n    key: \"scan\",\n    value: function scan(ast) {\n      var _this = this;\n\n      if (Array.isArray(ast)) {\n        for (var i = 0; i < ast.length; i++) {\n          this.scan(ast[i]);\n        }\n\n        return;\n      }\n\n      switch (ast.type) {\n        case 'Program':\n          this.scan(ast.body);\n          break;\n\n        case 'BlockStatement':\n          this.newContext(function () {\n            _this.scan(ast.body);\n          });\n          break;\n\n        case 'AssignmentExpression':\n          this.scan(ast.left);\n          this.scan(ast.right);\n          break;\n\n        case 'BinaryExpression':\n          this.scan(ast.left);\n          if (ast.right) this.scan(ast.right);\n          break;\n\n        case 'UpdateExpression':\n          this.scan(ast.argument);\n          break;\n\n        case 'UnaryExpression':\n          this.scan(ast.argument);\n          break;\n\n        case 'VariableDeclaration':\n          this.scan(ast.declarations);\n          break;\n\n        case 'VariableDeclarator':\n          var currentContext = this.currentContext;\n          var declaration = {\n            ast: ast,\n            context: currentContext,\n            name: ast.id.name,\n            origin: 'declaration',\n            forceInteger: this.inLoopInit,\n            assignable: !this.inLoopInit && !currentContext.hasOwnProperty(ast.id.name)\n          };\n          currentContext[ast.id.name] = declaration;\n          this.declarations.push(declaration);\n          this.scan(ast.id);\n          this.scan(ast.init);\n          break;\n\n        case 'FunctionExpression':\n        case 'FunctionDeclaration':\n          if (this.runningContexts.length === 0) {\n            this.scan(ast.body);\n          } else {\n            this.functions.push(ast);\n          }\n\n          break;\n\n        case 'IfStatement':\n          this.scan(ast.test);\n          this.scan(ast.consequent);\n          if (ast.alternate) this.scan(ast.alternate);\n          break;\n\n        case 'ForStatement':\n          this.newContext(function () {\n            if (ast.init) {\n              _this.inLoopInit = true;\n\n              _this.scan(ast.init);\n\n              _this.inLoopInit = false;\n            }\n\n            if (ast.test) {\n              _this.scan(ast.test);\n            }\n\n            _this.scan(ast.update);\n\n            _this.newContext(function () {\n              _this.scan(ast.body);\n            });\n          });\n          break;\n\n        case 'DoWhileStatement':\n        case 'WhileStatement':\n          this.newContext(function () {\n            _this.scan(ast.body);\n\n            _this.scan(ast.test);\n          });\n          break;\n\n        case 'Identifier':\n          this.identifiers.push({\n            context: this.currentContext,\n            ast: ast\n          });\n          break;\n\n        case 'ReturnStatement':\n          this.returnStatements.push(ast);\n          this.scan(ast.argument);\n          break;\n\n        case 'MemberExpression':\n          this.scan(ast.object);\n          this.scan(ast.property);\n          break;\n\n        case 'ExpressionStatement':\n          this.scan(ast.expression);\n          break;\n\n        case 'ThisExpression':\n          break;\n\n        case 'CallExpression':\n          this.functionCalls.push({\n            context: this.currentContext,\n            ast: ast\n          });\n          this.scan(ast.arguments);\n          break;\n\n        case 'ArrayExpression':\n          this.scan(ast.elements);\n          break;\n\n        case 'ConditionalExpression':\n          this.scan(ast.test);\n          this.scan(ast.alternate);\n          this.scan(ast.consequent);\n          break;\n\n        case 'SwitchStatement':\n          this.scan(ast.discriminant);\n          this.scan(ast.cases);\n          break;\n\n        case 'SwitchCase':\n          if (ast.test) this.scan(ast.test);\n          this.scan(ast.consequent);\n          break;\n\n        case 'LogicalExpression':\n          this.scan(ast.left);\n          this.scan(ast.right);\n          break;\n\n        case 'Literal':\n          break;\n\n        case 'DebuggerStatement':\n          break;\n\n        case 'EmptyStatement':\n          break;\n\n        case 'BreakStatement':\n          break;\n\n        default:\n          throw new Error(\"unhandled type \\\"\".concat(ast.type, \"\\\"\"));\n      }\n    }\n  }, {\n    key: \"currentContext\",\n    get: function get() {\n      return this.runningContexts.length > 0 ? this.runningContexts[this.runningContexts.length - 1] : null;\n    }\n  }]);\n\n  return FunctionTracer;\n}();\n\nmodule.exports = {\n  FunctionTracer: FunctionTracer\n};","var _require = require('../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../input'),\n    Input = _require2.Input;\n\nfunction constantsToString(constants) {\n  var results = [];\n\n  for (var p in constants) {\n    var constant = constants[p];\n\n    switch (typeof constant) {\n      case 'number':\n      case 'boolean':\n        results.push(\"\".concat(p, \":\").concat(constant));\n    }\n  }\n\n  return \"{ \".concat(results.join(), \" }\");\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  var header = [];\n  var thisProperties = [];\n  var beforeReturn = [];\n  var useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n  header.push('  const { context, canvas, constants } = settings;', \"  const output = new Int32Array(\".concat(JSON.stringify(Array.from(cpuKernel.output)), \");\"), \"  const _constants = \".concat(constantsToString(cpuKernel.constants), \";\"));\n  thisProperties.push('    constants: _constants,', '    context,', '    output,', '    thread: {x: 0, y: 0, z: 0},');\n\n  if (cpuKernel.graphical) {\n    header.push(\"  const _imageData = context.createImageData(\".concat(cpuKernel.output[0], \", \").concat(cpuKernel.output[1], \");\"));\n    header.push(\"  const _colorData = new Uint8ClampedArray(\".concat(cpuKernel.output[0], \" * \").concat(cpuKernel.output[1], \" * 4);\"));\n    var colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: function thisLookup(propertyName) {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n\n          case '_imageData':\n            return '_imageData';\n\n          case 'output':\n            return 'output';\n\n          case 'thread':\n            return 'this.thread';\n        }\n\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: function findDependency(object, name) {\n        return null;\n      }\n    });\n    var getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: function thisLookup(propertyName) {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n\n          case '_imageData':\n            return '_imageData';\n\n          case 'output':\n            return 'output';\n\n          case 'thread':\n            return 'this.thread';\n        }\n\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: function findDependency() {\n        return null;\n      }\n    });\n    thisProperties.push('    _imageData,', '    _colorData,', \"    color: \".concat(colorFn, \",\"));\n    beforeReturn.push(\"  kernel.getPixels = \".concat(getPixelsFn, \";\"));\n  }\n\n  var constantTypes = [];\n  var constantKeys = Object.keys(cpuKernel.constantTypes);\n\n  for (var i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    var flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: function findDependency(object, name) {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n\n        return null;\n      },\n      thisLookup: function thisLookup(propertyName) {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(\"    _imageTo2DArray,\");\n    thisProperties.push(\"    _imageTo3DArray,\");\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    var flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo2DArray.toString(), {\n      findDependency: function findDependency(object, name) {\n        return null;\n      },\n      thisLookup: function thisLookup(propertyName) {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n\n          case 'context':\n            return 'settings.context';\n        }\n\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(\"    _imageTo2DArray,\");\n  }\n\n  return \"function(settings) {\\n\".concat(header.join('\\n'), \"\\n  for (const p in constants) {\\n    const constant = constants[p];\\n    switch (typeof constant) {\\n      case 'number':\\n      case 'boolean':\\n        continue;\\n    }\\n    _constants[p] = constant;\\n  }\\n  const kernel = (function() {\\n\").concat(cpuKernel._kernelString, \"\\n  })\\n    .apply({ \").concat(thisProperties.join('\\n'), \" });\\n  \").concat(beforeReturn.join('\\n'), \"\\n  return kernel;\\n}\");\n}\n\nmodule.exports = {\n  cpuKernelString: cpuKernelString\n};","if (typeof WebGLRenderingContext !== 'undefined') {\n  module.exports = require('./src/javascript/browser-index');\n} else {\n  module.exports = require('./src/javascript/node-index');\n}","function createContext(width, height, options) {\n  width = width | 0;\n  height = height | 0;\n\n  if (!(width > 0 && height > 0)) {\n    return null;\n  }\n\n  var canvas = document.createElement('canvas');\n\n  if (!canvas) {\n    return null;\n  }\n\n  var gl;\n  canvas.width = width;\n  canvas.height = height;\n\n  try {\n    gl = canvas.getContext('webgl', options);\n  } catch (e) {\n    try {\n      gl = canvas.getContext('experimental-webgl', options);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  var _getExtension = gl.getExtension;\n  var extDestroy = {\n    destroy: function destroy() {\n      var loseContext = _getExtension.call(gl, 'WEBGL_lose_context');\n\n      if (loseContext) {\n        loseContext.loseContext();\n      }\n    }\n  };\n  var extResize = {\n    resize: function resize(w, h) {\n      canvas.width = w;\n      canvas.height = h;\n    }\n  };\n\n  var _supportedExtensions = gl.getSupportedExtensions().slice();\n\n  _supportedExtensions.push('STACKGL_destroy_context', 'STACKGL_resize_drawingbuffer');\n\n  gl.getSupportedExtensions = function () {\n    return _supportedExtensions.slice();\n  };\n\n  gl.getExtension = function (extName) {\n    var name = extName.toLowerCase();\n\n    if (name === 'stackgl_resize_drawingbuffer') {\n      return extResize;\n    }\n\n    if (name === 'stackgl_destroy_context') {\n      return extDestroy;\n    }\n\n    return _getExtension.call(gl, extName);\n  };\n\n  return gl || null;\n}\n\nmodule.exports = createContext;","var bits = require('bit-twiddle');\n\nvar _require = require('./webgl-context-attributes'),\n    WebGLContextAttributes = _require.WebGLContextAttributes;\n\nvar _require2 = require('./webgl-rendering-context'),\n    WebGLRenderingContext = _require2.WebGLRenderingContext,\n    wrapContext = _require2.wrapContext;\n\nvar _require3 = require('./webgl-texture-unit'),\n    WebGLTextureUnit = _require3.WebGLTextureUnit;\n\nvar _require4 = require('./webgl-vertex-attribute'),\n    WebGLVertexAttribute = _require4.WebGLVertexAttribute;\n\nvar CONTEXT_COUNTER = 0;\n\nfunction flag(options, name, dflt) {\n  if (!options || !(typeof options === 'object') || !(name in options)) {\n    return dflt;\n  }\n\n  return !!options[name];\n}\n\nfunction createContext(width, height, options) {\n  width = width | 0;\n  height = height | 0;\n\n  if (!(width > 0 && height > 0)) {\n    return null;\n  }\n\n  var contextAttributes = new WebGLContextAttributes(flag(options, 'alpha', true), flag(options, 'depth', true), flag(options, 'stencil', false), false, // flag(options, 'antialias', true),\n  flag(options, 'premultipliedAlpha', true), flag(options, 'preserveDrawingBuffer', false), flag(options, 'preferLowPowerToHighPerformance', false), flag(options, 'failIfMajorPerformanceCaveat', false)); // Can only use premultipliedAlpha if alpha is set\n\n  contextAttributes.premultipliedAlpha = contextAttributes.premultipliedAlpha && contextAttributes.alpha;\n  var ctx;\n\n  try {\n    ctx = new WebGLRenderingContext(1, 1, contextAttributes.alpha, contextAttributes.depth, contextAttributes.stencil, contextAttributes.antialias, contextAttributes.premultipliedAlpha, contextAttributes.preserveDrawingBuffer, contextAttributes.preferLowPowerToHighPerformance, contextAttributes.failIfMajorPerformanceCaveat);\n  } catch (e) {}\n\n  if (!ctx) {\n    return null;\n  }\n\n  ctx.drawingBufferWidth = width;\n  ctx.drawingBufferHeight = height;\n  ctx._ = CONTEXT_COUNTER++;\n  ctx._contextAttributes = contextAttributes;\n  ctx._extensions = {};\n  ctx._programs = {};\n  ctx._shaders = {};\n  ctx._buffers = {};\n  ctx._textures = {};\n  ctx._framebuffers = {};\n  ctx._renderbuffers = {};\n  ctx._activeProgram = null;\n  ctx._activeFramebuffer = null;\n  ctx._activeArrayBuffer = null;\n  ctx._activeElementArrayBuffer = null;\n  ctx._activeRenderbuffer = null; // Initialize texture units\n\n  var numTextures = ctx.getParameter(ctx.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n  ctx._textureUnits = new Array(numTextures);\n\n  for (var i = 0; i < numTextures; ++i) {\n    ctx._textureUnits[i] = new WebGLTextureUnit(i);\n  }\n\n  ctx._activeTextureUnit = 0;\n  ctx.activeTexture(ctx.TEXTURE0);\n  ctx._errorStack = []; // Initialize vertex attributes\n\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\n  ctx._vertexAttribs = new Array(numAttribs);\n\n  for (var _i = 0; _i < numAttribs; ++_i) {\n    ctx._vertexAttribs[_i] = new WebGLVertexAttribute(ctx, _i);\n  } // Store limits\n\n\n  ctx._maxTextureSize = ctx.getParameter(ctx.MAX_TEXTURE_SIZE);\n  ctx._maxTextureLevel = bits.log2(bits.nextPow2(ctx._maxTextureSize));\n  ctx._maxCubeMapSize = ctx.getParameter(ctx.MAX_CUBE_MAP_TEXTURE_SIZE);\n  ctx._maxCubeMapLevel = bits.log2(bits.nextPow2(ctx._maxCubeMapSize)); // Unpack alignment\n\n  ctx._unpackAlignment = 4;\n  ctx._packAlignment = 4; // Allocate framebuffer\n\n  ctx._allocateDrawingBuffer(width, height);\n\n  var attrib0Buffer = ctx.createBuffer();\n  ctx._attrib0Buffer = attrib0Buffer; // Initialize defaults\n\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null); // Set viewport and scissor\n\n  ctx.viewport(0, 0, width, height);\n  ctx.scissor(0, 0, width, height); // Clear buffers\n\n  ctx.clearDepth(1);\n  ctx.clearColor(0, 0, 0, 0);\n  ctx.clearStencil(0);\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\n  return wrapContext(ctx);\n}\n\nmodule.exports = createContext;","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar WebGLContextAttributes = function WebGLContextAttributes(alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, preferLowPowerToHighPerformance, failIfMajorPerformanceCaveat) {\n  \"use strict\";\n\n  _classCallCheck(this, WebGLContextAttributes);\n\n  this.alpha = alpha;\n  this.depth = depth;\n  this.stencil = stencil;\n  this.antialias = antialias;\n  this.premultipliedAlpha = premultipliedAlpha;\n  this.preserveDrawingBuffer = preserveDrawingBuffer;\n  this.preferLowPowerToHighPerformance = preferLowPowerToHighPerformance;\n  this.failIfMajorPerformanceCaveat = failIfMajorPerformanceCaveat;\n};\n\nmodule.exports = {\n  WebGLContextAttributes: WebGLContextAttributes\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar bits = require('bit-twiddle');\n\nvar tokenize = require('glsl-tokenizer/string');\n\nvar HEADLESS_VERSION = require('../../package.json').version;\n\nvar _require = require('./native-gl'),\n    gl = _require.gl,\n    NativeWebGLRenderingContext = _require.NativeWebGLRenderingContext,\n    NativeWebGL = _require.NativeWebGL;\n\nvar _require2 = require('./extensions/angle-instanced-arrays'),\n    getANGLEInstancedArrays = _require2.getANGLEInstancedArrays;\n\nvar _require3 = require('./extensions/oes-element-index-unit'),\n    getOESElementIndexUint = _require3.getOESElementIndexUint;\n\nvar _require4 = require('./extensions/oes-texture-float'),\n    getOESTextureFloat = _require4.getOESTextureFloat;\n\nvar _require5 = require('./extensions/stackgl-destroy-context'),\n    getSTACKGLDestroyContext = _require5.getSTACKGLDestroyContext;\n\nvar _require6 = require('./extensions/stackgl-resize-drawing-buffer'),\n    getSTACKGLResizeDrawingBuffer = _require6.getSTACKGLResizeDrawingBuffer;\n\nvar _require7 = require('./extensions/webgl-draw-buffers'),\n    getWebGLDrawBuffers = _require7.getWebGLDrawBuffers;\n\nvar _require8 = require('./utils'),\n    bindPublics = _require8.bindPublics,\n    checkObject = _require8.checkObject,\n    checkUniform = _require8.checkUniform,\n    formatSize = _require8.formatSize,\n    isValidString = _require8.isValidString,\n    typeSize = _require8.typeSize,\n    uniformTypeSize = _require8.uniformTypeSize,\n    extractImageData = _require8.extractImageData,\n    vertexCount = _require8.vertexCount,\n    isTypedArray = _require8.isTypedArray,\n    unpackTypedArray = _require8.unpackTypedArray,\n    convertPixels = _require8.convertPixels,\n    checkFormat = _require8.checkFormat,\n    validCubeTarget = _require8.validCubeTarget;\n\nvar _require9 = require('./webgl-active-info'),\n    WebGLActiveInfo = _require9.WebGLActiveInfo;\n\nvar _require10 = require('./webgl-framebuffer'),\n    WebGLFramebuffer = _require10.WebGLFramebuffer;\n\nvar _require11 = require('./webgl-buffer'),\n    WebGLBuffer = _require11.WebGLBuffer;\n\nvar _require12 = require('./webgl-drawing-buffer-wrapper'),\n    WebGLDrawingBufferWrapper = _require12.WebGLDrawingBufferWrapper;\n\nvar _require13 = require('./webgl-program'),\n    WebGLProgram = _require13.WebGLProgram;\n\nvar _require14 = require('./webgl-renderbuffer'),\n    WebGLRenderbuffer = _require14.WebGLRenderbuffer;\n\nvar _require15 = require('./webgl-shader'),\n    WebGLShader = _require15.WebGLShader;\n\nvar _require16 = require('./webgl-shader-precision-format'),\n    WebGLShaderPrecisionFormat = _require16.WebGLShaderPrecisionFormat;\n\nvar _require17 = require('./webgl-texture'),\n    WebGLTexture = _require17.WebGLTexture;\n\nvar _require18 = require('./webgl-uniform-location'),\n    WebGLUniformLocation = _require18.WebGLUniformLocation; // These are defined by the WebGL spec\n\n\nvar MAX_UNIFORM_LENGTH = 256;\nvar MAX_ATTRIBUTE_LENGTH = 256;\nvar DEFAULT_ATTACHMENTS = [gl.COLOR_ATTACHMENT0, gl.DEPTH_ATTACHMENT, gl.STENCIL_ATTACHMENT, gl.DEPTH_STENCIL_ATTACHMENT];\nvar DEFAULT_COLOR_ATTACHMENTS = [gl.COLOR_ATTACHMENT0];\nvar availableExtensions = {\n  angle_instanced_arrays: getANGLEInstancedArrays,\n  oes_element_index_uint: getOESElementIndexUint,\n  oes_texture_float: getOESTextureFloat,\n  stackgl_destroy_context: getSTACKGLDestroyContext,\n  stackgl_resize_drawingbuffer: getSTACKGLResizeDrawingBuffer,\n  webgl_draw_buffers: getWebGLDrawBuffers\n};\nvar privateMethods = ['resize', 'destroy'];\n\nfunction wrapContext(ctx) {\n  var wrapper = new WebGLRenderingContext();\n  bindPublics(Object.keys(ctx), wrapper, ctx, privateMethods);\n  bindPublics(Object.keys(ctx.constructor.prototype), wrapper, ctx, privateMethods);\n  bindPublics(Object.getOwnPropertyNames(ctx), wrapper, ctx, privateMethods);\n  bindPublics(Object.getOwnPropertyNames(ctx.constructor.prototype), wrapper, ctx, privateMethods);\n  Object.defineProperties(wrapper, {\n    drawingBufferWidth: {\n      get: function get() {\n        return ctx.drawingBufferWidth;\n      },\n      set: function set(value) {\n        ctx.drawingBufferWidth = value;\n      }\n    },\n    drawingBufferHeight: {\n      get: function get() {\n        return ctx.drawingBufferHeight;\n      },\n      set: function set(value) {\n        ctx.drawingBufferHeight = value;\n      }\n    }\n  });\n  return wrapper;\n} // We need to wrap some of the native WebGL functions to handle certain error codes and check input values\n\n\nvar WebGLRenderingContext =\n/*#__PURE__*/\nfunction (_NativeWebGLRendering) {\n  \"use strict\";\n\n  _inherits(WebGLRenderingContext, _NativeWebGLRendering);\n\n  function WebGLRenderingContext() {\n    _classCallCheck(this, WebGLRenderingContext);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLRenderingContext).apply(this, arguments));\n  }\n\n  _createClass(WebGLRenderingContext, [{\n    key: \"_checkDimensions\",\n    value: function _checkDimensions(target, width, height, level) {\n      if (level < 0 || width < 0 || height < 0) {\n        this.setError(gl.INVALID_VALUE);\n        return false;\n      }\n\n      if (target === gl.TEXTURE_2D) {\n        if (width > this._maxTextureSize || height > this._maxTextureSize || level > this._maxTextureLevel) {\n          this.setError(gl.INVALID_VALUE);\n          return false;\n        }\n      } else if (this._validCubeTarget(target)) {\n        if (width > this._maxCubeMapSize || height > this._maxCubeMapSize || level > this._maxCubeMapLevel) {\n          this.setError(gl.INVALID_VALUE);\n          return false;\n        }\n      } else {\n        this.setError(gl.INVALID_ENUM);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_checkLocation\",\n    value: function _checkLocation(location) {\n      if (!(location instanceof WebGLUniformLocation)) {\n        this.setError(gl.INVALID_VALUE);\n        return false;\n      } else if (location._program._ctx !== this || location._linkCount !== location._program._linkCount) {\n        this.setError(gl.INVALID_OPERATION);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_checkLocationActive\",\n    value: function _checkLocationActive(location) {\n      if (!location) {\n        return false;\n      } else if (!this._checkLocation(location)) {\n        return false;\n      } else if (location._program !== this._activeProgram) {\n        this.setError(gl.INVALID_OPERATION);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_checkOwns\",\n    value: function _checkOwns(object) {\n      return typeof object === 'object' && object._ctx === this;\n    }\n  }, {\n    key: \"_checkShaderSource\",\n    value: function _checkShaderSource(shader) {\n      var source = shader._source;\n      var tokens = tokenize(source);\n      var errorStatus = false;\n      var errorLog = [];\n\n      for (var i = 0; i < tokens.length; ++i) {\n        var tok = tokens[i];\n\n        switch (tok.type) {\n          case 'ident':\n            if (!this._validGLSLIdentifier(tok.data)) {\n              errorStatus = true;\n              errorLog.push(tok.line + ':' + tok.column + ' invalid identifier - ' + tok.data);\n            }\n\n            break;\n\n          case 'preprocessor':\n            var bodyToks = tokenize(tok.data.match(/^\\s*#\\s*(.*)$/)[1]);\n\n            for (var j = 0; j < bodyToks.length; ++j) {\n              var btok = bodyToks[j];\n\n              if (btok.type === 'ident' || btok.type === void 0) {\n                if (!this._validGLSLIdentifier(btok.data)) {\n                  errorStatus = true;\n                  errorLog.push(tok.line + ':' + btok.column + ' invalid identifier - ' + btok.data);\n                }\n              }\n            }\n\n            break;\n\n          case 'keyword':\n            switch (tok.data) {\n              case 'do':\n                errorStatus = true;\n                errorLog.push(tok.line + ':' + tok.column + ' do not supported');\n                break;\n            }\n\n            break;\n        }\n      }\n\n      if (errorStatus) {\n        shader._compileInfo = errorLog.join('\\n');\n      }\n\n      return !errorStatus;\n    }\n  }, {\n    key: \"_checkStencilState\",\n    value: function _checkStencilState() {\n      if (this.getParameter(gl.STENCIL_WRITEMASK) !== this.getParameter(gl.STENCIL_BACK_WRITEMASK) || this.getParameter(gl.STENCIL_VALUE_MASK) !== this.getParameter(gl.STENCIL_BACK_VALUE_MASK) || this.getParameter(gl.STENCIL_REF) !== this.getParameter(gl.STENCIL_BACK_REF)) {\n        this.setError(gl.INVALID_OPERATION);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_checkTextureTarget\",\n    value: function _checkTextureTarget(target) {\n      var unit = this._getActiveTextureUnit();\n\n      var tex = null;\n\n      if (target === gl.TEXTURE_2D) {\n        tex = unit._bind2D;\n      } else if (target === gl.TEXTURE_CUBE_MAP) {\n        tex = unit._bindCube;\n      } else {\n        this.setError(gl.INVALID_ENUM);\n        return false;\n      }\n\n      if (!tex) {\n        this.setError(gl.INVALID_OPERATION);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_checkWrapper\",\n    value: function _checkWrapper(object, Wrapper) {\n      if (!this._checkValid(object, Wrapper)) {\n        this.setError(gl.INVALID_VALUE);\n        return false;\n      } else if (!this._checkOwns(object)) {\n        this.setError(gl.INVALID_OPERATION);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_checkValid\",\n    value: function _checkValid(object, Type) {\n      return object instanceof Type && object._ !== 0;\n    }\n  }, {\n    key: \"_checkVertexAttribState\",\n    value: function _checkVertexAttribState(maxIndex) {\n      var program = this._activeProgram;\n\n      if (!program) {\n        this.setError(gl.INVALID_OPERATION);\n        return false;\n      }\n\n      var attribs = this._vertexAttribs;\n\n      for (var i = 0; i < attribs.length; ++i) {\n        var attrib = attribs[i];\n\n        if (attrib._isPointer) {\n          var buffer = attrib._pointerBuffer;\n\n          if (!buffer) {\n            this.setError(gl.INVALID_OPERATION);\n            return false;\n          }\n\n          if (program._attributes.indexOf(i) >= 0) {\n            var maxByte = 0;\n\n            if (attrib._divisor) {\n              maxByte = attrib._pointerSize + attrib._pointerOffset;\n            } else {\n              maxByte = attrib._pointerStride * maxIndex + attrib._pointerSize + attrib._pointerOffset;\n            }\n\n            if (maxByte > buffer._size) {\n              this.setError(gl.INVALID_OPERATION);\n              return false;\n            }\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_checkVertexIndex\",\n    value: function _checkVertexIndex(index) {\n      if (index < 0 || index >= this._vertexAttribs.length) {\n        this.setError(gl.INVALID_VALUE);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_computePixelSize\",\n    value: function _computePixelSize(type, internalFormat) {\n      var pixelSize = formatSize(internalFormat);\n\n      if (pixelSize === 0) {\n        this.setError(gl.INVALID_ENUM);\n        return 0;\n      }\n\n      switch (type) {\n        case gl.UNSIGNED_BYTE:\n          return pixelSize;\n\n        case gl.UNSIGNED_SHORT_5_6_5:\n          if (internalFormat !== gl.RGB) {\n            this.setError(gl.INVALID_OPERATION);\n            break;\n          }\n\n          return 2;\n\n        case gl.UNSIGNED_SHORT_4_4_4_4:\n        case gl.UNSIGNED_SHORT_5_5_5_1:\n          if (internalFormat !== gl.RGBA) {\n            this.setError(gl.INVALID_OPERATION);\n            break;\n          }\n\n          return 2;\n\n        case gl.FLOAT:\n          return 1;\n      }\n\n      this.setError(gl.INVALID_ENUM);\n      return 0;\n    }\n  }, {\n    key: \"_computeRowStride\",\n    value: function _computeRowStride(width, pixelSize) {\n      var rowStride = width * pixelSize;\n\n      if (rowStride % this._unpackAlignment) {\n        rowStride += this._unpackAlignment - rowStride % this._unpackAlignment;\n      }\n\n      return rowStride;\n    }\n  }, {\n    key: \"_fixupLink\",\n    value: function _fixupLink(program) {\n      if (!_get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getProgramParameter\", this).call(this, program._, gl.LINK_STATUS)) {\n        program._linkInfoLog = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getProgramInfoLog\", this).call(this, program);\n        return false;\n      } // Record attribute attributeLocations\n\n\n      var numAttribs = this.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n      var names = new Array(numAttribs);\n      program._attributes.length = numAttribs;\n\n      for (var i = 0; i < numAttribs; ++i) {\n        names[i] = this.getActiveAttrib(program, i).name;\n        program._attributes[i] = this.getAttribLocation(program, names[i]) | 0;\n      } // Check attribute names\n\n\n      for (var _i = 0; _i < names.length; ++_i) {\n        if (names[_i].length > MAX_ATTRIBUTE_LENGTH) {\n          program._linkInfoLog = 'attribute ' + names[_i] + ' is too long';\n          return false;\n        }\n      }\n\n      for (var _i2 = 0; _i2 < numAttribs; ++_i2) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindAttribLocation\", this).call(this, program._ | 0, program._attributes[_i2], names[_i2]);\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"linkProgram\", this).call(this, program._ | 0);\n\n      var numUniforms = this.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n      program._uniforms.length = numUniforms;\n\n      for (var _i3 = 0; _i3 < numUniforms; ++_i3) {\n        program._uniforms[_i3] = this.getActiveUniform(program, _i3);\n      } // Check attribute and uniform name lengths\n\n\n      for (var _i4 = 0; _i4 < program._uniforms.length; ++_i4) {\n        if (program._uniforms[_i4].name.length > MAX_UNIFORM_LENGTH) {\n          program._linkInfoLog = 'uniform ' + program._uniforms[_i4].name + ' is too long';\n          return false;\n        }\n      }\n\n      program._linkInfoLog = '';\n      return true;\n    }\n  }, {\n    key: \"_framebufferOk\",\n    value: function _framebufferOk() {\n      var framebuffer = this._activeFramebuffer;\n\n      if (framebuffer && this._preCheckFramebufferStatus(framebuffer) !== gl.FRAMEBUFFER_COMPLETE) {\n        this.setError(gl.INVALID_FRAMEBUFFER_OPERATION);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_getActiveBuffer\",\n    value: function _getActiveBuffer(target) {\n      if (target === gl.ARRAY_BUFFER) {\n        return this._activeArrayBuffer;\n      } else if (target === gl.ELEMENT_ARRAY_BUFFER) {\n        return this._activeElementArrayBuffer;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getActiveTextureUnit\",\n    value: function _getActiveTextureUnit() {\n      return this._textureUnits[this._activeTextureUnit];\n    }\n  }, {\n    key: \"_getActiveTexture\",\n    value: function _getActiveTexture(target) {\n      var activeUnit = this._getActiveTextureUnit();\n\n      if (target === gl.TEXTURE_2D) {\n        return activeUnit._bind2D;\n      } else if (target === gl.TEXTURE_CUBE_MAP) {\n        return activeUnit._bindCube;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getAttachments\",\n    value: function _getAttachments() {\n      return this._extensions.webgl_draw_buffers ? this._extensions.webgl_draw_buffers._ALL_ATTACHMENTS : DEFAULT_ATTACHMENTS;\n    }\n  }, {\n    key: \"_getColorAttachments\",\n    value: function _getColorAttachments() {\n      return this._extensions.webgl_draw_buffers ? this._extensions.webgl_draw_buffers._ALL_COLOR_ATTACHMENTS : DEFAULT_COLOR_ATTACHMENTS;\n    }\n  }, {\n    key: \"_getParameterDirect\",\n    value: function _getParameterDirect(pname) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname);\n    }\n  }, {\n    key: \"_getTexImage\",\n    value: function _getTexImage(target) {\n      var unit = this._getActiveTextureUnit();\n\n      if (target === gl.TEXTURE_2D) {\n        return unit._bind2D;\n      } else if (validCubeTarget(target)) {\n        return unit._bindCube;\n      }\n\n      this.setError(gl.INVALID_ENUM);\n      return null;\n    }\n  }, {\n    key: \"_preCheckFramebufferStatus\",\n    value: function _preCheckFramebufferStatus(framebuffer) {\n      var attachments = framebuffer._attachments;\n      var width = [];\n      var height = [];\n      var depthAttachment = attachments[gl.DEPTH_ATTACHMENT];\n      var depthStencilAttachment = attachments[gl.DEPTH_STENCIL_ATTACHMENT];\n      var stencilAttachment = attachments[gl.STENCIL_ATTACHMENT];\n\n      if (depthStencilAttachment && (stencilAttachment || depthAttachment) || stencilAttachment && depthAttachment) {\n        return gl.FRAMEBUFFER_UNSUPPORTED;\n      }\n\n      var colorAttachments = this._getColorAttachments();\n\n      var colorAttachmentCount = 0;\n\n      for (var attachmentEnum in attachments) {\n        if (attachments[attachmentEnum] && colorAttachments.indexOf(attachmentEnum * 1) !== -1) {\n          colorAttachmentCount++;\n        }\n      }\n\n      if (colorAttachmentCount === 0) {\n        return gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;\n      }\n\n      if (depthStencilAttachment instanceof WebGLTexture) {\n        return gl.FRAMEBUFFER_UNSUPPORTED;\n      } else if (depthStencilAttachment instanceof WebGLRenderbuffer) {\n        if (depthStencilAttachment._format !== gl.DEPTH_STENCIL) {\n          return gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;\n        }\n\n        width.push(depthStencilAttachment._width);\n        height.push(depthStencilAttachment._height);\n      }\n\n      if (depthAttachment instanceof WebGLTexture) {\n        return gl.FRAMEBUFFER_UNSUPPORTED;\n      } else if (depthAttachment instanceof WebGLRenderbuffer) {\n        if (depthAttachment._format !== gl.DEPTH_COMPONENT16) {\n          return gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;\n        }\n\n        width.push(depthAttachment._width);\n        height.push(depthAttachment._height);\n      }\n\n      if (stencilAttachment instanceof WebGLTexture) {\n        return gl.FRAMEBUFFER_UNSUPPORTED;\n      } else if (stencilAttachment instanceof WebGLRenderbuffer) {\n        if (stencilAttachment._format !== gl.STENCIL_INDEX8) {\n          return gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;\n        }\n\n        width.push(stencilAttachment._width);\n        height.push(stencilAttachment._height);\n      }\n\n      var colorAttached = false;\n\n      for (var i = 0; i < colorAttachments.length; ++i) {\n        var colorAttachment = attachments[colorAttachments[i]];\n\n        if (colorAttachment instanceof WebGLTexture) {\n          if (colorAttachment._format !== gl.RGBA || !(colorAttachment._type === gl.UNSIGNED_BYTE || colorAttachment._type === gl.FLOAT)) {\n            return gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;\n          }\n\n          colorAttached = true;\n          var level = framebuffer._attachmentLevel[gl.COLOR_ATTACHMENT0];\n          width.push(colorAttachment._levelWidth[level]);\n          height.push(colorAttachment._levelHeight[level]);\n        } else if (colorAttachment instanceof WebGLRenderbuffer) {\n          var format = colorAttachment._format;\n\n          if (format !== gl.RGBA4 && format !== gl.RGB565 && format !== gl.RGB5_A1) {\n            return gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;\n          }\n\n          colorAttached = true;\n          width.push(colorAttachment._width);\n          height.push(colorAttachment._height);\n        }\n      }\n\n      if (!colorAttached && !stencilAttachment && !depthAttachment && !depthStencilAttachment) {\n        return gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;\n      }\n\n      if (width.length <= 0 || height.length <= 0) {\n        return gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;\n      }\n\n      for (var _i5 = 1; _i5 < width.length; ++_i5) {\n        if (width[_i5 - 1] !== width[_i5] || height[_i5 - 1] !== height[_i5]) {\n          return gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS;\n        }\n      }\n\n      if (width[0] === 0 || height[0] === 0) {\n        return gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;\n      }\n\n      framebuffer._width = width[0];\n      framebuffer._height = height[0];\n      return gl.FRAMEBUFFER_COMPLETE;\n    }\n  }, {\n    key: \"_isConstantBlendFunc\",\n    value: function _isConstantBlendFunc(factor) {\n      return factor === gl.CONSTANT_COLOR || factor === gl.ONE_MINUS_CONSTANT_COLOR || factor === gl.CONSTANT_ALPHA || factor === gl.ONE_MINUS_CONSTANT_ALPHA;\n    }\n  }, {\n    key: \"_isObject\",\n    value: function _isObject(object, method, Wrapper) {\n      if (!(object === null || object === void 0) && !(object instanceof Wrapper)) {\n        throw new TypeError(method + '(' + Wrapper.name + ')');\n      }\n\n      if (this._checkValid(object, Wrapper) && this._checkOwns(object)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_resizeDrawingBuffer\",\n    value: function _resizeDrawingBuffer(width, height) {\n      var prevFramebuffer = this._activeFramebuffer;\n\n      var prevTexture = this._getActiveTexture(gl.TEXTURE_2D);\n\n      var prevRenderbuffer = this._activeRenderbuffer;\n      var contextAttributes = this._contextAttributes;\n      var drawingBuffer = this._drawingBuffer;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindFramebuffer\", this).call(this, gl.FRAMEBUFFER, drawingBuffer._framebuffer);\n\n      var attachments = this._getAttachments(); // Clear all attachments\n\n\n      for (var i = 0; i < attachments.length; ++i) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"framebufferTexture2D\", this).call(this, gl.FRAMEBUFFER, attachments[i], gl.TEXTURE_2D, 0, 0);\n      } // Update color attachment\n\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindTexture\", this).call(this, gl.TEXTURE_2D, drawingBuffer._color);\n\n      var colorFormat = contextAttributes.alpha ? gl.RGBA : gl.RGB;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"texImage2D\", this).call(this, gl.TEXTURE_2D, 0, colorFormat, width, height, 0, colorFormat, gl.UNSIGNED_BYTE, null);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"texParameteri\", this).call(this, gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"texParameteri\", this).call(this, gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"framebufferTexture2D\", this).call(this, gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, drawingBuffer._color, 0); // Update depth-stencil attachments if needed\n\n\n      var storage = 0;\n      var attachment = 0;\n\n      if (contextAttributes.depth && contextAttributes.stencil) {\n        storage = gl.DEPTH_STENCIL;\n        attachment = gl.DEPTH_STENCIL_ATTACHMENT;\n      } else if (contextAttributes.depth) {\n        storage = 0x81A7;\n        attachment = gl.DEPTH_ATTACHMENT;\n      } else if (contextAttributes.stencil) {\n        storage = gl.STENCIL_INDEX8;\n        attachment = gl.STENCIL_ATTACHMENT;\n      }\n\n      if (storage) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindRenderbuffer\", this).call(this, gl.RENDERBUFFER, drawingBuffer._depthStencil);\n\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"renderbufferStorage\", this).call(this, gl.RENDERBUFFER, storage, width, height);\n\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"framebufferRenderbuffer\", this).call(this, gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, drawingBuffer._depthStencil);\n      } // Restore previous binding state\n\n\n      this.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer);\n      this.bindTexture(gl.TEXTURE_2D, prevTexture);\n      this.bindRenderbuffer(gl.RENDERBUFFER, prevRenderbuffer);\n    }\n  }, {\n    key: \"_restoreError\",\n    value: function _restoreError(lastError) {\n      var topError = this._errorStack.pop();\n\n      if (topError === gl.NO_ERROR) {\n        this.setError(lastError);\n      } else {\n        this.setError(topError);\n      }\n    }\n  }, {\n    key: \"_saveError\",\n    value: function _saveError() {\n      this._errorStack.push(this.getError());\n    }\n  }, {\n    key: \"_switchActiveBuffer\",\n    value: function _switchActiveBuffer(active, buffer) {\n      if (active !== buffer) {\n        if (active) {\n          active._refCount -= 1;\n\n          active._checkDelete();\n        }\n\n        if (buffer) {\n          buffer._refCount += 1;\n        }\n      }\n    }\n  }, {\n    key: \"_switchActiveProgram\",\n    value: function _switchActiveProgram(active) {\n      if (active) {\n        active._refCount -= 1;\n\n        active._checkDelete();\n      }\n    }\n  }, {\n    key: \"_tryDetachFramebuffer\",\n    value: function _tryDetachFramebuffer(framebuffer, renderbuffer) {\n      // FIXME: Does the texture get unbound from *all* framebuffers, or just the\n      // active FBO?\n      if (framebuffer && framebuffer._linked(renderbuffer)) {\n        var attachments = this._getAttachments();\n\n        var framebufferAttachments = Object.keys(framebuffer._attachments);\n\n        for (var i = 0; i < framebufferAttachments.length; ++i) {\n          if (framebuffer._attachments[attachments[i]] === renderbuffer) {\n            this.framebufferTexture2D(gl.FRAMEBUFFER, attachments[i] | 0, gl.TEXTURE_2D, null);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateFramebufferAttachments\",\n    value: function _updateFramebufferAttachments(framebuffer) {\n      var prevStatus = framebuffer._status;\n\n      var attachments = this._getAttachments();\n\n      framebuffer._status = this._preCheckFramebufferStatus(framebuffer);\n\n      if (framebuffer._status !== gl.FRAMEBUFFER_COMPLETE) {\n        if (prevStatus === gl.FRAMEBUFFER_COMPLETE) {\n          for (var i = 0; i < attachments.length; ++i) {\n            var attachmentEnum = attachments[i];\n\n            _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"framebufferTexture2D\", this).call(this, gl.FRAMEBUFFER, attachmentEnum, framebuffer._attachmentFace[attachmentEnum], 0, framebuffer._attachmentLevel[attachmentEnum]);\n          }\n        }\n\n        return;\n      }\n\n      for (var _i6 = 0; _i6 < attachments.length; ++_i6) {\n        var _attachmentEnum = attachments[_i6];\n\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"framebufferTexture2D\", this).call(this, gl.FRAMEBUFFER, _attachmentEnum, framebuffer._attachmentFace[_attachmentEnum], 0, framebuffer._attachmentLevel[_attachmentEnum]);\n      }\n\n      for (var _i7 = 0; _i7 < attachments.length; ++_i7) {\n        var _attachmentEnum2 = attachments[_i7];\n        var attachment = framebuffer._attachments[_attachmentEnum2];\n\n        if (attachment instanceof WebGLTexture) {\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"framebufferTexture2D\", this).call(this, gl.FRAMEBUFFER, _attachmentEnum2, framebuffer._attachmentFace[_attachmentEnum2], attachment._ | 0, framebuffer._attachmentLevel[_attachmentEnum2]);\n        } else if (attachment instanceof WebGLRenderbuffer) {\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"framebufferRenderbuffer\", this).call(this, gl.FRAMEBUFFER, _attachmentEnum2, gl.RENDERBUFFER, attachment._ | 0);\n        }\n      }\n    }\n  }, {\n    key: \"_validBlendFunc\",\n    value: function _validBlendFunc(factor) {\n      return factor === gl.ZERO || factor === gl.ONE || factor === gl.SRC_COLOR || factor === gl.ONE_MINUS_SRC_COLOR || factor === gl.DST_COLOR || factor === gl.ONE_MINUS_DST_COLOR || factor === gl.SRC_ALPHA || factor === gl.ONE_MINUS_SRC_ALPHA || factor === gl.DST_ALPHA || factor === gl.ONE_MINUS_DST_ALPHA || factor === gl.SRC_ALPHA_SATURATE || factor === gl.CONSTANT_COLOR || factor === gl.ONE_MINUS_CONSTANT_COLOR || factor === gl.CONSTANT_ALPHA || factor === gl.ONE_MINUS_CONSTANT_ALPHA;\n    }\n  }, {\n    key: \"_validBlendMode\",\n    value: function _validBlendMode(mode) {\n      return mode === gl.FUNC_ADD || mode === gl.FUNC_SUBTRACT || mode === gl.FUNC_REVERSE_SUBTRACT;\n    }\n  }, {\n    key: \"_validCubeTarget\",\n    value: function _validCubeTarget(target) {\n      return target === gl.TEXTURE_CUBE_MAP_POSITIVE_X || target === gl.TEXTURE_CUBE_MAP_NEGATIVE_X || target === gl.TEXTURE_CUBE_MAP_POSITIVE_Y || target === gl.TEXTURE_CUBE_MAP_NEGATIVE_Y || target === gl.TEXTURE_CUBE_MAP_POSITIVE_Z || target === gl.TEXTURE_CUBE_MAP_NEGATIVE_Z;\n    }\n  }, {\n    key: \"_validFramebufferAttachment\",\n    value: function _validFramebufferAttachment(attachment) {\n      switch (attachment) {\n        case gl.DEPTH_ATTACHMENT:\n        case gl.STENCIL_ATTACHMENT:\n        case gl.DEPTH_STENCIL_ATTACHMENT:\n        case gl.COLOR_ATTACHMENT0:\n          return true;\n      }\n\n      if (this._extensions.webgl_draw_buffers) {\n        // eslint-disable-line\n        var webgl_draw_buffers = this._extensions.webgl_draw_buffers; // eslint-disable-line\n\n        return attachment < webgl_draw_buffers.COLOR_ATTACHMENT0_WEBGL + webgl_draw_buffers._maxDrawBuffers; // eslint-disable-line\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_validGLSLIdentifier\",\n    value: function _validGLSLIdentifier(str) {\n      return !(str.indexOf('webgl_') === 0 || str.indexOf('_webgl_') === 0 || str.length > 256);\n    }\n  }, {\n    key: \"_validTextureTarget\",\n    value: function _validTextureTarget(target) {\n      return target === gl.TEXTURE_2D || target === gl.TEXTURE_CUBE_MAP;\n    }\n  }, {\n    key: \"_verifyTextureCompleteness\",\n    value: function _verifyTextureCompleteness(target, pname, param) {\n      var unit = this._getActiveTextureUnit();\n\n      var texture = null;\n\n      if (target === gl.TEXTURE_2D) {\n        texture = unit._bind2D;\n      } else if (this._validCubeTarget(target)) {\n        texture = unit._bindCube;\n      } // oes_texture_float\n\n\n      if (this._extensions.oes_texture_float && texture && texture._type === gl.FLOAT && (pname === gl.TEXTURE_MAG_FILTER || pname === gl.TEXTURE_MIN_FILTER) && (param === gl.LINEAR || param === gl.LINEAR_MIPMAP_NEAREST || param === gl.NEAREST_MIPMAP_LINEAR || param === gl.LINEAR_MIPMAP_LINEAR)) {\n        texture._complete = false;\n        this.bindTexture(target, texture);\n        return;\n      }\n\n      if (texture && texture._complete === false) {\n        texture._complete = true;\n        this.bindTexture(target, texture);\n      }\n    }\n  }, {\n    key: \"_wrapShader\",\n    value: function _wrapShader(type, source) {\n      // eslint-disable-line\n      if (this._extensions.webgl_draw_buffers) {\n        // eslint-disable-line\n        return source;\n      }\n\n      return this._extensions.webgl_draw_buffers ? source : '#define gl_MaxDrawBuffers 1\\n' + source; // eslint-disable-line\n    }\n  }, {\n    key: \"_beginAttrib0Hack\",\n    value: function _beginAttrib0Hack() {\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindBuffer\", this).call(this, gl.ARRAY_BUFFER, this._attrib0Buffer._);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bufferData\", this).call(this, gl.ARRAY_BUFFER, this._vertexAttribs[0]._data, gl.STREAM_DRAW);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"enableVertexAttribArray\", this).call(this, 0);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttribPointer\", this).call(this, 0, 4, gl.FLOAT, false, 0, 0);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"_vertexAttribDivisor\", this).call(this, 0, 1);\n    }\n  }, {\n    key: \"_endAttrib0Hack\",\n    value: function _endAttrib0Hack() {\n      var attrib = this._vertexAttribs[0];\n\n      if (attrib._pointerBuffer) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindBuffer\", this).call(this, gl.ARRAY_BUFFER, attrib._pointerBuffer._);\n      } else {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindBuffer\", this).call(this, gl.ARRAY_BUFFER, 0);\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttribPointer\", this).call(this, 0, attrib._inputSize, attrib._pointerType, attrib._pointerNormal, attrib._inputStride, attrib._pointerOffset);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"_vertexAttribDivisor\", this).call(this, 0, attrib._divisor);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"disableVertexAttribArray\", this).call(this, 0);\n\n      if (this._activeArrayBuffer) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindBuffer\", this).call(this, gl.ARRAY_BUFFER, this._activeArrayBuffer._);\n      } else {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindBuffer\", this).call(this, gl.ARRAY_BUFFER, 0);\n      }\n    }\n  }, {\n    key: \"activeTexture\",\n    value: function activeTexture(texture) {\n      texture |= 0;\n      var texNum = texture - gl.TEXTURE0;\n\n      if (texNum >= 0 && texNum < this._textureUnits.length) {\n        this._activeTextureUnit = texNum;\n        return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"activeTexture\", this).call(this, texture);\n      }\n\n      this.setError(gl.INVALID_ENUM);\n    }\n  }, {\n    key: \"attachShader\",\n    value: function attachShader(program, shader) {\n      if (!checkObject(program) || !checkObject(shader)) {\n        throw new TypeError('attachShader(WebGLProgram, WebGLShader)');\n      }\n\n      if (!program || !shader) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      } else if (program instanceof WebGLProgram && shader instanceof WebGLShader && this._checkOwns(program) && this._checkOwns(shader)) {\n        if (!program._linked(shader)) {\n          this._saveError();\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"attachShader\", this).call(this, program._ | 0, shader._ | 0);\n\n          var error = this.getError();\n\n          this._restoreError(error);\n\n          if (error === gl.NO_ERROR) {\n            program._link(shader);\n          }\n\n          return;\n        }\n      }\n\n      this.setError(gl.INVALID_OPERATION);\n    }\n  }, {\n    key: \"bindAttribLocation\",\n    value: function bindAttribLocation(program, index, name) {\n      if (!checkObject(program) || typeof name !== 'string') {\n        throw new TypeError('bindAttribLocation(WebGLProgram, GLint, String)');\n      }\n\n      name += '';\n\n      if (!isValidString(name) || name.length > MAX_ATTRIBUTE_LENGTH) {\n        this.setError(gl.INVALID_VALUE);\n      } else if (/^_?webgl_a/.test(name)) {\n        this.setError(gl.INVALID_OPERATION);\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindAttribLocation\", this).call(this, program._ | 0, index | 0, name);\n      }\n    }\n  }, {\n    key: \"bindFramebuffer\",\n    value: function bindFramebuffer(target, framebuffer) {\n      if (!checkObject(framebuffer)) {\n        throw new TypeError('bindFramebuffer(GLenum, WebGLFramebuffer)');\n      }\n\n      if (target !== gl.FRAMEBUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (!framebuffer) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindFramebuffer\", this).call(this, gl.FRAMEBUFFER, this._drawingBuffer._framebuffer);\n      } else if (framebuffer._pendingDelete) {\n        return;\n      } else if (this._checkWrapper(framebuffer, WebGLFramebuffer)) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindFramebuffer\", this).call(this, gl.FRAMEBUFFER, framebuffer._ | 0);\n      } else {\n        return;\n      }\n\n      var activeFramebuffer = this._activeFramebuffer;\n\n      if (activeFramebuffer !== framebuffer) {\n        if (activeFramebuffer) {\n          activeFramebuffer._refCount -= 1;\n\n          activeFramebuffer._checkDelete();\n        }\n\n        if (framebuffer) {\n          framebuffer._refCount += 1;\n        }\n      }\n\n      this._activeFramebuffer = framebuffer;\n\n      if (framebuffer) {\n        this._updateFramebufferAttachments(framebuffer);\n      }\n    }\n  }, {\n    key: \"bindBuffer\",\n    value: function bindBuffer(target, buffer) {\n      target |= 0;\n\n      if (!checkObject(buffer)) {\n        throw new TypeError('bindBuffer(GLenum, WebGLBuffer)');\n      }\n\n      if (target !== gl.ARRAY_BUFFER && target !== gl.ELEMENT_ARRAY_BUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (!buffer) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindBuffer\", this).call(this, target, 0);\n      } else if (buffer._pendingDelete) {\n        return;\n      } else if (this._checkWrapper(buffer, WebGLBuffer)) {\n        if (buffer._binding && buffer._binding !== target) {\n          this.setError(gl.INVALID_OPERATION);\n          return;\n        }\n\n        buffer._binding = target | 0;\n\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindBuffer\", this).call(this, target, buffer._ | 0);\n      } else {\n        return;\n      }\n\n      if (target === gl.ARRAY_BUFFER) {\n        this._switchActiveBuffer(this._activeArrayBuffer, buffer);\n\n        this._activeArrayBuffer = buffer;\n      } else {\n        this._switchActiveBuffer(this._activeElementArrayBuffer, buffer);\n\n        this._activeElementArrayBuffer = buffer;\n      }\n    }\n  }, {\n    key: \"bindRenderbuffer\",\n    value: function bindRenderbuffer(target, object) {\n      if (!checkObject(object)) {\n        throw new TypeError('bindRenderbuffer(GLenum, WebGLRenderbuffer)');\n      }\n\n      if (target !== gl.RENDERBUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (!object) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindRenderbuffer\", this).call(this, target | 0, 0);\n      } else if (object._pendingDelete) {\n        return;\n      } else if (this._checkWrapper(object, WebGLRenderbuffer)) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindRenderbuffer\", this).call(this, target | 0, object._ | 0);\n      } else {\n        return;\n      }\n\n      var active = this._activeRenderbuffer;\n\n      if (active !== object) {\n        if (active) {\n          active._refCount -= 1;\n\n          active._checkDelete();\n        }\n\n        if (object) {\n          object._refCount += 1;\n        }\n      }\n\n      this._activeRenderbuffer = object;\n    }\n  }, {\n    key: \"bindTexture\",\n    value: function bindTexture(target, texture) {\n      target |= 0;\n\n      if (!checkObject(texture)) {\n        throw new TypeError('bindTexture(GLenum, WebGLTexture)');\n      }\n\n      if (!this._validTextureTarget(target)) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      } // Get texture id\n\n\n      var textureId = 0;\n\n      if (!texture) {\n        texture = null;\n      } else if (texture instanceof WebGLTexture && texture._pendingDelete) {\n        // Special case: error codes for deleted textures don't get set for some dumb reason\n        return;\n      } else if (this._checkWrapper(texture, WebGLTexture)) {\n        // Check binding mode of texture\n        if (texture._binding && texture._binding !== target) {\n          this.setError(gl.INVALID_OPERATION);\n          return;\n        }\n\n        texture._binding = target;\n\n        if (texture._complete) {\n          textureId = texture._ | 0;\n        }\n      } else {\n        return;\n      }\n\n      this._saveError();\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bindTexture\", this).call(this, target, textureId);\n\n      var error = this.getError();\n\n      this._restoreError(error);\n\n      if (error !== gl.NO_ERROR) {\n        return;\n      }\n\n      var activeUnit = this._getActiveTextureUnit();\n\n      var activeTex = this._getActiveTexture(target); // Update references\n\n\n      if (activeTex !== texture) {\n        if (activeTex) {\n          activeTex._refCount -= 1;\n\n          activeTex._checkDelete();\n        }\n\n        if (texture) {\n          texture._refCount += 1;\n        }\n      }\n\n      if (target === gl.TEXTURE_2D) {\n        activeUnit._bind2D = texture;\n      } else if (target === gl.TEXTURE_CUBE_MAP) {\n        activeUnit._bindCube = texture;\n      }\n    }\n  }, {\n    key: \"blendColor\",\n    value: function blendColor(red, green, blue, alpha) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"blendColor\", this).call(this, +red, +green, +blue, +alpha);\n    }\n  }, {\n    key: \"blendEquation\",\n    value: function blendEquation(mode) {\n      mode |= 0;\n\n      if (this._validBlendMode(mode)) {\n        return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"blendEquation\", this).call(this, mode);\n      }\n\n      this.setError(gl.INVALID_ENUM);\n    }\n  }, {\n    key: \"blendEquationSeparate\",\n    value: function blendEquationSeparate(modeRGB, modeAlpha) {\n      modeRGB |= 0;\n      modeAlpha |= 0;\n\n      if (this._validBlendMode(modeRGB) && this._validBlendMode(modeAlpha)) {\n        return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"blendEquationSeparate\", this).call(this, modeRGB, modeAlpha);\n      }\n\n      this.setError(gl.INVALID_ENUM);\n    }\n  }, {\n    key: \"createBuffer\",\n    value: function createBuffer() {\n      var id = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createBuffer\", this).call(this);\n\n      if (id <= 0) return null;\n      var webGLBuffer = new WebGLBuffer(id, this);\n      this._buffers[id] = webGLBuffer;\n      return webGLBuffer;\n    }\n  }, {\n    key: \"createFramebuffer\",\n    value: function createFramebuffer() {\n      var id = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createFramebuffer\", this).call(this);\n\n      if (id <= 0) return null;\n      var webGLFramebuffer = new WebGLFramebuffer(id, this);\n      this._framebuffers[id] = webGLFramebuffer;\n      return webGLFramebuffer;\n    }\n  }, {\n    key: \"createProgram\",\n    value: function createProgram() {\n      var id = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createProgram\", this).call(this);\n\n      if (id <= 0) return null;\n      var webGLProgram = new WebGLProgram(id, this);\n      this._programs[id] = webGLProgram;\n      return webGLProgram;\n    }\n  }, {\n    key: \"createRenderbuffer\",\n    value: function createRenderbuffer() {\n      var id = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createRenderbuffer\", this).call(this);\n\n      if (id <= 0) return null;\n      var webGLRenderbuffer = new WebGLRenderbuffer(id, this);\n      this._renderbuffers[id] = webGLRenderbuffer;\n      return webGLRenderbuffer;\n    }\n  }, {\n    key: \"createTexture\",\n    value: function createTexture() {\n      var id = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createTexture\", this).call(this);\n\n      if (id <= 0) return null;\n      var webGlTexture = new WebGLTexture(id, this);\n      this._textures[id] = webGlTexture;\n      return webGlTexture;\n    }\n  }, {\n    key: \"getContextAttributes\",\n    value: function getContextAttributes() {\n      return this._contextAttributes;\n    }\n  }, {\n    key: \"getExtension\",\n    value: function getExtension(name) {\n      var str = name.toLowerCase();\n\n      if (str in this._extensions) {\n        return this._extensions[str];\n      }\n\n      var ext = availableExtensions[str] ? availableExtensions[str](this) : null;\n\n      if (ext) {\n        this._extensions[str] = ext;\n      }\n\n      return ext;\n    }\n  }, {\n    key: \"getSupportedExtensions\",\n    value: function getSupportedExtensions() {\n      var exts = ['ANGLE_instanced_arrays', 'STACKGL_resize_drawingbuffer', 'STACKGL_destroy_context'];\n\n      var supportedExts = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getSupportedExtensions\", this).call(this);\n\n      if (supportedExts.indexOf('GL_OES_element_index_uint') >= 0) {\n        exts.push('OES_element_index_uint');\n      }\n\n      if (supportedExts.indexOf('GL_OES_texture_float') >= 0) {\n        exts.push('OES_texture_float');\n      }\n\n      if (supportedExts.indexOf('EXT_draw_buffers') >= 0) {\n        exts.push('WEBGL_draw_buffers');\n      }\n\n      return exts;\n    }\n  }, {\n    key: \"setError\",\n    value: function setError(error) {\n      NativeWebGL.setError.call(this, error | 0);\n    }\n  }, {\n    key: \"blendFunc\",\n    value: function blendFunc(sfactor, dfactor) {\n      sfactor |= 0;\n      dfactor |= 0;\n\n      if (!this._validBlendFunc(sfactor) || !this._validBlendFunc(dfactor)) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (this._isConstantBlendFunc(sfactor) && this._isConstantBlendFunc(dfactor)) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"blendFunc\", this).call(this, sfactor, dfactor);\n    }\n  }, {\n    key: \"blendFuncSeparate\",\n    value: function blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n      srcRGB |= 0;\n      dstRGB |= 0;\n      srcAlpha |= 0;\n      dstAlpha |= 0;\n\n      if (!(this._validBlendFunc(srcRGB) && this._validBlendFunc(dstRGB) && this._validBlendFunc(srcAlpha) && this._validBlendFunc(dstAlpha))) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (this._isConstantBlendFunc(srcRGB) && this._isConstantBlendFunc(dstRGB) || this._isConstantBlendFunc(srcAlpha) && this._isConstantBlendFunc(dstAlpha)) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"blendFuncSeparate\", this).call(this, srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n  }, {\n    key: \"bufferData\",\n    value: function bufferData(target, data, usage) {\n      target |= 0;\n      usage |= 0;\n\n      if (usage !== gl.STREAM_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.DYNAMIC_DRAW) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (target !== gl.ARRAY_BUFFER && target !== gl.ELEMENT_ARRAY_BUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      var active = this._getActiveBuffer(target);\n\n      if (!active) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (typeof data === 'object') {\n        var u8Data = null;\n\n        if (isTypedArray(data)) {\n          u8Data = unpackTypedArray(data);\n        } else if (data instanceof ArrayBuffer) {\n          u8Data = new Uint8Array(data);\n        } else {\n          this.setError(gl.INVALID_VALUE);\n          return;\n        }\n\n        this._saveError();\n\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bufferData\", this).call(this, target, u8Data, usage);\n\n        var error = this.getError();\n\n        this._restoreError(error);\n\n        if (error !== gl.NO_ERROR) {\n          return;\n        }\n\n        active._size = u8Data.length;\n\n        if (target === gl.ELEMENT_ARRAY_BUFFER) {\n          active._elements = new Uint8Array(u8Data);\n        }\n      } else if (typeof data === 'number') {\n        var size = data | 0;\n\n        if (size < 0) {\n          this.setError(gl.INVALID_VALUE);\n          return;\n        }\n\n        this._saveError();\n\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bufferData\", this).call(this, target, size, usage);\n\n        var _error = this.getError();\n\n        this._restoreError(_error);\n\n        if (_error !== gl.NO_ERROR) {\n          return;\n        }\n\n        active._size = size;\n\n        if (target === gl.ELEMENT_ARRAY_BUFFER) {\n          active._elements = new Uint8Array(size);\n        }\n      } else {\n        this.setError(gl.INVALID_VALUE);\n      }\n    }\n  }, {\n    key: \"bufferSubData\",\n    value: function bufferSubData(target, offset, data) {\n      target |= 0;\n      offset |= 0;\n\n      if (target !== gl.ARRAY_BUFFER && target !== gl.ELEMENT_ARRAY_BUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (data === null) {\n        return;\n      }\n\n      if (!data || typeof data !== 'object') {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      var active = this._getActiveBuffer(target);\n\n      if (!active) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (offset < 0 || offset >= active._size) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      var u8Data = null;\n\n      if (isTypedArray(data)) {\n        u8Data = unpackTypedArray(data);\n      } else if (data instanceof ArrayBuffer) {\n        u8Data = new Uint8Array(data);\n      } else {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (offset + u8Data.length > active._size) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (target === gl.ELEMENT_ARRAY_BUFFER) {\n        active._elements.set(u8Data, offset);\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"bufferSubData\", this).call(this, target, offset, u8Data);\n    }\n  }, {\n    key: \"checkFramebufferStatus\",\n    value: function checkFramebufferStatus(target) {\n      if (target !== gl.FRAMEBUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return 0;\n      }\n\n      var framebuffer = this._activeFramebuffer;\n\n      if (!framebuffer) {\n        return gl.FRAMEBUFFER_COMPLETE;\n      }\n\n      return this._preCheckFramebufferStatus(framebuffer);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(mask) {\n      if (!this._framebufferOk()) {\n        return;\n      }\n\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"clear\", this).call(this, mask | 0);\n    }\n  }, {\n    key: \"clearColor\",\n    value: function clearColor(red, green, blue, alpha) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"clearColor\", this).call(this, +red, +green, +blue, +alpha);\n    }\n  }, {\n    key: \"clearDepth\",\n    value: function clearDepth(depth) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"clearDepth\", this).call(this, +depth);\n    }\n  }, {\n    key: \"clearStencil\",\n    value: function clearStencil(s) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"clearStencil\", this).call(this, s | 0);\n    }\n  }, {\n    key: \"colorMask\",\n    value: function colorMask(red, green, blue, alpha) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"colorMask\", this).call(this, !!red, !!green, !!blue, !!alpha);\n    }\n  }, {\n    key: \"compileShader\",\n    value: function compileShader(shader) {\n      if (!checkObject(shader)) {\n        throw new TypeError('compileShader(WebGLShader)');\n      }\n\n      if (this._checkWrapper(shader, WebGLShader) && this._checkShaderSource(shader)) {\n        var prevError = this.getError();\n\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"compileShader\", this).call(this, shader._ | 0);\n\n        var error = this.getError();\n        shader._compileStatus = !!_get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getShaderParameter\", this).call(this, shader._ | 0, gl.COMPILE_STATUS);\n        shader._compileInfo = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getShaderInfoLog\", this).call(this, shader._ | 0);\n        this.getError();\n        this.setError(prevError || error);\n      }\n    }\n  }, {\n    key: \"copyTexImage2D\",\n    value: function copyTexImage2D(target, level, internalFormat, x, y, width, height, border) {\n      target |= 0;\n      level |= 0;\n      internalFormat |= 0;\n      x |= 0;\n      y |= 0;\n      width |= 0;\n      height |= 0;\n      border |= 0;\n\n      var texture = this._getTexImage(target);\n\n      if (!texture) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (internalFormat !== gl.RGBA && internalFormat !== gl.RGB && internalFormat !== gl.ALPHA && internalFormat !== gl.LUMINANCE && internalFormat !== gl.LUMINANCE_ALPHA) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (level < 0 || width < 0 || height < 0 || border !== 0) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (level > 0 && !(bits.isPow2(width) && bits.isPow2(height))) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      this._saveError();\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"copyTexImage2D\", this).call(this, target, level, internalFormat, x, y, width, height, border);\n\n      var error = this.getError();\n\n      this._restoreError(error);\n\n      if (error === gl.NO_ERROR) {\n        texture._levelWidth[level] = width;\n        texture._levelHeight[level] = height;\n        texture._format = gl.RGBA;\n        texture._type = gl.UNSIGNED_BYTE;\n      }\n    }\n  }, {\n    key: \"copyTexSubImage2D\",\n    value: function copyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height) {\n      target |= 0;\n      level |= 0;\n      xoffset |= 0;\n      yoffset |= 0;\n      x |= 0;\n      y |= 0;\n      width |= 0;\n      height |= 0;\n\n      var texture = this._getTexImage(target);\n\n      if (!texture) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (width < 0 || height < 0 || xoffset < 0 || yoffset < 0 || level < 0) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"copyTexSubImage2D\", this).call(this, target, level, xoffset, yoffset, x, y, width, height);\n    }\n  }, {\n    key: \"cullFace\",\n    value: function cullFace(mode) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"cullFace\", this).call(this, mode | 0);\n    }\n  }, {\n    key: \"createShader\",\n    value: function createShader(type) {\n      type |= 0;\n\n      if (type !== gl.FRAGMENT_SHADER && type !== gl.VERTEX_SHADER) {\n        this.setError(gl.INVALID_ENUM);\n        return null;\n      }\n\n      var id = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createShader\", this).call(this, type);\n\n      if (id < 0) {\n        return null;\n      }\n\n      var result = new WebGLShader(id, this, type);\n      this._shaders[id] = result;\n      return result;\n    }\n  }, {\n    key: \"deleteProgram\",\n    value: function deleteProgram(object) {\n      return this._deleteLinkable('deleteProgram', object, WebGLProgram);\n    }\n  }, {\n    key: \"deleteShader\",\n    value: function deleteShader(object) {\n      return this._deleteLinkable('deleteShader', object, WebGLShader);\n    }\n  }, {\n    key: \"_deleteLinkable\",\n    value: function _deleteLinkable(name, object, Type) {\n      if (!checkObject(object)) {\n        throw new TypeError(name + '(' + Type.name + ')');\n      }\n\n      if (object instanceof Type && this._checkOwns(object)) {\n        object._pendingDelete = true;\n\n        object._checkDelete();\n\n        return;\n      }\n\n      this.setError(gl.INVALID_OPERATION);\n    }\n  }, {\n    key: \"deleteBuffer\",\n    value: function deleteBuffer(buffer) {\n      if (!checkObject(buffer) || buffer !== null && !(buffer instanceof WebGLBuffer)) {\n        throw new TypeError('deleteBuffer(WebGLBuffer)');\n      }\n\n      if (!(buffer instanceof WebGLBuffer && this._checkOwns(buffer))) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (this._activeArrayBuffer === buffer) {\n        this.bindBuffer(gl.ARRAY_BUFFER, null);\n      }\n\n      if (this._activeElementArrayBuffer === buffer) {\n        this.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n      }\n\n      for (var i = 0; i < this._vertexAttribs.length; ++i) {\n        var attrib = this._vertexAttribs[i];\n\n        if (attrib._pointerBuffer === buffer) {\n          attrib._pointerBuffer = null;\n          attrib._pointerStride = 0;\n          attrib._pointerOffset = 0;\n          attrib._pointerSize = 4;\n          buffer._refCount -= 1;\n        }\n      }\n\n      buffer._pendingDelete = true;\n\n      buffer._checkDelete();\n    }\n  }, {\n    key: \"deleteFramebuffer\",\n    value: function deleteFramebuffer(framebuffer) {\n      if (!checkObject(framebuffer)) {\n        throw new TypeError('deleteFramebuffer(WebGLFramebuffer)');\n      }\n\n      if (!(framebuffer instanceof WebGLFramebuffer && this._checkOwns(framebuffer))) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (this._activeFramebuffer === framebuffer) {\n        this.bindFramebuffer(gl.FRAMEBUFFER, null);\n      }\n\n      framebuffer._pendingDelete = true;\n\n      framebuffer._checkDelete();\n    } // Need to handle textures and render buffers as a special case:\n    // When a texture gets deleted, we need to do the following extra steps:\n    //  1. Is it bound to the current texture unit?\n    //     If so, then unbind it\n    //  2. Is it attached to the active fbo?\n    //     If so, then detach it\n    //\n    // For renderbuffers only need to do second step\n    //\n    // After this, proceed with the usual deletion algorithm\n    //\n\n  }, {\n    key: \"deleteRenderbuffer\",\n    value: function deleteRenderbuffer(renderbuffer) {\n      if (!checkObject(renderbuffer)) {\n        throw new TypeError('deleteRenderbuffer(WebGLRenderbuffer)');\n      }\n\n      if (!(renderbuffer instanceof WebGLRenderbuffer && this._checkOwns(renderbuffer))) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (this._activeRenderbuffer === renderbuffer) {\n        this.bindRenderbuffer(gl.RENDERBUFFER, null);\n      }\n\n      var activeFramebuffer = this._activeFramebuffer;\n\n      this._tryDetachFramebuffer(activeFramebuffer, renderbuffer);\n\n      renderbuffer._pendingDelete = true;\n\n      renderbuffer._checkDelete();\n    }\n  }, {\n    key: \"deleteTexture\",\n    value: function deleteTexture(texture) {\n      if (!checkObject(texture)) {\n        throw new TypeError('deleteTexture(WebGLTexture)');\n      }\n\n      if (texture instanceof WebGLTexture) {\n        if (!this._checkOwns(texture)) {\n          this.setError(gl.INVALID_OPERATION);\n          return;\n        }\n      } else {\n        return;\n      } // Unbind from all texture units\n\n\n      var curActive = this._activeTextureUnit;\n\n      for (var i = 0; i < this._textureUnits.length; ++i) {\n        var unit = this._textureUnits[i];\n\n        if (unit._bind2D === texture) {\n          this.activeTexture(gl.TEXTURE0 + i);\n          this.bindTexture(gl.TEXTURE_2D, null);\n        } else if (unit._bindCube === texture) {\n          this.activeTexture(gl.TEXTURE0 + i);\n          this.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n        }\n      }\n\n      this.activeTexture(gl.TEXTURE0 + curActive); // FIXME: Does the texture get unbound from *all* framebuffers, or just the\n      // active FBO?\n\n      var ctx = this;\n      var activeFramebuffer = this._activeFramebuffer;\n\n      function tryDetach(framebuffer) {\n        if (framebuffer && framebuffer._linked(texture)) {\n          var attachments = ctx._getAttachments();\n\n          for (var _i8 = 0; _i8 < attachments.length; ++_i8) {\n            var attachment = attachments[_i8];\n\n            if (framebuffer._attachments[attachment] === texture) {\n              ctx.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, null);\n            }\n          }\n        }\n      }\n\n      tryDetach(activeFramebuffer); // Mark texture for deletion\n\n      texture._pendingDelete = true;\n\n      texture._checkDelete();\n    }\n  }, {\n    key: \"depthFunc\",\n    value: function depthFunc(func) {\n      func |= 0;\n\n      switch (func) {\n        case gl.NEVER:\n        case gl.LESS:\n        case gl.EQUAL:\n        case gl.LEQUAL:\n        case gl.GREATER:\n        case gl.NOTEQUAL:\n        case gl.GEQUAL:\n        case gl.ALWAYS:\n          return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"depthFunc\", this).call(this, func);\n\n        default:\n          this.setError(gl.INVALID_ENUM);\n      }\n    }\n  }, {\n    key: \"depthMask\",\n    value: function depthMask(flag) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"depthMask\", this).call(this, !!flag);\n    }\n  }, {\n    key: \"depthRange\",\n    value: function depthRange(zNear, zFar) {\n      zNear = +zNear;\n      zFar = +zFar;\n\n      if (zNear <= zFar) {\n        return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"depthRange\", this).call(this, zNear, zFar);\n      }\n\n      this.setError(gl.INVALID_OPERATION);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"detachShader\",\n    value: function detachShader(program, shader) {\n      if (!checkObject(program) || !checkObject(shader)) {\n        throw new TypeError('detachShader(WebGLProgram, WebGLShader)');\n      }\n\n      if (this._checkWrapper(program, WebGLProgram) && this._checkWrapper(shader, WebGLShader)) {\n        if (program._linked(shader)) {\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"detachShader\", this).call(this, program._, shader._);\n\n          program._unlink(shader);\n        } else {\n          this.setError(gl.INVALID_OPERATION);\n        }\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable(cap) {\n      cap |= 0;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"disable\", this).call(this, cap);\n\n      if (cap === gl.TEXTURE_2D || cap === gl.TEXTURE_CUBE_MAP) {\n        var active = this._getActiveTextureUnit();\n\n        if (active._mode === cap) {\n          active._mode = 0;\n        }\n      }\n    }\n  }, {\n    key: \"disableVertexAttribArray\",\n    value: function disableVertexAttribArray(index) {\n      index |= 0;\n\n      if (index < 0 || index >= this._vertexAttribs.length) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"disableVertexAttribArray\", this).call(this, index);\n\n      this._vertexAttribs[index]._isPointer = false;\n    }\n  }, {\n    key: \"drawArrays\",\n    value: function drawArrays(mode, first, count) {\n      mode |= 0;\n      first |= 0;\n      count |= 0;\n\n      if (first < 0 || count < 0) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (!this._checkStencilState()) {\n        return;\n      }\n\n      var reducedCount = vertexCount(mode, count);\n\n      if (reducedCount < 0) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (!this._framebufferOk()) {\n        return;\n      }\n\n      if (count === 0) {\n        return;\n      }\n\n      var maxIndex = first;\n\n      if (count > 0) {\n        maxIndex = count + first - 1 >>> 0;\n      }\n\n      if (this._checkVertexAttribState(maxIndex)) {\n        if (this._vertexAttribs[0]._isPointer || this._extensions.webgl_draw_buffers && this._extensions.webgl_draw_buffers._buffersState && this._extensions.webgl_draw_buffers._buffersState.length > 0) {\n          return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"drawArrays\", this).call(this, mode, first, reducedCount);\n        } else {\n          this._beginAttrib0Hack();\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"_drawArraysInstanced\", this).call(this, mode, first, reducedCount, 1);\n\n          this._endAttrib0Hack();\n        }\n      }\n    }\n  }, {\n    key: \"drawElements\",\n    value: function drawElements(mode, count, type, ioffset) {\n      mode |= 0;\n      count |= 0;\n      type |= 0;\n      ioffset |= 0;\n\n      if (count < 0 || ioffset < 0) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (!this._checkStencilState()) {\n        return;\n      }\n\n      var elementBuffer = this._activeElementArrayBuffer;\n\n      if (!elementBuffer) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      } // Unpack element data\n\n\n      var elementData = null;\n      var offset = ioffset;\n\n      if (type === gl.UNSIGNED_SHORT) {\n        if (offset % 2) {\n          this.setError(gl.INVALID_OPERATION);\n          return;\n        }\n\n        offset >>= 1;\n        elementData = new Uint16Array(elementBuffer._elements.buffer);\n      } else if (this._extensions.oes_element_index_uint && type === gl.UNSIGNED_INT) {\n        if (offset % 4) {\n          this.setError(gl.INVALID_OPERATION);\n          return;\n        }\n\n        offset >>= 2;\n        elementData = new Uint32Array(elementBuffer._elements.buffer);\n      } else if (type === gl.UNSIGNED_BYTE) {\n        elementData = elementBuffer._elements;\n      } else {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      var reducedCount = count;\n\n      switch (mode) {\n        case gl.TRIANGLES:\n          if (count % 3) {\n            reducedCount -= count % 3;\n          }\n\n          break;\n\n        case gl.LINES:\n          if (count % 2) {\n            reducedCount -= count % 2;\n          }\n\n          break;\n\n        case gl.POINTS:\n          break;\n\n        case gl.LINE_LOOP:\n        case gl.LINE_STRIP:\n          if (count < 2) {\n            this.setError(gl.INVALID_OPERATION);\n            return;\n          }\n\n          break;\n\n        case gl.TRIANGLE_FAN:\n        case gl.TRIANGLE_STRIP:\n          if (count < 3) {\n            this.setError(gl.INVALID_OPERATION);\n            return;\n          }\n\n          break;\n\n        default:\n          this.setError(gl.INVALID_ENUM);\n          return;\n      }\n\n      if (!this._framebufferOk()) {\n        return;\n      }\n\n      if (count === 0) {\n        this._checkVertexAttribState(0);\n\n        return;\n      }\n\n      if (count + offset >>> 0 > elementData.length) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      } // Compute max index\n\n\n      var maxIndex = -1;\n\n      for (var i = offset; i < offset + count; ++i) {\n        maxIndex = Math.max(maxIndex, elementData[i]);\n      }\n\n      if (maxIndex < 0) {\n        this._checkVertexAttribState(0);\n\n        return;\n      }\n\n      if (this._checkVertexAttribState(maxIndex)) {\n        if (reducedCount > 0) {\n          if (this._vertexAttribs[0]._isPointer) {\n            return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"drawElements\", this).call(this, mode, reducedCount, type, ioffset);\n          } else {\n            this._beginAttrib0Hack();\n\n            _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"_drawElementsInstanced\", this).call(this, mode, reducedCount, type, ioffset, 1);\n\n            this._endAttrib0Hack();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"enable\",\n    value: function enable(cap) {\n      cap |= 0;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"enable\", this).call(this, cap);\n    }\n  }, {\n    key: \"enableVertexAttribArray\",\n    value: function enableVertexAttribArray(index) {\n      index |= 0;\n\n      if (index < 0 || index >= this._vertexAttribs.length) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"enableVertexAttribArray\", this).call(this, index);\n\n      this._vertexAttribs[index]._isPointer = true;\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"finish\", this).call(this);\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"flush\", this).call(this);\n    }\n  }, {\n    key: \"framebufferRenderbuffer\",\n    value: function framebufferRenderbuffer(target, attachment, renderbufferTarget, renderbuffer) {\n      target = target | 0;\n      attachment = attachment | 0;\n      renderbufferTarget = renderbufferTarget | 0;\n\n      if (!checkObject(renderbuffer)) {\n        throw new TypeError('framebufferRenderbuffer(GLenum, GLenum, GLenum, WebGLRenderbuffer)');\n      }\n\n      if (target !== gl.FRAMEBUFFER || !this._validFramebufferAttachment(attachment) || renderbufferTarget !== gl.RENDERBUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      var framebuffer = this._activeFramebuffer;\n\n      if (!framebuffer) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (renderbuffer && !this._checkWrapper(renderbuffer, WebGLRenderbuffer)) {\n        return;\n      }\n\n      framebuffer._setAttachment(renderbuffer, attachment);\n\n      this._updateFramebufferAttachments(framebuffer);\n    }\n  }, {\n    key: \"framebufferTexture2D\",\n    value: function framebufferTexture2D(target, attachment, textarget, texture, level) {\n      target |= 0;\n      attachment |= 0;\n      textarget |= 0;\n      level |= 0;\n\n      if (!checkObject(texture)) {\n        throw new TypeError('framebufferTexture2D(GLenum, GLenum, GLenum, WebGLTexture, GLint)');\n      } // Check parameters are ok\n\n\n      if (target !== gl.FRAMEBUFFER || !this._validFramebufferAttachment(attachment)) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (level !== 0) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      } // Check object ownership\n\n\n      if (texture && !this._checkWrapper(texture, WebGLTexture)) {\n        return;\n      } // Check texture target is ok\n\n\n      if (textarget === gl.TEXTURE_2D) {\n        if (texture && texture._binding !== gl.TEXTURE_2D) {\n          this.setError(gl.INVALID_OPERATION);\n          return;\n        }\n      } else if (this._validCubeTarget(textarget)) {\n        if (texture && texture._binding !== gl.TEXTURE_CUBE_MAP) {\n          this.setError(gl.INVALID_OPERATION);\n          return;\n        }\n      } else {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      } // Check a framebuffer is actually bound\n\n\n      var framebuffer = this._activeFramebuffer;\n\n      if (!framebuffer) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      framebuffer._attachmentLevel[attachment] = level;\n      framebuffer._attachmentFace[attachment] = textarget;\n\n      framebuffer._setAttachment(texture, attachment);\n\n      this._updateFramebufferAttachments(framebuffer);\n    }\n  }, {\n    key: \"frontFace\",\n    value: function frontFace(mode) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"frontFace\", this).call(this, mode | 0);\n    }\n  }, {\n    key: \"generateMipmap\",\n    value: function generateMipmap(target) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"generateMipmap\", this).call(this, target | 0) | 0;\n    }\n  }, {\n    key: \"getActiveAttrib\",\n    value: function getActiveAttrib(program, index) {\n      if (!checkObject(program)) {\n        throw new TypeError('getActiveAttrib(WebGLProgram)');\n      } else if (!program) {\n        this.setError(gl.INVALID_VALUE);\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        var info = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getActiveAttrib\", this).call(this, program._ | 0, index | 0);\n\n        if (info) {\n          return new WebGLActiveInfo(info);\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getActiveUniform\",\n    value: function getActiveUniform(program, index) {\n      if (!checkObject(program)) {\n        throw new TypeError('getActiveUniform(WebGLProgram, GLint)');\n      } else if (!program) {\n        this.setError(gl.INVALID_VALUE);\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        var info = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getActiveUniform\", this).call(this, program._ | 0, index | 0);\n\n        if (info) {\n          return new WebGLActiveInfo(info);\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getAttachedShaders\",\n    value: function getAttachedShaders(program) {\n      if (!checkObject(program) || typeof program === 'object' && program !== null && !(program instanceof WebGLProgram)) {\n        throw new TypeError('getAttachedShaders(WebGLProgram)');\n      }\n\n      if (!program) {\n        this.setError(gl.INVALID_VALUE);\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        var shaderArray = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getAttachedShaders\", this).call(this, program._ | 0);\n\n        if (!shaderArray) {\n          return null;\n        }\n\n        var unboxedShaders = new Array(shaderArray.length);\n\n        for (var i = 0; i < shaderArray.length; ++i) {\n          unboxedShaders[i] = this._shaders[shaderArray[i]];\n        }\n\n        return unboxedShaders;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getAttribLocation\",\n    value: function getAttribLocation(program, name) {\n      if (!checkObject(program)) {\n        throw new TypeError('getAttribLocation(WebGLProgram, String)');\n      }\n\n      name += '';\n\n      if (!isValidString(name) || name.length > MAX_ATTRIBUTE_LENGTH) {\n        this.setError(gl.INVALID_VALUE);\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getAttribLocation\", this).call(this, program._ | 0, name + '');\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"getParameter\",\n    value: function getParameter(pname) {\n      pname |= 0;\n\n      switch (pname) {\n        case gl.ARRAY_BUFFER_BINDING:\n          return this._activeArrayBuffer;\n\n        case gl.ELEMENT_ARRAY_BUFFER_BINDING:\n          return this._activeElementArrayBuffer;\n\n        case gl.CURRENT_PROGRAM:\n          return this._activeProgram;\n\n        case gl.FRAMEBUFFER_BINDING:\n          return this._activeFramebuffer;\n\n        case gl.RENDERBUFFER_BINDING:\n          return this._activeRenderbuffer;\n\n        case gl.TEXTURE_BINDING_2D:\n          return this._getActiveTextureUnit()._bind2D;\n\n        case gl.TEXTURE_BINDING_CUBE_MAP:\n          return this._getActiveTextureUnit()._bindCube;\n\n        case gl.VERSION:\n          return 'WebGL 1.0 stack-gl ' + HEADLESS_VERSION;\n\n        case gl.VENDOR:\n          return 'stack-gl';\n\n        case gl.RENDERER:\n          return 'ANGLE';\n\n        case gl.SHADING_LANGUAGE_VERSION:\n          return 'WebGL GLSL ES 1.0 stack-gl';\n\n        case gl.COMPRESSED_TEXTURE_FORMATS:\n          return new Uint32Array(0);\n        // Int arrays\n\n        case gl.MAX_VIEWPORT_DIMS:\n        case gl.SCISSOR_BOX:\n        case gl.VIEWPORT:\n          return new Int32Array(_get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname));\n        // Float arrays\n\n        case gl.ALIASED_LINE_WIDTH_RANGE:\n        case gl.ALIASED_POINT_SIZE_RANGE:\n        case gl.DEPTH_RANGE:\n        case gl.BLEND_COLOR:\n        case gl.COLOR_CLEAR_VALUE:\n          return new Float32Array(_get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname));\n\n        case gl.COLOR_WRITEMASK:\n          return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname);\n\n        case gl.DEPTH_CLEAR_VALUE:\n        case gl.LINE_WIDTH:\n        case gl.POLYGON_OFFSET_FACTOR:\n        case gl.POLYGON_OFFSET_UNITS:\n        case gl.SAMPLE_COVERAGE_VALUE:\n          return +_get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname);\n\n        case gl.BLEND:\n        case gl.CULL_FACE:\n        case gl.DEPTH_TEST:\n        case gl.DEPTH_WRITEMASK:\n        case gl.DITHER:\n        case gl.POLYGON_OFFSET_FILL:\n        case gl.SAMPLE_COVERAGE_INVERT:\n        case gl.SCISSOR_TEST:\n        case gl.STENCIL_TEST:\n        case gl.UNPACK_FLIP_Y_WEBGL:\n        case gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL:\n          return !!_get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname);\n\n        case gl.ACTIVE_TEXTURE:\n        case gl.ALPHA_BITS:\n        case gl.BLEND_DST_ALPHA:\n        case gl.BLEND_DST_RGB:\n        case gl.BLEND_EQUATION_ALPHA:\n        case gl.BLEND_EQUATION_RGB:\n        case gl.BLEND_SRC_ALPHA:\n        case gl.BLEND_SRC_RGB:\n        case gl.BLUE_BITS:\n        case gl.CULL_FACE_MODE:\n        case gl.DEPTH_BITS:\n        case gl.DEPTH_FUNC:\n        case gl.FRONT_FACE:\n        case gl.GENERATE_MIPMAP_HINT:\n        case gl.GREEN_BITS:\n        case gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS:\n        case gl.MAX_CUBE_MAP_TEXTURE_SIZE:\n        case gl.MAX_FRAGMENT_UNIFORM_VECTORS:\n        case gl.MAX_RENDERBUFFER_SIZE:\n        case gl.MAX_TEXTURE_IMAGE_UNITS:\n        case gl.MAX_TEXTURE_SIZE:\n        case gl.MAX_VARYING_VECTORS:\n        case gl.MAX_VERTEX_ATTRIBS:\n        case gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS:\n        case gl.MAX_VERTEX_UNIFORM_VECTORS:\n        case gl.PACK_ALIGNMENT:\n        case gl.RED_BITS:\n        case gl.SAMPLE_BUFFERS:\n        case gl.SAMPLES:\n        case gl.STENCIL_BACK_FAIL:\n        case gl.STENCIL_BACK_FUNC:\n        case gl.STENCIL_BACK_PASS_DEPTH_FAIL:\n        case gl.STENCIL_BACK_PASS_DEPTH_PASS:\n        case gl.STENCIL_BACK_REF:\n        case gl.STENCIL_BACK_VALUE_MASK:\n        case gl.STENCIL_BACK_WRITEMASK:\n        case gl.STENCIL_BITS:\n        case gl.STENCIL_CLEAR_VALUE:\n        case gl.STENCIL_FAIL:\n        case gl.STENCIL_FUNC:\n        case gl.STENCIL_PASS_DEPTH_FAIL:\n        case gl.STENCIL_PASS_DEPTH_PASS:\n        case gl.STENCIL_REF:\n        case gl.STENCIL_VALUE_MASK:\n        case gl.STENCIL_WRITEMASK:\n        case gl.SUBPIXEL_BITS:\n        case gl.UNPACK_ALIGNMENT:\n        case gl.UNPACK_COLORSPACE_CONVERSION_WEBGL:\n          return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname) | 0;\n\n        case gl.IMPLEMENTATION_COLOR_READ_FORMAT:\n        case gl.IMPLEMENTATION_COLOR_READ_TYPE:\n          return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname);\n\n        default:\n          if (this._extensions.webgl_draw_buffers) {\n            var ext = this._extensions.webgl_draw_buffers;\n\n            switch (pname) {\n              case ext.DRAW_BUFFER0_WEBGL:\n              case ext.DRAW_BUFFER1_WEBGL:\n              case ext.DRAW_BUFFER2_WEBGL:\n              case ext.DRAW_BUFFER3_WEBGL:\n              case ext.DRAW_BUFFER4_WEBGL:\n              case ext.DRAW_BUFFER5_WEBGL:\n              case ext.DRAW_BUFFER6_WEBGL:\n              case ext.DRAW_BUFFER7_WEBGL:\n              case ext.DRAW_BUFFER8_WEBGL:\n              case ext.DRAW_BUFFER9_WEBGL:\n              case ext.DRAW_BUFFER10_WEBGL:\n              case ext.DRAW_BUFFER11_WEBGL:\n              case ext.DRAW_BUFFER12_WEBGL:\n              case ext.DRAW_BUFFER13_WEBGL:\n              case ext.DRAW_BUFFER14_WEBGL:\n              case ext.DRAW_BUFFER15_WEBGL:\n                if (ext._buffersState.length === 1 && ext._buffersState[0] === gl.BACK) {\n                  return gl.BACK;\n                }\n\n                return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname);\n\n              case ext.MAX_DRAW_BUFFERS_WEBGL:\n              case ext.MAX_COLOR_ATTACHMENTS_WEBGL:\n                return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getParameter\", this).call(this, pname);\n            }\n          }\n\n          this.setError(gl.INVALID_ENUM);\n          return null;\n      }\n    }\n  }, {\n    key: \"getShaderPrecisionFormat\",\n    value: function getShaderPrecisionFormat(shaderType, precisionType) {\n      shaderType |= 0;\n      precisionType |= 0;\n\n      if (!(shaderType === gl.FRAGMENT_SHADER || shaderType === gl.VERTEX_SHADER) || !(precisionType === gl.LOW_FLOAT || precisionType === gl.MEDIUM_FLOAT || precisionType === gl.HIGH_FLOAT || precisionType === gl.LOW_INT || precisionType === gl.MEDIUM_INT || precisionType === gl.HIGH_INT)) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      var format = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getShaderPrecisionFormat\", this).call(this, shaderType, precisionType);\n\n      if (!format) {\n        return null;\n      }\n\n      return new WebGLShaderPrecisionFormat(format);\n    }\n  }, {\n    key: \"getBufferParameter\",\n    value: function getBufferParameter(target, pname) {\n      target |= 0;\n      pname |= 0;\n\n      if (target !== gl.ARRAY_BUFFER && target !== gl.ELEMENT_ARRAY_BUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return null;\n      }\n\n      switch (pname) {\n        case gl.BUFFER_SIZE:\n        case gl.BUFFER_USAGE:\n          return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getBufferParameter\", this).call(this, target | 0, pname | 0);\n\n        default:\n          this.setError(gl.INVALID_ENUM);\n          return null;\n      }\n    }\n  }, {\n    key: \"getError\",\n    value: function getError() {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getError\", this).call(this);\n    }\n  }, {\n    key: \"getFramebufferAttachmentParameter\",\n    value: function getFramebufferAttachmentParameter(target, attachment, pname) {\n      target |= 0;\n      attachment |= 0;\n      pname |= 0;\n\n      if (target !== gl.FRAMEBUFFER || !this._validFramebufferAttachment(attachment)) {\n        this.setError(gl.INVALID_ENUM);\n        return null;\n      }\n\n      var framebuffer = this._activeFramebuffer;\n\n      if (!framebuffer) {\n        this.setError(gl.INVALID_OPERATION);\n        return null;\n      }\n\n      var object = framebuffer._attachments[attachment];\n\n      if (object === null) {\n        if (pname === gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE) {\n          return gl.NONE;\n        }\n      } else if (object instanceof WebGLTexture) {\n        switch (pname) {\n          case gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:\n            return object;\n\n          case gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:\n            return gl.TEXTURE;\n\n          case gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:\n            return framebuffer._attachmentLevel[attachment];\n\n          case gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:\n            var face = framebuffer._attachmentFace[attachment];\n\n            if (face === gl.TEXTURE_2D) {\n              return 0;\n            }\n\n            return face;\n        }\n      } else if (object instanceof WebGLRenderbuffer) {\n        switch (pname) {\n          case gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:\n            return object;\n\n          case gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:\n            return gl.RENDERBUFFER;\n        }\n      }\n\n      this.setError(gl.INVALID_ENUM);\n      return null;\n    }\n  }, {\n    key: \"getProgramParameter\",\n    value: function getProgramParameter(program, pname) {\n      pname |= 0;\n\n      if (!checkObject(program)) {\n        throw new TypeError('getProgramParameter(WebGLProgram, GLenum)');\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        switch (pname) {\n          case gl.DELETE_STATUS:\n            return program._pendingDelete;\n\n          case gl.LINK_STATUS:\n            return program._linkStatus;\n\n          case gl.VALIDATE_STATUS:\n            return !!_get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getProgramParameter\", this).call(this, program._, pname);\n\n          case gl.ATTACHED_SHADERS:\n          case gl.ACTIVE_ATTRIBUTES:\n          case gl.ACTIVE_UNIFORMS:\n            return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getProgramParameter\", this).call(this, program._, pname);\n        }\n\n        this.setError(gl.INVALID_ENUM);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getProgramInfoLog\",\n    value: function getProgramInfoLog(program) {\n      if (!checkObject(program)) {\n        throw new TypeError('getProgramInfoLog(WebGLProgram)');\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        return program._linkInfoLog;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getRenderbufferParameter\",\n    value: function getRenderbufferParameter(target, pname) {\n      target |= 0;\n      pname |= 0;\n\n      if (target !== gl.RENDERBUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return null;\n      }\n\n      var renderbuffer = this._activeRenderbuffer;\n\n      if (!renderbuffer) {\n        this.setError(gl.INVALID_OPERATION);\n        return null;\n      }\n\n      switch (pname) {\n        case gl.RENDERBUFFER_INTERNAL_FORMAT:\n          return renderbuffer._format;\n\n        case gl.RENDERBUFFER_WIDTH:\n          return renderbuffer._width;\n\n        case gl.RENDERBUFFER_HEIGHT:\n          return renderbuffer._height;\n\n        case gl.RENDERBUFFER_SIZE:\n        case gl.RENDERBUFFER_RED_SIZE:\n        case gl.RENDERBUFFER_GREEN_SIZE:\n        case gl.RENDERBUFFER_BLUE_SIZE:\n        case gl.RENDERBUFFER_ALPHA_SIZE:\n        case gl.RENDERBUFFER_DEPTH_SIZE:\n        case gl.RENDERBUFFER_STENCIL_SIZE:\n          return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getRenderbufferParameter\", this).call(this, target, pname);\n      }\n\n      this.setError(gl.INVALID_ENUM);\n      return null;\n    }\n  }, {\n    key: \"getShaderParameter\",\n    value: function getShaderParameter(shader, pname) {\n      pname |= 0;\n\n      if (!checkObject(shader)) {\n        throw new TypeError('getShaderParameter(WebGLShader, GLenum)');\n      } else if (this._checkWrapper(shader, WebGLShader)) {\n        switch (pname) {\n          case gl.DELETE_STATUS:\n            return shader._pendingDelete;\n\n          case gl.COMPILE_STATUS:\n            return shader._compileStatus;\n\n          case gl.SHADER_TYPE:\n            return shader._type;\n        }\n\n        this.setError(gl.INVALID_ENUM);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getShaderInfoLog\",\n    value: function getShaderInfoLog(shader) {\n      if (!checkObject(shader)) {\n        throw new TypeError('getShaderInfoLog(WebGLShader)');\n      } else if (this._checkWrapper(shader, WebGLShader)) {\n        return shader._compileInfo;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getShaderSource\",\n    value: function getShaderSource(shader) {\n      if (!checkObject(shader)) {\n        throw new TypeError('Input to getShaderSource must be an object');\n      } else if (this._checkWrapper(shader, WebGLShader)) {\n        return shader._source;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getTexParameter\",\n    value: function getTexParameter(target, pname) {\n      target |= 0;\n      pname |= 0;\n\n      if (!this._checkTextureTarget(target)) {\n        return null;\n      }\n\n      var unit = this._getActiveTextureUnit();\n\n      if (target === gl.TEXTURE_2D && !unit._bind2D || target === gl.TEXTURE_CUBE_MAP && !unit._bindCube) {\n        this.setError(gl.INVALID_OPERATION);\n        return null;\n      }\n\n      switch (pname) {\n        case gl.TEXTURE_MAG_FILTER:\n        case gl.TEXTURE_MIN_FILTER:\n        case gl.TEXTURE_WRAP_S:\n        case gl.TEXTURE_WRAP_T:\n          return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getTexParameter\", this).call(this, target, pname);\n      }\n\n      this.setError(gl.INVALID_ENUM);\n      return null;\n    }\n  }, {\n    key: \"getUniform\",\n    value: function getUniform(program, location) {\n      if (!checkObject(program) || !checkObject(location)) {\n        throw new TypeError('getUniform(WebGLProgram, WebGLUniformLocation)');\n      } else if (!program) {\n        this.setError(gl.INVALID_VALUE);\n        return null;\n      } else if (!location) {\n        return null;\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        if (!checkUniform(program, location)) {\n          this.setError(gl.INVALID_OPERATION);\n          return null;\n        }\n\n        var data = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getUniform\", this).call(this, program._ | 0, location._ | 0);\n\n        if (!data) {\n          return null;\n        }\n\n        switch (location._activeInfo.type) {\n          case gl.FLOAT:\n            return data[0];\n\n          case gl.FLOAT_VEC2:\n            return new Float32Array(data.slice(0, 2));\n\n          case gl.FLOAT_VEC3:\n            return new Float32Array(data.slice(0, 3));\n\n          case gl.FLOAT_VEC4:\n            return new Float32Array(data.slice(0, 4));\n\n          case gl.INT:\n            return data[0] | 0;\n\n          case gl.INT_VEC2:\n            return new Int32Array(data.slice(0, 2));\n\n          case gl.INT_VEC3:\n            return new Int32Array(data.slice(0, 3));\n\n          case gl.INT_VEC4:\n            return new Int32Array(data.slice(0, 4));\n\n          case gl.BOOL:\n            return !!data[0];\n\n          case gl.BOOL_VEC2:\n            return [!!data[0], !!data[1]];\n\n          case gl.BOOL_VEC3:\n            return [!!data[0], !!data[1], !!data[2]];\n\n          case gl.BOOL_VEC4:\n            return [!!data[0], !!data[1], !!data[2], !!data[3]];\n\n          case gl.FLOAT_MAT2:\n            return new Float32Array(data.slice(0, 4));\n\n          case gl.FLOAT_MAT3:\n            return new Float32Array(data.slice(0, 9));\n\n          case gl.FLOAT_MAT4:\n            return new Float32Array(data.slice(0, 16));\n\n          case gl.SAMPLER_2D:\n          case gl.SAMPLER_CUBE:\n            return data[0] | 0;\n\n          default:\n            return null;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getUniformLocation\",\n    value: function getUniformLocation(program, name) {\n      if (!checkObject(program)) {\n        throw new TypeError('getUniformLocation(WebGLProgram, String)');\n      }\n\n      name += '';\n\n      if (!isValidString(name)) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (this._checkWrapper(program, WebGLProgram)) {\n        var loc = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getUniformLocation\", this).call(this, program._ | 0, name);\n\n        if (loc >= 0) {\n          var searchName = name;\n\n          if (/\\[\\d+\\]$/.test(name)) {\n            searchName = name.replace(/\\[\\d+\\]$/, '[0]');\n          }\n\n          var info = null;\n\n          for (var i = 0; i < program._uniforms.length; ++i) {\n            var infoItem = program._uniforms[i];\n\n            if (infoItem.name === searchName) {\n              info = {\n                size: infoItem.size,\n                type: infoItem.type,\n                name: infoItem.name\n              };\n            }\n          }\n\n          if (!info) {\n            return null;\n          }\n\n          var result = new WebGLUniformLocation(loc, program, info); // handle array case\n\n          if (/\\[0\\]$/.test(name)) {\n            var baseName = name.replace(/\\[0\\]$/, '');\n            var arrayLocs = []; // if (offset < 0 || offset >= info.size) {\n            //   return null\n            // }\n\n            this._saveError();\n\n            for (var _i9 = 0; this.getError() === gl.NO_ERROR; ++_i9) {\n              var xloc = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getUniformLocation\", this).call(this, program._ | 0, baseName + '[' + _i9 + ']');\n\n              if (this.getError() !== gl.NO_ERROR || xloc < 0) {\n                break;\n              }\n\n              arrayLocs.push(xloc);\n            }\n\n            this._restoreError(gl.NO_ERROR);\n\n            result._array = arrayLocs;\n          } else if (/\\[(\\d+)\\]$/.test(name)) {\n            var offset = +/\\[(\\d+)\\]$/.exec(name)[1];\n\n            if (offset < 0 || offset >= info.size) {\n              return null;\n            }\n          }\n\n          return result;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getVertexAttrib\",\n    value: function getVertexAttrib(index, pname) {\n      index |= 0;\n      pname |= 0;\n\n      if (index < 0 || index >= this._vertexAttribs.length) {\n        this.setError(gl.INVALID_VALUE);\n        return null;\n      }\n\n      var attrib = this._vertexAttribs[index];\n      var extInstancing = this._extensions.angle_instanced_arrays;\n\n      if (extInstancing) {\n        if (pname === extInstancing.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE) {\n          return attrib._divisor;\n        }\n      }\n\n      switch (pname) {\n        case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\n          return attrib._pointerBuffer;\n\n        case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\n          return attrib._isPointer;\n\n        case gl.VERTEX_ATTRIB_ARRAY_SIZE:\n          return attrib._inputSize;\n\n        case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\n          return attrib._inputStride;\n\n        case gl.VERTEX_ATTRIB_ARRAY_TYPE:\n          return attrib._pointerType;\n\n        case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\n          return attrib._pointerNormal;\n\n        case gl.CURRENT_VERTEX_ATTRIB:\n          return new Float32Array(attrib._data);\n\n        default:\n          this.setError(gl.INVALID_ENUM);\n          return null;\n      }\n    }\n  }, {\n    key: \"getVertexAttribOffset\",\n    value: function getVertexAttribOffset(index, pname) {\n      index |= 0;\n      pname |= 0;\n\n      if (index < 0 || index >= this._vertexAttribs.length) {\n        this.setError(gl.INVALID_VALUE);\n        return null;\n      }\n\n      if (pname === gl.VERTEX_ATTRIB_ARRAY_POINTER) {\n        return this._vertexAttribs[index]._pointerOffset;\n      } else {\n        this.setError(gl.INVALID_ENUM);\n        return null;\n      }\n    }\n  }, {\n    key: \"hint\",\n    value: function hint(target, mode) {\n      target |= 0;\n      mode |= 0;\n\n      if (target !== gl.GENERATE_MIPMAP_HINT) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (mode !== gl.FASTEST && mode !== gl.NICEST && mode !== gl.DONT_CARE) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"hint\", this).call(this, target, mode);\n    }\n  }, {\n    key: \"isBuffer\",\n    value: function isBuffer(object) {\n      if (!this._isObject(object, 'isBuffer', WebGLBuffer)) return false;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"isBuffer\", this).call(this, object._ | 0);\n    }\n  }, {\n    key: \"isFramebuffer\",\n    value: function isFramebuffer(object) {\n      if (!this._isObject(object, 'isFramebuffer', WebGLFramebuffer)) return false;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"isFramebuffer\", this).call(this, object._ | 0);\n    }\n  }, {\n    key: \"isProgram\",\n    value: function isProgram(object) {\n      if (!this._isObject(object, 'isProgram', WebGLProgram)) return false;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"isProgram\", this).call(this, object._ | 0);\n    }\n  }, {\n    key: \"isRenderbuffer\",\n    value: function isRenderbuffer(object) {\n      if (!this._isObject(object, 'isRenderbuffer', WebGLRenderbuffer)) return false;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"isRenderbuffer\", this).call(this, object._ | 0);\n    }\n  }, {\n    key: \"isShader\",\n    value: function isShader(object) {\n      if (!this._isObject(object, 'isShader', WebGLShader)) return false;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"isShader\", this).call(this, object._ | 0);\n    }\n  }, {\n    key: \"isTexture\",\n    value: function isTexture(object) {\n      if (!this._isObject(object, 'isTexture', WebGLTexture)) return false;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"isTexture\", this).call(this, object._ | 0);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(cap) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"isEnabled\", this).call(this, cap | 0);\n    }\n  }, {\n    key: \"lineWidth\",\n    value: function lineWidth(width) {\n      if (isNaN(width)) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"lineWidth\", this).call(this, +width);\n    }\n  }, {\n    key: \"linkProgram\",\n    value: function linkProgram(program) {\n      if (!checkObject(program)) {\n        throw new TypeError('linkProgram(WebGLProgram)');\n      }\n\n      if (this._checkWrapper(program, WebGLProgram)) {\n        program._linkCount += 1;\n        program._attributes = [];\n        var prevError = this.getError();\n\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"linkProgram\", this).call(this, program._ | 0);\n\n        var error = this.getError();\n\n        if (error === gl.NO_ERROR) {\n          program._linkStatus = this._fixupLink(program);\n        }\n\n        this.getError();\n        this.setError(prevError || error);\n      }\n    }\n  }, {\n    key: \"pixelStorei\",\n    value: function pixelStorei(pname, param) {\n      pname |= 0;\n      param |= 0;\n\n      if (pname === gl.UNPACK_ALIGNMENT) {\n        if (param === 1 || param === 2 || param === 4 || param === 8) {\n          this._unpackAlignment = param;\n        } else {\n          this.setError(gl.INVALID_VALUE);\n          return;\n        }\n      } else if (pname === gl.PACK_ALIGNMENT) {\n        if (param === 1 || param === 2 || param === 4 || param === 8) {\n          this._packAlignment = param;\n        } else {\n          this.setError(gl.INVALID_VALUE);\n          return;\n        }\n      } else if (pname === gl.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\n        if (!(param === gl.NONE || param === gl.BROWSER_DEFAULT_WEBGL)) {\n          this.setError(gl.INVALID_VALUE);\n          return;\n        }\n      }\n\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"pixelStorei\", this).call(this, pname, param);\n    }\n  }, {\n    key: \"polygonOffset\",\n    value: function polygonOffset(factor, units) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"polygonOffset\", this).call(this, +factor, +units);\n    }\n  }, {\n    key: \"readPixels\",\n    value: function readPixels(x, y, width, height, format, type, pixels) {\n      x |= 0;\n      y |= 0;\n      width |= 0;\n      height |= 0;\n\n      if (this._extensions.oes_texture_float && type === gl.FLOAT && format === gl.RGBA) {} else if (format === gl.RGB || format === gl.ALPHA || type !== gl.UNSIGNED_BYTE) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      } else if (format !== gl.RGBA) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      } else if (width < 0 || height < 0 || !(pixels instanceof Uint8Array)) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (!this._framebufferOk()) {\n        return;\n      }\n\n      var rowStride = width * 4;\n\n      if (rowStride % this._packAlignment !== 0) {\n        rowStride += this._packAlignment - rowStride % this._packAlignment;\n      }\n\n      var imageSize = rowStride * (height - 1) + width * 4;\n\n      if (imageSize <= 0) {\n        return;\n      }\n\n      if (pixels.length < imageSize) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      } // Handle reading outside the window\n\n\n      var viewWidth = this.drawingBufferWidth;\n      var viewHeight = this.drawingBufferHeight;\n\n      if (this._activeFramebuffer) {\n        viewWidth = this._activeFramebuffer._width;\n        viewHeight = this._activeFramebuffer._height;\n      }\n\n      var pixelData = unpackTypedArray(pixels);\n\n      if (x >= viewWidth || x + width <= 0 || y >= viewHeight || y + height <= 0) {\n        for (var i = 0; i < pixelData.length; ++i) {\n          pixelData[i] = 0;\n        }\n      } else if (x < 0 || x + width > viewWidth || y < 0 || y + height > viewHeight) {\n        for (var _i10 = 0; _i10 < pixelData.length; ++_i10) {\n          pixelData[_i10] = 0;\n        }\n\n        var nx = x;\n        var nWidth = width;\n\n        if (x < 0) {\n          nWidth += x;\n          nx = 0;\n        }\n\n        if (nx + width > viewWidth) {\n          nWidth = viewWidth - nx;\n        }\n\n        var ny = y;\n        var nHeight = height;\n\n        if (y < 0) {\n          nHeight += y;\n          ny = 0;\n        }\n\n        if (ny + height > viewHeight) {\n          nHeight = viewHeight - ny;\n        }\n\n        var nRowStride = nWidth * 4;\n\n        if (nRowStride % this._packAlignment !== 0) {\n          nRowStride += this._packAlignment - nRowStride % this._packAlignment;\n        }\n\n        if (nWidth > 0 && nHeight > 0) {\n          var subPixels = new Uint8Array(nRowStride * nHeight);\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"readPixels\", this).call(this, nx, ny, nWidth, nHeight, format, type, subPixels);\n\n          var offset = 4 * (nx - x) + (ny - y) * rowStride;\n\n          for (var j = 0; j < nHeight; ++j) {\n            for (var _i11 = 0; _i11 < nWidth; ++_i11) {\n              for (var k = 0; k < 4; ++k) {\n                pixelData[offset + j * rowStride + 4 * _i11 + k] = subPixels[j * nRowStride + 4 * _i11 + k];\n              }\n            }\n          }\n        }\n      } else {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"readPixels\", this).call(this, x, y, width, height, format, type, pixelData);\n      }\n    }\n  }, {\n    key: \"renderbufferStorage\",\n    value: function renderbufferStorage(target, internalFormat, width, height) {\n      target |= 0;\n      internalFormat |= 0;\n      width |= 0;\n      height |= 0;\n\n      if (target !== gl.RENDERBUFFER) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      var renderbuffer = this._activeRenderbuffer;\n\n      if (!renderbuffer) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (internalFormat !== gl.RGBA4 && internalFormat !== gl.RGB565 && internalFormat !== gl.RGB5_A1 && internalFormat !== gl.DEPTH_COMPONENT16 && internalFormat !== gl.STENCIL_INDEX && internalFormat !== gl.STENCIL_INDEX8 && internalFormat !== gl.DEPTH_STENCIL) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      this._saveError();\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"renderbufferStorage\", this).call(this, target, internalFormat, width, height);\n\n      var error = this.getError();\n\n      this._restoreError(error);\n\n      if (error !== gl.NO_ERROR) {\n        return;\n      }\n\n      renderbuffer._width = width;\n      renderbuffer._height = height;\n      renderbuffer._format = internalFormat;\n      var activeFramebuffer = this._activeFramebuffer;\n\n      if (activeFramebuffer) {\n        var needsUpdate = false;\n\n        var attachments = this._getAttachments();\n\n        for (var i = 0; i < attachments.length; ++i) {\n          if (activeFramebuffer._attachments[attachments[i]] === renderbuffer) {\n            needsUpdate = true;\n            break;\n          }\n        }\n\n        if (needsUpdate) {\n          this._updateFramebufferAttachments(this._activeFramebuffer);\n        }\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      width = width | 0;\n      height = height | 0;\n\n      if (!(width > 0 && height > 0)) {\n        throw new Error('Invalid surface dimensions');\n      } else if (width !== this.drawingBufferWidth || height !== this.drawingBufferHeight) {\n        this._resizeDrawingBuffer(width, height);\n\n        this.drawingBufferWidth = width;\n        this.drawingBufferHeight = height;\n      }\n    }\n  }, {\n    key: \"sampleCoverage\",\n    value: function sampleCoverage(value, invert) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"sampleCoverage\", this).call(this, +value, !!invert);\n    }\n  }, {\n    key: \"scissor\",\n    value: function scissor(x, y, width, height) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"scissor\", this).call(this, x | 0, y | 0, width | 0, height | 0);\n    }\n  }, {\n    key: \"shaderSource\",\n    value: function shaderSource(shader, source) {\n      if (!checkObject(shader)) {\n        throw new TypeError('shaderSource(WebGLShader, String)');\n      }\n\n      if (!shader || !source && typeof source !== 'string') {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      source += '';\n\n      if (!isValidString(source)) {\n        this.setError(gl.INVALID_VALUE);\n      } else if (this._checkWrapper(shader, WebGLShader)) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"shaderSource\", this).call(this, shader._ | 0, this._wrapShader(shader._type, source)); // eslint-disable-line\n\n\n        shader._source = source;\n      }\n    }\n  }, {\n    key: \"stencilFunc\",\n    value: function stencilFunc(func, ref, mask) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"stencilFunc\", this).call(this, func | 0, ref | 0, mask | 0);\n    }\n  }, {\n    key: \"stencilFuncSeparate\",\n    value: function stencilFuncSeparate(face, func, ref, mask) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"stencilFuncSeparate\", this).call(this, face | 0, func | 0, ref | 0, mask | 0);\n    }\n  }, {\n    key: \"stencilMask\",\n    value: function stencilMask(mask) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"stencilMask\", this).call(this, mask | 0);\n    }\n  }, {\n    key: \"stencilMaskSeparate\",\n    value: function stencilMaskSeparate(face, mask) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"stencilMaskSeparate\", this).call(this, face | 0, mask | 0);\n    }\n  }, {\n    key: \"stencilOp\",\n    value: function stencilOp(fail, zfail, zpass) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"stencilOp\", this).call(this, fail | 0, zfail | 0, zpass | 0);\n    }\n  }, {\n    key: \"stencilOpSeparate\",\n    value: function stencilOpSeparate(face, fail, zfail, zpass) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"stencilOpSeparate\", this).call(this, face | 0, fail | 0, zfail | 0, zpass | 0);\n    }\n  }, {\n    key: \"texImage2D\",\n    value: function texImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\n      if (arguments.length === 6) {\n        pixels = border;\n        type = height;\n        format = width;\n        pixels = extractImageData(pixels);\n\n        if (pixels == null) {\n          throw new TypeError('texImage2D(GLenum, GLint, GLenum, GLint, GLenum, GLenum, ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement)');\n        }\n\n        width = pixels.width;\n        height = pixels.height;\n        pixels = pixels.data;\n      }\n\n      target |= 0;\n      level |= 0;\n      internalFormat |= 0;\n      width |= 0;\n      height |= 0;\n      border |= 0;\n      format |= 0;\n      type |= 0;\n\n      if (typeof pixels !== 'object' && pixels !== void 0) {\n        throw new TypeError('texImage2D(GLenum, GLint, GLenum, GLint, GLint, GLint, GLenum, GLenum, Uint8Array)');\n      }\n\n      if (!checkFormat(format) || !checkFormat(internalFormat)) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (type === gl.FLOAT && !this._extensions.oes_texture_float) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      var texture = this._getTexImage(target);\n\n      if (!texture || format !== internalFormat) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      var pixelSize = this._computePixelSize(type, format);\n\n      if (pixelSize === 0) {\n        return;\n      }\n\n      if (!this._checkDimensions(target, width, height, level)) {\n        return;\n      }\n\n      var data = convertPixels(pixels);\n\n      var rowStride = this._computeRowStride(width, pixelSize);\n\n      var imageSize = rowStride * height;\n\n      if (data && data.length < imageSize) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (border !== 0 || validCubeTarget(target) && width !== height) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      } // Need to check for out of memory error\n\n\n      this._saveError();\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"texImage2D\", this).call(this, target, level, internalFormat, width, height, border, format, type, data);\n\n      var error = this.getError();\n\n      this._restoreError(error);\n\n      if (error !== gl.NO_ERROR) {\n        return;\n      } // Save width and height at level\n\n\n      texture._levelWidth[level] = width;\n      texture._levelHeight[level] = height;\n      texture._format = format;\n      texture._type = type;\n      var activeFramebuffer = this._activeFramebuffer;\n\n      if (activeFramebuffer) {\n        var needsUpdate = false;\n\n        var attachments = this._getAttachments();\n\n        for (var i = 0; i < attachments.length; ++i) {\n          if (activeFramebuffer._attachments[attachments[i]] === texture) {\n            needsUpdate = true;\n            break;\n          }\n        }\n\n        if (needsUpdate) {\n          this._updateFramebufferAttachments(this._activeFramebuffer);\n        }\n      }\n    }\n  }, {\n    key: \"texSubImage2D\",\n    value: function texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\n      if (arguments.length === 7) {\n        pixels = format;\n        type = height;\n        format = width;\n        pixels = extractImageData(pixels);\n\n        if (pixels == null) {\n          throw new TypeError('texSubImage2D(GLenum, GLint, GLint, GLint, GLenum, GLenum, ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement)');\n        }\n\n        width = pixels.width;\n        height = pixels.height;\n        pixels = pixels.data;\n      }\n\n      if (typeof pixels !== 'object') {\n        throw new TypeError('texSubImage2D(GLenum, GLint, GLint, GLint, GLint, GLint, GLenum, GLenum, Uint8Array)');\n      }\n\n      target |= 0;\n      level |= 0;\n      xoffset |= 0;\n      yoffset |= 0;\n      width |= 0;\n      height |= 0;\n      format |= 0;\n      type |= 0;\n\n      var texture = this._getTexImage(target);\n\n      if (!texture) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (type === gl.FLOAT && !this._extensions.oes_texture_float) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      var pixelSize = this._computePixelSize(type, format);\n\n      if (pixelSize === 0) {\n        return;\n      }\n\n      if (!this._checkDimensions(target, width, height, level)) {\n        return;\n      }\n\n      if (xoffset < 0 || yoffset < 0) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      var data = convertPixels(pixels);\n\n      var rowStride = this._computeRowStride(width, pixelSize);\n\n      var imageSize = rowStride * height;\n\n      if (!data || data.length < imageSize) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"texSubImage2D\", this).call(this, target, level, xoffset, yoffset, width, height, format, type, data);\n    }\n  }, {\n    key: \"texParameterf\",\n    value: function texParameterf(target, pname, param) {\n      target |= 0;\n      pname |= 0;\n      param = +param;\n\n      if (this._checkTextureTarget(target)) {\n        this._verifyTextureCompleteness(target, pname, param);\n\n        switch (pname) {\n          case gl.TEXTURE_MIN_FILTER:\n          case gl.TEXTURE_MAG_FILTER:\n          case gl.TEXTURE_WRAP_S:\n          case gl.TEXTURE_WRAP_T:\n            return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"texParameterf\", this).call(this, target, pname, param);\n        }\n\n        this.setError(gl.INVALID_ENUM);\n      }\n    }\n  }, {\n    key: \"texParameteri\",\n    value: function texParameteri(target, pname, param) {\n      target |= 0;\n      pname |= 0;\n      param |= 0;\n\n      if (this._checkTextureTarget(target)) {\n        this._verifyTextureCompleteness(target, pname, param);\n\n        switch (pname) {\n          case gl.TEXTURE_MIN_FILTER:\n          case gl.TEXTURE_MAG_FILTER:\n          case gl.TEXTURE_WRAP_S:\n          case gl.TEXTURE_WRAP_T:\n            return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"texParameteri\", this).call(this, target, pname, param);\n        }\n\n        this.setError(gl.INVALID_ENUM);\n      }\n    }\n  }, {\n    key: \"useProgram\",\n    value: function useProgram(program) {\n      if (!checkObject(program)) {\n        throw new TypeError('useProgram(WebGLProgram)');\n      } else if (!program) {\n        this._switchActiveProgram(this._activeProgram);\n\n        this._activeProgram = null;\n        return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"useProgram\", this).call(this, 0);\n      } else if (this._checkWrapper(program, WebGLProgram)) {\n        if (this._activeProgram !== program) {\n          this._switchActiveProgram(this._activeProgram);\n\n          this._activeProgram = program;\n          program._refCount += 1;\n        }\n\n        return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"useProgram\", this).call(this, program._ | 0);\n      }\n    }\n  }, {\n    key: \"validateProgram\",\n    value: function validateProgram(program) {\n      if (this._checkWrapper(program, WebGLProgram)) {\n        _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"validateProgram\", this).call(this, program._ | 0);\n\n        var error = this.getError();\n\n        if (error === gl.NO_ERROR) {\n          program._linkInfoLog = _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"getProgramInfoLog\", this).call(this, program._ | 0);\n        }\n\n        this.getError();\n        this.setError(error);\n      }\n    }\n  }, {\n    key: \"vertexAttribPointer\",\n    value: function vertexAttribPointer(index, size, type, normalized, stride, offset) {\n      if (stride < 0 || offset < 0) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      index |= 0;\n      size |= 0;\n      type |= 0;\n      normalized = !!normalized;\n      stride |= 0;\n      offset |= 0;\n\n      if (stride < 0 || offset < 0 || index < 0 || index >= this._vertexAttribs.length || !(size === 1 || size === 2 || size === 3 || size === 4)) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (this._activeArrayBuffer === null) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      } // fixed, int and unsigned int aren't allowed in WebGL\n\n\n      var byteSize = typeSize(type);\n\n      if (byteSize === 0 || type === gl.INT || type === gl.UNSIGNED_INT) {\n        this.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (stride > 255 || stride < 0) {\n        this.setError(gl.INVALID_VALUE);\n        return;\n      } // stride and offset must be multiples of size\n\n\n      if (stride % byteSize !== 0 || offset % byteSize !== 0) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      } // Call vertex attrib pointer\n\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttribPointer\", this).call(this, index, size, type, normalized, stride, offset); // Save attribute pointer state\n\n\n      var attrib = this._vertexAttribs[index];\n\n      if (attrib._pointerBuffer && attrib._pointerBuffer !== this._activeArrayBuffer) {\n        attrib._pointerBuffer._refCount -= 1;\n\n        attrib._pointerBuffer._checkDelete();\n      }\n\n      this._activeArrayBuffer._refCount += 1;\n      attrib._pointerBuffer = this._activeArrayBuffer;\n      attrib._pointerSize = size * byteSize;\n      attrib._pointerOffset = offset;\n      attrib._pointerStride = stride || size * byteSize;\n      attrib._pointerType = type;\n      attrib._pointerNormal = normalized;\n      attrib._inputStride = stride;\n      attrib._inputSize = size;\n    }\n  }, {\n    key: \"viewport\",\n    value: function viewport(x, y, width, height) {\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"viewport\", this).call(this, x | 0, y | 0, width | 0, height | 0);\n    }\n  }, {\n    key: \"_allocateDrawingBuffer\",\n    value: function _allocateDrawingBuffer(width, height) {\n      this._drawingBuffer = new WebGLDrawingBufferWrapper(_get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createFramebuffer\", this).call(this), _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createTexture\", this).call(this), _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"createRenderbuffer\", this).call(this));\n\n      this._resizeDrawingBuffer(width, height);\n    }\n  }, {\n    key: \"isContextLost\",\n    value: function isContextLost() {\n      return false;\n    }\n  }, {\n    key: \"compressedTexImage2D\",\n    value: function compressedTexImage2D() {// TODO not yet implemented\n    }\n  }, {\n    key: \"compressedTexSubImage2D\",\n    value: function compressedTexSubImage2D() {// TODO not yet implemented\n    }\n  }, {\n    key: \"_checkUniformValid\",\n    value: function _checkUniformValid(location, v0, name, count, type) {\n      if (!checkObject(location)) {\n        throw new TypeError(\"\".concat(name, \"(WebGLUniformLocation, ...)\"));\n      } else if (!location) {\n        return false;\n      } else if (this._checkLocationActive(location)) {\n        var utype = location._activeInfo.type;\n\n        if (utype === gl.SAMPLER_2D || utype === gl.SAMPLER_CUBE) {\n          if (count !== 1) {\n            this.setError(gl.INVALID_VALUE);\n            return;\n          }\n\n          if (type !== 'i') {\n            this.setError(gl.INVALID_OPERATION);\n            return;\n          }\n\n          if (v0 < 0 || v0 >= this._textureUnits.length) {\n            this.setError(gl.INVALID_VALUE);\n            return false;\n          }\n        }\n\n        if (uniformTypeSize(utype) > count) {\n          this.setError(gl.INVALID_OPERATION);\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_checkUniformValueValid\",\n    value: function _checkUniformValueValid(location, value, name, count, type) {\n      if (!checkObject(location) || !checkObject(value)) {\n        throw new TypeError(\"\".concat(name, \"v(WebGLUniformLocation, Array)\"));\n      } else if (!location) {\n        return false;\n      } else if (!this._checkLocationActive(location)) {\n        return false;\n      } else if (typeof value !== 'object' || !value || typeof value.length !== 'number') {\n        throw new TypeError(\"Second argument to \".concat(name, \" must be array\"));\n      } else if (uniformTypeSize(location._activeInfo.type) > count) {\n        this.setError(gl.INVALID_OPERATION);\n        return false;\n      } else if (value.length >= count && value.length % count === 0) {\n        if (location._array) {\n          return true;\n        } else if (value.length === count) {\n          return true;\n        } else {\n          this.setError(gl.INVALID_OPERATION);\n          return false;\n        }\n      }\n\n      this.setError(gl.INVALID_VALUE);\n      return false;\n    }\n  }, {\n    key: \"uniform1f\",\n    value: function uniform1f(location, v0) {\n      if (!this._checkUniformValid(location, v0, 'uniform1f', 1, 'f')) return;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform1f\", this).call(this, location._ | 0, v0);\n    }\n  }, {\n    key: \"uniform1fv\",\n    value: function uniform1fv(location, value) {\n      if (!this._checkUniformValueValid(location, value, 'uniform1fv', 1, 'f')) return;\n\n      if (location._array) {\n        var locs = location._array;\n\n        for (var i = 0; i < locs.length && i < value.length; ++i) {\n          var loc = locs[i];\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform1f\", this).call(this, loc, value[i]);\n        }\n\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform1f\", this).call(this, location._ | 0, value[0]);\n    }\n  }, {\n    key: \"uniform1i\",\n    value: function uniform1i(location, v0) {\n      if (!this._checkUniformValid(location, v0, 'uniform1i', 1, 'i')) return;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform1i\", this).call(this, location._ | 0, v0);\n    }\n  }, {\n    key: \"uniform1iv\",\n    value: function uniform1iv(location, value) {\n      if (!this._checkUniformValueValid(location, value, 'uniform1iv', 1, 'i')) return;\n\n      if (location._array) {\n        var locs = location._array;\n\n        for (var i = 0; i < locs.length && i < value.length; ++i) {\n          var loc = locs[i];\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform1i\", this).call(this, loc, value[i]);\n        }\n\n        return;\n      }\n\n      this.uniform1i(location, value[0]);\n    }\n  }, {\n    key: \"uniform2f\",\n    value: function uniform2f(location, v0, v1) {\n      if (!this._checkUniformValid(location, v0, 'uniform2f', 2, 'f')) return;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform2f\", this).call(this, location._ | 0, v0, v1);\n    }\n  }, {\n    key: \"uniform2fv\",\n    value: function uniform2fv(location, value) {\n      if (!this._checkUniformValueValid(location, value, 'uniform2fv', 2, 'f')) return;\n\n      if (location._array) {\n        var locs = location._array;\n\n        for (var i = 0; i < locs.length && 2 * i < value.length; ++i) {\n          var loc = locs[i];\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform2f\", this).call(this, loc, value[2 * i], value[2 * i + 1]);\n        }\n\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform2f\", this).call(this, location._ | 0, value[0], value[1]);\n    }\n  }, {\n    key: \"uniform2i\",\n    value: function uniform2i(location, v0, v1) {\n      if (!this._checkUniformValid(location, v0, 'uniform2i', 2, 'i')) return;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform2i\", this).call(this, location._ | 0, v0, v1);\n    }\n  }, {\n    key: \"uniform2iv\",\n    value: function uniform2iv(location, value) {\n      if (!this._checkUniformValueValid(location, value, 'uniform2iv', 2, 'i')) return;\n\n      if (location._array) {\n        var locs = location._array;\n\n        for (var i = 0; i < locs.length && 2 * i < value.length; ++i) {\n          var loc = locs[i];\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform2i\", this).call(this, loc, value[2 * i], value[2 * i + 1]);\n        }\n\n        return;\n      }\n\n      this.uniform2i(location, value[0], value[1]);\n    }\n  }, {\n    key: \"uniform3f\",\n    value: function uniform3f(location, v0, v1, v2) {\n      if (!this._checkUniformValid(location, v0, 'uniform3f', 3, 'f')) return;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform3f\", this).call(this, location._ | 0, v0, v1, v2);\n    }\n  }, {\n    key: \"uniform3fv\",\n    value: function uniform3fv(location, value) {\n      if (!this._checkUniformValueValid(location, value, 'uniform3fv', 3, 'f')) return;\n\n      if (location._array) {\n        var locs = location._array;\n\n        for (var i = 0; i < locs.length && 3 * i < value.length; ++i) {\n          var loc = locs[i];\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform3f\", this).call(this, loc, value[3 * i], value[3 * i + 1], value[3 * i + 2]);\n        }\n\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform3f\", this).call(this, location._ | 0, value[0], value[1], value[2]);\n    }\n  }, {\n    key: \"uniform3i\",\n    value: function uniform3i(location, v0, v1, v2) {\n      if (!this._checkUniformValid(location, v0, 'uniform3i', 3, 'i')) return;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform3i\", this).call(this, location._ | 0, v0, v1, v2);\n    }\n  }, {\n    key: \"uniform3iv\",\n    value: function uniform3iv(location, value) {\n      if (!this._checkUniformValueValid(location, value, 'uniform3iv', 3, 'i')) return;\n\n      if (location._array) {\n        var locs = location._array;\n\n        for (var i = 0; i < locs.length && 3 * i < value.length; ++i) {\n          var loc = locs[i];\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform3i\", this).call(this, loc, value[3 * i], value[3 * i + 1], value[3 * i + 2]);\n        }\n\n        return;\n      }\n\n      this.uniform3i(location, value[0], value[1], value[2]);\n    }\n  }, {\n    key: \"uniform4f\",\n    value: function uniform4f(location, v0, v1, v2, v3) {\n      if (!this._checkUniformValid(location, v0, 'uniform4f', 4, 'f')) return;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform4f\", this).call(this, location._ | 0, v0, v1, v2, v3);\n    }\n  }, {\n    key: \"uniform4fv\",\n    value: function uniform4fv(location, value) {\n      if (!this._checkUniformValueValid(location, value, 'uniform4fv', 4, 'f')) return;\n\n      if (location._array) {\n        var locs = location._array;\n\n        for (var i = 0; i < locs.length && 4 * i < value.length; ++i) {\n          var loc = locs[i];\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform4f\", this).call(this, loc, value[4 * i], value[4 * i + 1], value[4 * i + 2], value[4 * i + 3]);\n        }\n\n        return;\n      }\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform4f\", this).call(this, location._ | 0, value[0], value[1], value[2], value[3]);\n    }\n  }, {\n    key: \"uniform4i\",\n    value: function uniform4i(location, v0, v1, v2, v3) {\n      if (!this._checkUniformValid(location, v0, 'uniform4i', 4, 'i')) return;\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform4i\", this).call(this, location._ | 0, v0, v1, v2, v3);\n    }\n  }, {\n    key: \"uniform4iv\",\n    value: function uniform4iv(location, value) {\n      if (!this._checkUniformValueValid(location, value, 'uniform4iv', 4, 'i')) return;\n\n      if (location._array) {\n        var locs = location._array;\n\n        for (var i = 0; i < locs.length && 4 * i < value.length; ++i) {\n          var loc = locs[i];\n\n          _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniform4i\", this).call(this, loc, value[4 * i], value[4 * i + 1], value[4 * i + 2], value[4 * i + 3]);\n        }\n\n        return;\n      }\n\n      this.uniform4i(location, value[0], value[1], value[2], value[3]);\n    }\n  }, {\n    key: \"_checkUniformMatrix\",\n    value: function _checkUniformMatrix(location, transpose, value, name, count) {\n      if (!checkObject(location) || typeof value !== 'object') {\n        throw new TypeError(name + '(WebGLUniformLocation, Boolean, Array)');\n      } else if (!!transpose || typeof value !== 'object' || value === null || !value.length || value.length % count * count !== 0) {\n        this.setError(gl.INVALID_VALUE);\n        return false;\n      }\n\n      if (!location) {\n        return false;\n      }\n\n      if (!this._checkLocationActive(location)) {\n        return false;\n      }\n\n      if (value.length === count * count) {\n        return true;\n      } else if (location._array) {\n        return true;\n      }\n\n      this.setError(gl.INVALID_VALUE);\n      return false;\n    }\n  }, {\n    key: \"uniformMatrix2fv\",\n    value: function uniformMatrix2fv(location, transpose, value) {\n      if (!this._checkUniformMatrix(location, transpose, value, 'uniformMatrix2fv', 2)) return;\n      var data = new Float32Array(value);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniformMatrix2fv\", this).call(this, location._ | 0, !!transpose, data);\n    }\n  }, {\n    key: \"uniformMatrix3fv\",\n    value: function uniformMatrix3fv(location, transpose, value) {\n      if (!this._checkUniformMatrix(location, transpose, value, 'uniformMatrix3fv', 3)) return;\n      var data = new Float32Array(value);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniformMatrix3fv\", this).call(this, location._ | 0, !!transpose, data);\n    }\n  }, {\n    key: \"uniformMatrix4fv\",\n    value: function uniformMatrix4fv(location, transpose, value) {\n      if (!this._checkUniformMatrix(location, transpose, value, 'uniformMatrix4fv', 4)) return;\n      var data = new Float32Array(value);\n\n      _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"uniformMatrix4fv\", this).call(this, location._ | 0, !!transpose, data);\n    }\n  }, {\n    key: \"vertexAttrib1f\",\n    value: function vertexAttrib1f(index, v0) {\n      index |= 0;\n      if (!this._checkVertexIndex(index)) return;\n      var data = this._vertexAttribs[index]._data;\n      data[3] = 1;\n      data[1] = data[2] = 0;\n      data[0] = v0;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttrib1f\", this).call(this, index | 0, +v0);\n    }\n  }, {\n    key: \"vertexAttrib2f\",\n    value: function vertexAttrib2f(index, v0, v1) {\n      index |= 0;\n      if (!this._checkVertexIndex(index)) return;\n      var data = this._vertexAttribs[index]._data;\n      data[3] = 1;\n      data[2] = 0;\n      data[1] = v1;\n      data[0] = v0;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttrib2f\", this).call(this, index | 0, +v0, +v1);\n    }\n  }, {\n    key: \"vertexAttrib3f\",\n    value: function vertexAttrib3f(index, v0, v1, v2) {\n      index |= 0;\n      if (!this._checkVertexIndex(index)) return;\n      var data = this._vertexAttribs[index]._data;\n      data[3] = 1;\n      data[2] = v2;\n      data[1] = v1;\n      data[0] = v0;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttrib3f\", this).call(this, index | 0, +v0, +v1, +v2);\n    }\n  }, {\n    key: \"vertexAttrib4f\",\n    value: function vertexAttrib4f(index, v0, v1, v2, v3) {\n      index |= 0;\n      if (!this._checkVertexIndex(index)) return;\n      var data = this._vertexAttribs[index]._data;\n      data[3] = v3;\n      data[2] = v2;\n      data[1] = v1;\n      data[0] = v0;\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttrib4f\", this).call(this, index | 0, +v0, +v1, +v2, +v3);\n    }\n  }, {\n    key: \"vertexAttrib1fv\",\n    value: function vertexAttrib1fv(index, value) {\n      if (typeof value !== 'object' || value === null || value.length < 1) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      var data = this._vertexAttribs[index]._data;\n      data[3] = 1;\n      data[2] = 0;\n      data[1] = 0;\n      data[0] = value[0];\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttrib1f\", this).call(this, index | 0, +value[0]);\n    }\n  }, {\n    key: \"vertexAttrib2fv\",\n    value: function vertexAttrib2fv(index, value) {\n      if (typeof value !== 'object' || value === null || value.length < 2) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      var data = this._vertexAttribs[index]._data;\n      data[3] = 1;\n      data[2] = 0;\n      data[1] = value[1];\n      data[0] = value[0];\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttrib2f\", this).call(this, index | 0, +value[0], +value[1]);\n    }\n  }, {\n    key: \"vertexAttrib3fv\",\n    value: function vertexAttrib3fv(index, value) {\n      if (typeof value !== 'object' || value === null || value.length < 3) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      var data = this._vertexAttribs[index]._data;\n      data[3] = 1;\n      data[2] = value[2];\n      data[1] = value[1];\n      data[0] = value[0];\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttrib3f\", this).call(this, index | 0, +value[0], +value[1], +value[2]);\n    }\n  }, {\n    key: \"vertexAttrib4fv\",\n    value: function vertexAttrib4fv(index, value) {\n      if (typeof value !== 'object' || value === null || value.length < 4) {\n        this.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      var data = this._vertexAttribs[index]._data;\n      data[3] = value[3];\n      data[2] = value[2];\n      data[1] = value[1];\n      data[0] = value[0];\n      return _get(_getPrototypeOf(WebGLRenderingContext.prototype), \"vertexAttrib4f\", this).call(this, index | 0, +value[0], +value[1], +value[2], +value[3]);\n    }\n  }]);\n\n  return WebGLRenderingContext;\n}(NativeWebGLRenderingContext);\n\nmodule.exports = {\n  WebGLRenderingContext: WebGLRenderingContext,\n  wrapContext: wrapContext\n};","var tokenize = require('./index');\n\nmodule.exports = tokenizeString;\n\nfunction tokenizeString(str, opt) {\n  var generator = tokenize(opt);\n  var tokens = [];\n  tokens = tokens.concat(generator(str));\n  tokens = tokens.concat(generator(null));\n  return tokens;\n}","module.exports = tokenize;\n\nvar literals100 = require('./lib/literals'),\n    operators = require('./lib/operators'),\n    builtins100 = require('./lib/builtins'),\n    literals300es = require('./lib/literals-300es'),\n    builtins300es = require('./lib/builtins-300es');\n\nvar NORMAL = 999 // <-- never emitted\n,\n    TOKEN = 9999 // <-- never emitted\n,\n    BLOCK_COMMENT = 0,\n    LINE_COMMENT = 1,\n    PREPROCESSOR = 2,\n    OPERATOR = 3,\n    INTEGER = 4,\n    FLOAT = 5,\n    IDENT = 6,\n    BUILTIN = 7,\n    KEYWORD = 8,\n    WHITESPACE = 9,\n    EOF = 10,\n    HEX = 11;\nvar map = ['block-comment', 'line-comment', 'preprocessor', 'operator', 'integer', 'float', 'ident', 'builtin', 'keyword', 'whitespace', 'eof', 'integer'];\n\nfunction tokenize(opt) {\n  var i = 0,\n      total = 0,\n      mode = NORMAL,\n      c,\n      last,\n      content = [],\n      tokens = [],\n      token_idx = 0,\n      token_offs = 0,\n      line = 1,\n      col = 0,\n      start = 0,\n      isnum = false,\n      isoperator = false,\n      input = '',\n      len;\n  opt = opt || {};\n  var allBuiltins = builtins100;\n  var allLiterals = literals100;\n\n  if (opt.version === '300 es') {\n    allBuiltins = builtins300es;\n    allLiterals = literals300es;\n  } // cache by name\n\n\n  var builtinsDict = {},\n      literalsDict = {};\n\n  for (var i = 0; i < allBuiltins.length; i++) {\n    builtinsDict[allBuiltins[i]] = true;\n  }\n\n  for (var i = 0; i < allLiterals.length; i++) {\n    literalsDict[allLiterals[i]] = true;\n  }\n\n  return function (data) {\n    tokens = [];\n    if (data !== null) return write(data);\n    return end();\n  };\n\n  function token(data) {\n    if (data.length) {\n      tokens.push({\n        type: map[mode],\n        data: data,\n        position: start,\n        line: line,\n        column: col\n      });\n    }\n  }\n\n  function write(chunk) {\n    i = 0;\n    if (chunk.toString) chunk = chunk.toString();\n    input += chunk.replace(/\\r\\n/g, '\\n');\n    len = input.length;\n    var last;\n\n    while (c = input[i], i < len) {\n      last = i;\n\n      switch (mode) {\n        case BLOCK_COMMENT:\n          i = block_comment();\n          break;\n\n        case LINE_COMMENT:\n          i = line_comment();\n          break;\n\n        case PREPROCESSOR:\n          i = preprocessor();\n          break;\n\n        case OPERATOR:\n          i = operator();\n          break;\n\n        case INTEGER:\n          i = integer();\n          break;\n\n        case HEX:\n          i = hex();\n          break;\n\n        case FLOAT:\n          i = decimal();\n          break;\n\n        case TOKEN:\n          i = readtoken();\n          break;\n\n        case WHITESPACE:\n          i = whitespace();\n          break;\n\n        case NORMAL:\n          i = normal();\n          break;\n      }\n\n      if (last !== i) {\n        switch (input[last]) {\n          case '\\n':\n            col = 0;\n            ++line;\n            break;\n\n          default:\n            ++col;\n            break;\n        }\n      }\n    }\n\n    total += i;\n    input = input.slice(i);\n    return tokens;\n  }\n\n  function end(chunk) {\n    if (content.length) {\n      token(content.join(''));\n    }\n\n    mode = EOF;\n    token('(eof)');\n    return tokens;\n  }\n\n  function normal() {\n    content = content.length ? [] : content;\n\n    if (last === '/' && c === '*') {\n      start = total + i - 1;\n      mode = BLOCK_COMMENT;\n      last = c;\n      return i + 1;\n    }\n\n    if (last === '/' && c === '/') {\n      start = total + i - 1;\n      mode = LINE_COMMENT;\n      last = c;\n      return i + 1;\n    }\n\n    if (c === '#') {\n      mode = PREPROCESSOR;\n      start = total + i;\n      return i;\n    }\n\n    if (/\\s/.test(c)) {\n      mode = WHITESPACE;\n      start = total + i;\n      return i;\n    }\n\n    isnum = /\\d/.test(c);\n    isoperator = /[^\\w_]/.test(c);\n    start = total + i;\n    mode = isnum ? INTEGER : isoperator ? OPERATOR : TOKEN;\n    return i;\n  }\n\n  function whitespace() {\n    if (/[^\\s]/g.test(c)) {\n      token(content.join(''));\n      mode = NORMAL;\n      return i;\n    }\n\n    content.push(c);\n    last = c;\n    return i + 1;\n  }\n\n  function preprocessor() {\n    if ((c === '\\r' || c === '\\n') && last !== '\\\\') {\n      token(content.join(''));\n      mode = NORMAL;\n      return i;\n    }\n\n    content.push(c);\n    last = c;\n    return i + 1;\n  }\n\n  function line_comment() {\n    return preprocessor();\n  }\n\n  function block_comment() {\n    if (c === '/' && last === '*') {\n      content.push(c);\n      token(content.join(''));\n      mode = NORMAL;\n      return i + 1;\n    }\n\n    content.push(c);\n    last = c;\n    return i + 1;\n  }\n\n  function operator() {\n    if (last === '.' && /\\d/.test(c)) {\n      mode = FLOAT;\n      return i;\n    }\n\n    if (last === '/' && c === '*') {\n      mode = BLOCK_COMMENT;\n      return i;\n    }\n\n    if (last === '/' && c === '/') {\n      mode = LINE_COMMENT;\n      return i;\n    }\n\n    if (c === '.' && content.length) {\n      while (determine_operator(content)) {\n        ;\n      }\n\n      mode = FLOAT;\n      return i;\n    }\n\n    if (c === ';' || c === ')' || c === '(') {\n      if (content.length) while (determine_operator(content)) {\n        ;\n      }\n      token(c);\n      mode = NORMAL;\n      return i + 1;\n    }\n\n    var is_composite_operator = content.length === 2 && c !== '=';\n\n    if (/[\\w_\\d\\s]/.test(c) || is_composite_operator) {\n      while (determine_operator(content)) {\n        ;\n      }\n\n      mode = NORMAL;\n      return i;\n    }\n\n    content.push(c);\n    last = c;\n    return i + 1;\n  }\n\n  function determine_operator(buf) {\n    var j = 0,\n        idx,\n        res;\n\n    do {\n      idx = operators.indexOf(buf.slice(0, buf.length + j).join(''));\n      res = operators[idx];\n\n      if (idx === -1) {\n        if (j-- + buf.length > 0) continue;\n        res = buf.slice(0, 1).join('');\n      }\n\n      token(res);\n      start += res.length;\n      content = content.slice(res.length);\n      return content.length;\n    } while (1);\n  }\n\n  function hex() {\n    if (/[^a-fA-F0-9]/.test(c)) {\n      token(content.join(''));\n      mode = NORMAL;\n      return i;\n    }\n\n    content.push(c);\n    last = c;\n    return i + 1;\n  }\n\n  function integer() {\n    if (c === '.') {\n      content.push(c);\n      mode = FLOAT;\n      last = c;\n      return i + 1;\n    }\n\n    if (/[eE]/.test(c)) {\n      content.push(c);\n      mode = FLOAT;\n      last = c;\n      return i + 1;\n    }\n\n    if (c === 'x' && content.length === 1 && content[0] === '0') {\n      mode = HEX;\n      content.push(c);\n      last = c;\n      return i + 1;\n    }\n\n    if (/[^\\d]/.test(c)) {\n      token(content.join(''));\n      mode = NORMAL;\n      return i;\n    }\n\n    content.push(c);\n    last = c;\n    return i + 1;\n  }\n\n  function decimal() {\n    if (c === 'f') {\n      content.push(c);\n      last = c;\n      i += 1;\n    }\n\n    if (/[eE]/.test(c)) {\n      content.push(c);\n      last = c;\n      return i + 1;\n    }\n\n    if ((c === '-' || c === '+') && /[eE]/.test(last)) {\n      content.push(c);\n      last = c;\n      return i + 1;\n    }\n\n    if (/[^\\d]/.test(c)) {\n      token(content.join(''));\n      mode = NORMAL;\n      return i;\n    }\n\n    content.push(c);\n    last = c;\n    return i + 1;\n  }\n\n  function readtoken() {\n    if (/[^\\d\\w_]/.test(c)) {\n      var contentstr = content.join('');\n\n      if (literalsDict[contentstr]) {\n        mode = KEYWORD;\n      } else if (builtinsDict[contentstr]) {\n        mode = BUILTIN;\n      } else {\n        mode = IDENT;\n      }\n\n      token(content.join(''));\n      mode = NORMAL;\n      return i;\n    }\n\n    content.push(c);\n    last = c;\n    return i + 1;\n  }\n}","module.exports = ['<<=', '>>=', '++', '--', '<<', '>>', '<=', '>=', '==', '!=', '&&', '||', '+=', '-=', '*=', '/=', '%=', '&=', '^^', '^=', '|=', '(', ')', '[', ']', '.', '!', '~', '*', '/', '%', '+', '-', '<', '>', '&', '^', '|', '?', ':', '=', ',', ';', '{', '}'];","var v100 = require('./literals');\n\nmodule.exports = v100.slice().concat(['layout', 'centroid', 'smooth', 'case', 'mat2x2', 'mat2x3', 'mat2x4', 'mat3x2', 'mat3x3', 'mat3x4', 'mat4x2', 'mat4x3', 'mat4x4', 'uvec2', 'uvec3', 'uvec4', 'samplerCubeShadow', 'sampler2DArray', 'sampler2DArrayShadow', 'isampler2D', 'isampler3D', 'isamplerCube', 'isampler2DArray', 'usampler2D', 'usampler3D', 'usamplerCube', 'usampler2DArray', 'coherent', 'restrict', 'readonly', 'writeonly', 'resource', 'atomic_uint', 'noperspective', 'patch', 'sample', 'subroutine', 'common', 'partition', 'active', 'filter', 'image1D', 'image2D', 'image3D', 'imageCube', 'iimage1D', 'iimage2D', 'iimage3D', 'iimageCube', 'uimage1D', 'uimage2D', 'uimage3D', 'uimageCube', 'image1DArray', 'image2DArray', 'iimage1DArray', 'iimage2DArray', 'uimage1DArray', 'uimage2DArray', 'image1DShadow', 'image2DShadow', 'image1DArrayShadow', 'image2DArrayShadow', 'imageBuffer', 'iimageBuffer', 'uimageBuffer', 'sampler1DArray', 'sampler1DArrayShadow', 'isampler1D', 'isampler1DArray', 'usampler1D', 'usampler1DArray', 'isampler2DRect', 'usampler2DRect', 'samplerBuffer', 'isamplerBuffer', 'usamplerBuffer', 'sampler2DMS', 'isampler2DMS', 'usampler2DMS', 'sampler2DMSArray', 'isampler2DMSArray', 'usampler2DMSArray']);","// 300es builtins/reserved words that were previously valid in v100\nvar v100 = require('./builtins'); // The texture2D|Cube functions have been removed\n// And the gl_ features are updated\n\n\nv100 = v100.slice().filter(function (b) {\n  return !/^(gl\\_|texture)/.test(b);\n});\nmodule.exports = v100.concat([// the updated gl_ constants\n'gl_VertexID', 'gl_InstanceID', 'gl_Position', 'gl_PointSize', 'gl_FragCoord', 'gl_FrontFacing', 'gl_FragDepth', 'gl_PointCoord', 'gl_MaxVertexAttribs', 'gl_MaxVertexUniformVectors', 'gl_MaxVertexOutputVectors', 'gl_MaxFragmentInputVectors', 'gl_MaxVertexTextureImageUnits', 'gl_MaxCombinedTextureImageUnits', 'gl_MaxTextureImageUnits', 'gl_MaxFragmentUniformVectors', 'gl_MaxDrawBuffers', 'gl_MinProgramTexelOffset', 'gl_MaxProgramTexelOffset', 'gl_DepthRangeParameters', 'gl_DepthRange' // other builtins\n, 'trunc', 'round', 'roundEven', 'isnan', 'isinf', 'floatBitsToInt', 'floatBitsToUint', 'intBitsToFloat', 'uintBitsToFloat', 'packSnorm2x16', 'unpackSnorm2x16', 'packUnorm2x16', 'unpackUnorm2x16', 'packHalf2x16', 'unpackHalf2x16', 'outerProduct', 'transpose', 'determinant', 'inverse', 'texture', 'textureSize', 'textureProj', 'textureLod', 'textureOffset', 'texelFetch', 'texelFetchOffset', 'textureProjOffset', 'textureLodOffset', 'textureProjLod', 'textureProjLodOffset', 'textureGrad', 'textureGradOffset', 'textureProjGrad', 'textureProjGradOffset']);","/**\n * Module dependencies.\n */\nvar fs = require('fs'),\n    path = require('path'),\n    fileURLToPath = require('file-uri-to-path'),\n    join = path.join,\n    dirname = path.dirname,\n    exists = fs.accessSync && function (path) {\n  try {\n    fs.accessSync(path);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n} || fs.existsSync || path.existsSync,\n    defaults = {\n  arrow: process.env.NODE_BINDINGS_ARROW || ' → ',\n  compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n  platform: process.platform,\n  arch: process.arch,\n  nodePreGyp: 'node-v' + process.versions.modules + '-' + process.platform + '-' + process.arch,\n  version: process.versions.node,\n  bindings: 'bindings.node',\n  try: [// node-gyp's linked version in the \"build\" dir\n  ['module_root', 'build', 'bindings'], // node-waf and gyp_addon (a.k.a node-gyp)\n  ['module_root', 'build', 'Debug', 'bindings'], ['module_root', 'build', 'Release', 'bindings'], // Debug files, for development (legacy behavior, remove for node v0.9)\n  ['module_root', 'out', 'Debug', 'bindings'], ['module_root', 'Debug', 'bindings'], // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n  ['module_root', 'out', 'Release', 'bindings'], ['module_root', 'Release', 'bindings'], // Legacy from node-waf, node <= 0.4.x\n  ['module_root', 'build', 'default', 'bindings'], // Production \"Release\" buildtype binary (meh...)\n  ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'], // node-qbs builds\n  ['module_root', 'addon-build', 'release', 'install-root', 'bindings'], ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'], ['module_root', 'addon-build', 'default', 'install-root', 'bindings'], // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n  ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']]\n};\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = {\n      bindings: opts\n    };\n  } else if (!opts) {\n    opts = {};\n  } // maps `defaults` onto `opts` object\n\n\n  Object.keys(defaults).map(function (i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  }); // Get the module root\n\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  } // Ensure the given bindings name ends with .node\n\n\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  } // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n\n\n  var requireFunc = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require;\n  var tries = [],\n      i = 0,\n      l = opts.try.length,\n      n,\n      b,\n      err;\n\n  for (; i < l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p;\n    }));\n    tries.push(n);\n\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n\n      if (!opts.path) {\n        b.path = n;\n      }\n\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' && e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' && !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n' + tries.map(function (a) {\n    return opts.arrow + a;\n  }).join('\\n'));\n  err.tries = tries;\n  throw err;\n}\n\nmodule.exports = exports = bindings;\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n      origSTL = Error.stackTraceLimit,\n      dummy = {},\n      fileName;\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  }; // run the 'prepareStackTrace' function above\n\n\n  Error.captureStackTrace(dummy);\n  dummy.stack; // cleanup\n\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL; // handle filename that starts with \"file://\"\n\n  var fileSchema = 'file://';\n\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n      prev;\n\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file + '\". Do you have a `package.json` file? ');\n    } // Try the parent dir next\n\n\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};","/**\n * Module dependencies.\n */\nvar sep = require('path').sep || '/';\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath(uri) {\n  if ('string' != typeof uri || uri.length <= 7 || 'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1); // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  } // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n\n\n  path = path.replace(/^(.+)\\|/, '$1:'); // for Windows, we need to invert the path separators from what a URI uses\n\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {// has Windows drive at beginning of path\n  } else {\n    // unix path…\n    path = sep + path;\n  }\n\n  return host + path;\n}","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('../native-gl'),\n    gl = _require.gl;\n\nvar _require2 = require('../utils'),\n    vertexCount = _require2.vertexCount;\n\nvar ANGLEInstancedArrays =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function ANGLEInstancedArrays(ctx) {\n    _classCallCheck(this, ANGLEInstancedArrays);\n\n    this.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88fe;\n    this.ctx = ctx;\n    this._drawArraysInstanced = gl._drawArraysInstanced.bind(ctx);\n    this._drawElementsInstanced = gl._drawElementsInstanced.bind(ctx);\n    this._vertexAttribDivisor = gl._vertexAttribDivisor.bind(ctx);\n  }\n\n  _createClass(ANGLEInstancedArrays, [{\n    key: \"drawArraysInstancedANGLE\",\n    value: function drawArraysInstancedANGLE(mode, first, count, primCount) {\n      var ctx = this.ctx;\n      mode |= 0;\n      first |= 0;\n      count |= 0;\n      primCount |= 0;\n\n      if (first < 0 || count < 0 || primCount < 0) {\n        ctx.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (!ctx._checkStencilState()) {\n        return;\n      }\n\n      var reducedCount = vertexCount(mode, count);\n\n      if (reducedCount < 0) {\n        ctx.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      if (!ctx._framebufferOk()) {\n        return;\n      }\n\n      if (count === 0 || primCount === 0) {\n        return;\n      }\n\n      var maxIndex = first;\n\n      if (count > 0) {\n        maxIndex = count + first - 1 >>> 0;\n      }\n\n      if (this.checkInstancedVertexAttribState(maxIndex, primCount)) {\n        return this._drawArraysInstanced(mode, first, reducedCount, primCount);\n      }\n    }\n  }, {\n    key: \"drawElementsInstancedANGLE\",\n    value: function drawElementsInstancedANGLE(mode, count, type, ioffset, primCount) {\n      var ctx = this.ctx;\n      mode |= 0;\n      count |= 0;\n      type |= 0;\n      ioffset |= 0;\n      primCount |= 0;\n\n      if (count < 0 || ioffset < 0 || primCount < 0) {\n        ctx.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      if (!ctx._checkStencilState()) {\n        return;\n      }\n\n      var elementBuffer = ctx._activeElementArrayBuffer;\n\n      if (!elementBuffer) {\n        ctx.setError(gl.INVALID_OPERATION);\n        return;\n      } // Unpack element data\n\n\n      var elementData = null;\n      var offset = ioffset;\n\n      if (type === gl.UNSIGNED_SHORT) {\n        if (offset % 2) {\n          ctx.setError(gl.INVALID_OPERATION);\n          return;\n        }\n\n        offset >>= 1;\n        elementData = new Uint16Array(elementBuffer._elements.buffer);\n      } else if (ctx._extensions.oes_element_index_uint && type === gl.UNSIGNED_INT) {\n        if (offset % 4) {\n          ctx.setError(gl.INVALID_OPERATION);\n          return;\n        }\n\n        offset >>= 2;\n        elementData = new Uint32Array(elementBuffer._elements.buffer);\n      } else if (type === gl.UNSIGNED_BYTE) {\n        elementData = elementBuffer._elements;\n      } else {\n        ctx.setError(gl.INVALID_ENUM);\n        return;\n      }\n\n      var reducedCount = count;\n\n      switch (mode) {\n        case gl.TRIANGLES:\n          if (count % 3) {\n            reducedCount -= count % 3;\n          }\n\n          break;\n\n        case gl.LINES:\n          if (count % 2) {\n            reducedCount -= count % 2;\n          }\n\n          break;\n\n        case gl.POINTS:\n          break;\n\n        case gl.LINE_LOOP:\n        case gl.LINE_STRIP:\n          if (count < 2) {\n            ctx.setError(gl.INVALID_OPERATION);\n            return;\n          }\n\n          break;\n\n        case gl.TRIANGLE_FAN:\n        case gl.TRIANGLE_STRIP:\n          if (count < 3) {\n            ctx.setError(gl.INVALID_OPERATION);\n            return;\n          }\n\n          break;\n\n        default:\n          ctx.setError(gl.INVALID_ENUM);\n          return;\n      }\n\n      if (!ctx._framebufferOk()) {\n        return;\n      }\n\n      if (count === 0 || primCount === 0) {\n        this.checkInstancedVertexAttribState(0, 0);\n        return;\n      }\n\n      if (count + offset >>> 0 > elementData.length) {\n        ctx.setError(gl.INVALID_OPERATION);\n        return;\n      } // Compute max index\n\n\n      var maxIndex = -1;\n\n      for (var i = offset; i < offset + count; ++i) {\n        maxIndex = Math.max(maxIndex, elementData[i]);\n      }\n\n      if (maxIndex < 0) {\n        this.checkInstancedVertexAttribState(0, 0);\n        return;\n      }\n\n      if (this.checkInstancedVertexAttribState(maxIndex, primCount)) {\n        if (reducedCount > 0) {\n          this._drawElementsInstanced(mode, reducedCount, type, ioffset, primCount);\n        }\n      }\n    }\n  }, {\n    key: \"vertexAttribDivisorANGLE\",\n    value: function vertexAttribDivisorANGLE(index, divisor) {\n      var ctx = this.ctx;\n      index |= 0;\n      divisor |= 0;\n\n      if (divisor < 0 || index < 0 || index >= ctx._vertexAttribs.length) {\n        ctx.setError(gl.INVALID_VALUE);\n        return;\n      }\n\n      var attrib = ctx._vertexAttribs[index];\n      attrib._divisor = divisor;\n\n      this._vertexAttribDivisor(index, divisor);\n    }\n  }, {\n    key: \"checkInstancedVertexAttribState\",\n    value: function checkInstancedVertexAttribState(maxIndex, primCount) {\n      var ctx = this.ctx;\n      var program = ctx._activeProgram;\n\n      if (!program) {\n        ctx.setError(gl.INVALID_OPERATION);\n        return false;\n      }\n\n      var attribs = ctx._vertexAttribs;\n      var hasZero = false;\n\n      for (var i = 0; i < attribs.length; ++i) {\n        var attrib = attribs[i];\n\n        if (attrib._isPointer) {\n          var buffer = attrib._pointerBuffer;\n\n          if (program._attributes.indexOf(i) >= 0) {\n            if (!buffer) {\n              ctx.setError(gl.INVALID_OPERATION);\n              return false;\n            }\n\n            var maxByte = 0;\n\n            if (attrib._divisor === 0) {\n              hasZero = true;\n              maxByte = attrib._pointerStride * maxIndex + attrib._pointerSize + attrib._pointerOffset;\n            } else {\n              maxByte = attrib._pointerStride * (Math.ceil(primCount / attrib._divisor) - 1) + attrib._pointerSize + attrib._pointerOffset;\n            }\n\n            if (maxByte > buffer._size) {\n              ctx.setError(gl.INVALID_OPERATION);\n              return false;\n            }\n          }\n        }\n      }\n\n      if (!hasZero) {\n        ctx.setError(gl.INVALID_OPERATION);\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return ANGLEInstancedArrays;\n}();\n\nfunction getANGLEInstancedArrays(ctx) {\n  return new ANGLEInstancedArrays(ctx);\n}\n\nmodule.exports = {\n  ANGLEInstancedArrays: ANGLEInstancedArrays,\n  getANGLEInstancedArrays: getANGLEInstancedArrays\n};","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar OESElementIndexUint = function OESElementIndexUint() {\n  \"use strict\";\n\n  _classCallCheck(this, OESElementIndexUint);\n};\n\nfunction getOESElementIndexUint(context) {\n  var result = null;\n  var exts = context.getSupportedExtensions();\n\n  if (exts && exts.indexOf('OES_element_index_uint') >= 0) {\n    result = new OESElementIndexUint();\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  getOESElementIndexUint: getOESElementIndexUint,\n  OESElementIndexUint: OESElementIndexUint\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar OESTextureFloat = function OESTextureFloat() {\n  \"use strict\";\n\n  _classCallCheck(this, OESTextureFloat);\n};\n\nfunction getOESTextureFloat(context) {\n  var result = null;\n  var exts = context.getSupportedExtensions();\n\n  if (exts && exts.indexOf('OES_texture_float') >= 0) {\n    result = new OESTextureFloat();\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  getOESTextureFloat: getOESTextureFloat,\n  OESTextureFloat: OESTextureFloat\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar STACKGLDestroyContext = function STACKGLDestroyContext(ctx) {\n  \"use strict\";\n\n  _classCallCheck(this, STACKGLDestroyContext);\n\n  this.destroy = ctx.destroy.bind(ctx);\n};\n\nfunction getSTACKGLDestroyContext(ctx) {\n  return new STACKGLDestroyContext(ctx);\n}\n\nmodule.exports = {\n  getSTACKGLDestroyContext: getSTACKGLDestroyContext,\n  STACKGLDestroyContext: STACKGLDestroyContext\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar STACKGLResizeDrawingBuffer = function STACKGLResizeDrawingBuffer(ctx) {\n  \"use strict\";\n\n  _classCallCheck(this, STACKGLResizeDrawingBuffer);\n\n  this.resize = ctx.resize.bind(ctx);\n};\n\nfunction getSTACKGLResizeDrawingBuffer(ctx) {\n  return new STACKGLResizeDrawingBuffer(ctx);\n}\n\nmodule.exports = {\n  getSTACKGLResizeDrawingBuffer: getSTACKGLResizeDrawingBuffer,\n  STACKGLResizeDrawingBuffer: STACKGLResizeDrawingBuffer\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('../native-gl'),\n    gl = _require.gl;\n\nvar WebGLDrawBuffers =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function WebGLDrawBuffers(ctx) {\n    _classCallCheck(this, WebGLDrawBuffers);\n\n    this.ctx = ctx;\n    var exts = ctx.getSupportedExtensions();\n\n    if (exts && exts.indexOf('WEBGL_draw_buffers') >= 0) {\n      Object.assign(this, ctx.extWEBGL_draw_buffers());\n      this._buffersState = [ctx.BACK];\n      this._maxDrawBuffers = ctx._getParameterDirect(this.MAX_DRAW_BUFFERS_WEBGL);\n      this._ALL_ATTACHMENTS = [];\n      this._ALL_COLOR_ATTACHMENTS = [];\n      var allColorAttachments = [this.COLOR_ATTACHMENT0_WEBGL, this.COLOR_ATTACHMENT1_WEBGL, this.COLOR_ATTACHMENT2_WEBGL, this.COLOR_ATTACHMENT3_WEBGL, this.COLOR_ATTACHMENT4_WEBGL, this.COLOR_ATTACHMENT5_WEBGL, this.COLOR_ATTACHMENT6_WEBGL, this.COLOR_ATTACHMENT7_WEBGL, this.COLOR_ATTACHMENT8_WEBGL, this.COLOR_ATTACHMENT9_WEBGL, this.COLOR_ATTACHMENT10_WEBGL, this.COLOR_ATTACHMENT11_WEBGL, this.COLOR_ATTACHMENT12_WEBGL, this.COLOR_ATTACHMENT13_WEBGL, this.COLOR_ATTACHMENT14_WEBGL, this.COLOR_ATTACHMENT15_WEBGL];\n\n      while (this._ALL_ATTACHMENTS.length < this._maxDrawBuffers) {\n        var colorAttachment = allColorAttachments.shift();\n\n        this._ALL_ATTACHMENTS.push(colorAttachment);\n\n        this._ALL_COLOR_ATTACHMENTS.push(colorAttachment);\n      }\n\n      this._ALL_ATTACHMENTS.push(gl.DEPTH_ATTACHMENT, gl.STENCIL_ATTACHMENT, gl.DEPTH_STENCIL_ATTACHMENT);\n    }\n  }\n\n  _createClass(WebGLDrawBuffers, [{\n    key: \"drawBuffersWEBGL\",\n    value: function drawBuffersWEBGL(buffers) {\n      var ctx = this.ctx;\n\n      if (buffers.length < 1) {\n        ctx.setError(gl.INVALID_OPERATION);\n        return;\n      }\n\n      if (buffers.length === 1 && buffers[0] === gl.BACK) {\n        this._buffersState = buffers;\n        ctx.drawBuffersWEBGL([this.COLOR_ATTACHMENT0_WEBGL]);\n        return;\n      } else if (!ctx._activeFramebuffer) {\n        if (buffers.length > 1) {\n          ctx.setError(gl.INVALID_OPERATION);\n          return;\n        }\n\n        for (var i = 0; i < buffers.length; i++) {\n          if (buffers[i] > gl.NONE) {\n            ctx.setError(gl.INVALID_OPERATION);\n            return;\n          }\n        }\n      }\n\n      this._buffersState = buffers;\n      ctx.drawBuffersWEBGL(buffers);\n    }\n  }]);\n\n  return WebGLDrawBuffers;\n}();\n\nfunction getWebGLDrawBuffers(ctx) {\n  var exts = ctx.getSupportedExtensions();\n\n  if (exts && exts.indexOf('WEBGL_draw_buffers') >= 0) {\n    return new WebGLDrawBuffers(ctx);\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = {\n  getWebGLDrawBuffers: getWebGLDrawBuffers,\n  WebGLDrawBuffers: WebGLDrawBuffers\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar WebGLActiveInfo = function WebGLActiveInfo(_) {\n  \"use strict\";\n\n  _classCallCheck(this, WebGLActiveInfo);\n\n  this.size = _.size;\n  this.type = _.type;\n  this.name = _.name;\n};\n\nmodule.exports = {\n  WebGLActiveInfo: WebGLActiveInfo\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('./linkable'),\n    Linkable = _require.Linkable;\n\nvar _require2 = require('./native-gl'),\n    gl = _require2.gl;\n\nvar WebGLFramebuffer =\n/*#__PURE__*/\nfunction (_Linkable) {\n  \"use strict\";\n\n  _inherits(WebGLFramebuffer, _Linkable);\n\n  function WebGLFramebuffer(_, ctx) {\n    var _this;\n\n    _classCallCheck(this, WebGLFramebuffer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLFramebuffer).call(this, _));\n    _this._ctx = ctx;\n    _this._binding = 0;\n    _this._width = 0;\n    _this._height = 0;\n    _this._status = null;\n    _this._attachments = {};\n    _this._attachments[gl.COLOR_ATTACHMENT0] = null;\n    _this._attachments[gl.DEPTH_ATTACHMENT] = null;\n    _this._attachments[gl.STENCIL_ATTACHMENT] = null;\n    _this._attachments[gl.DEPTH_STENCIL_ATTACHMENT] = null;\n    _this._attachmentLevel = {};\n    _this._attachmentLevel[gl.COLOR_ATTACHMENT0] = 0;\n    _this._attachmentLevel[gl.DEPTH_ATTACHMENT] = 0;\n    _this._attachmentLevel[gl.STENCIL_ATTACHMENT] = 0;\n    _this._attachmentLevel[gl.DEPTH_STENCIL_ATTACHMENT] = 0;\n    _this._attachmentFace = {};\n    _this._attachmentFace[gl.COLOR_ATTACHMENT0] = 0;\n    _this._attachmentFace[gl.DEPTH_ATTACHMENT] = 0;\n    _this._attachmentFace[gl.STENCIL_ATTACHMENT] = 0;\n    _this._attachmentFace[gl.DEPTH_STENCIL_ATTACHMENT] = 0;\n\n    if (ctx._extensions.webgl_draw_buffers) {\n      var webgl_draw_buffers = ctx._extensions.webgl_draw_buffers; // eslint-disable-line\n\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT1_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT2_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT3_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT4_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT5_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT6_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT7_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT8_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT9_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT10_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT11_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT12_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT13_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT14_WEBGL] = null;\n      _this._attachments[webgl_draw_buffers.COLOR_ATTACHMENT15_WEBGL] = null;\n      _this._attachments[gl.NONE] = null;\n      _this._attachments[gl.BACK] = null;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT1_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT2_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT3_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT4_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT5_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT6_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT7_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT8_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT9_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT10_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT11_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT12_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT13_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT14_WEBGL] = 0;\n      _this._attachmentLevel[webgl_draw_buffers.COLOR_ATTACHMENT15_WEBGL] = 0;\n      _this._attachmentLevel[gl.NONE] = null;\n      _this._attachmentLevel[gl.BACK] = null;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT1_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT2_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT3_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT4_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT5_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT6_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT7_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT8_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT9_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT10_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT11_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT12_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT13_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT14_WEBGL] = 0;\n      _this._attachmentFace[webgl_draw_buffers.COLOR_ATTACHMENT15_WEBGL] = 0;\n      _this._attachmentFace[gl.NONE] = null;\n      _this._attachmentFace[gl.BACK] = null;\n    }\n\n    return _this;\n  }\n\n  _createClass(WebGLFramebuffer, [{\n    key: \"_clearAttachment\",\n    value: function _clearAttachment(attachment) {\n      var object = this._attachments[attachment];\n\n      if (!object) {\n        return;\n      }\n\n      this._attachments[attachment] = null;\n\n      this._unlink(object);\n    }\n  }, {\n    key: \"_setAttachment\",\n    value: function _setAttachment(object, attachment) {\n      var prevObject = this._attachments[attachment];\n\n      if (prevObject === object) {\n        return;\n      }\n\n      this._clearAttachment(attachment);\n\n      if (!object) {\n        return;\n      }\n\n      this._attachments[attachment] = object;\n\n      this._link(object);\n    }\n  }, {\n    key: \"_performDelete\",\n    value: function _performDelete() {\n      var ctx = this._ctx;\n      delete ctx._framebuffers[this._ | 0];\n      gl.deleteFramebuffer.call(ctx, this._ | 0);\n    }\n  }]);\n\n  return WebGLFramebuffer;\n}(Linkable);\n\nmodule.exports = {\n  WebGLFramebuffer: WebGLFramebuffer\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('./linkable'),\n    Linkable = _require.Linkable;\n\nvar _require2 = require('./native-gl'),\n    gl = _require2.gl;\n\nvar WebGLBuffer =\n/*#__PURE__*/\nfunction (_Linkable) {\n  \"use strict\";\n\n  _inherits(WebGLBuffer, _Linkable);\n\n  function WebGLBuffer(_, ctx) {\n    var _this;\n\n    _classCallCheck(this, WebGLBuffer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLBuffer).call(this, _));\n    _this._ctx = ctx;\n    _this._size = 0;\n    _this._elements = new Uint8Array(0);\n    return _this;\n  }\n\n  _createClass(WebGLBuffer, [{\n    key: \"_performDelete\",\n    value: function _performDelete() {\n      var ctx = this._ctx;\n      delete ctx._buffers[this._ | 0];\n      gl.deleteBuffer.call(ctx, this._ | 0);\n    }\n  }]);\n\n  return WebGLBuffer;\n}(Linkable);\n\nmodule.exports = {\n  WebGLBuffer: WebGLBuffer\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar WebGLDrawingBufferWrapper = function WebGLDrawingBufferWrapper(framebuffer, color, depthStencil) {\n  \"use strict\";\n\n  _classCallCheck(this, WebGLDrawingBufferWrapper);\n\n  this._framebuffer = framebuffer;\n  this._color = color;\n  this._depthStencil = depthStencil;\n};\n\nmodule.exports = {\n  WebGLDrawingBufferWrapper: WebGLDrawingBufferWrapper\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('./linkable'),\n    Linkable = _require.Linkable;\n\nvar _require2 = require('./native-gl'),\n    gl = _require2.gl;\n\nvar WebGLProgram =\n/*#__PURE__*/\nfunction (_Linkable) {\n  \"use strict\";\n\n  _inherits(WebGLProgram, _Linkable);\n\n  function WebGLProgram(_, ctx) {\n    var _this;\n\n    _classCallCheck(this, WebGLProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLProgram).call(this, _));\n    _this._ctx = ctx;\n    _this._linkCount = 0;\n    _this._linkStatus = false;\n    _this._linkInfoLog = 'not linked';\n    _this._attributes = [];\n    _this._uniforms = [];\n    return _this;\n  }\n\n  _createClass(WebGLProgram, [{\n    key: \"_performDelete\",\n    value: function _performDelete() {\n      var ctx = this._ctx;\n      delete ctx._programs[this._ | 0];\n      gl.deleteProgram.call(ctx, this._ | 0);\n    }\n  }]);\n\n  return WebGLProgram;\n}(Linkable);\n\nmodule.exports = {\n  WebGLProgram: WebGLProgram\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('./linkable'),\n    Linkable = _require.Linkable;\n\nvar _require2 = require('./native-gl'),\n    gl = _require2.gl;\n\nvar WebGLRenderbuffer =\n/*#__PURE__*/\nfunction (_Linkable) {\n  \"use strict\";\n\n  _inherits(WebGLRenderbuffer, _Linkable);\n\n  function WebGLRenderbuffer(_, ctx) {\n    var _this;\n\n    _classCallCheck(this, WebGLRenderbuffer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLRenderbuffer).call(this, _));\n    _this._ctx = ctx;\n    _this._binding = 0;\n    _this._width = 0;\n    _this._height = 0;\n    _this._format = 0;\n    return _this;\n  }\n\n  _createClass(WebGLRenderbuffer, [{\n    key: \"_performDelete\",\n    value: function _performDelete() {\n      var ctx = this._ctx;\n      delete ctx._renderbuffers[this._ | 0];\n      gl.deleteRenderbuffer.call(ctx, this._ | 0);\n    }\n  }]);\n\n  return WebGLRenderbuffer;\n}(Linkable);\n\nmodule.exports = {\n  WebGLRenderbuffer: WebGLRenderbuffer\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('./native-gl'),\n    gl = _require.gl;\n\nvar _require2 = require('./linkable'),\n    Linkable = _require2.Linkable;\n\nvar WebGLShader =\n/*#__PURE__*/\nfunction (_Linkable) {\n  \"use strict\";\n\n  _inherits(WebGLShader, _Linkable);\n\n  function WebGLShader(_, ctx, type) {\n    var _this;\n\n    _classCallCheck(this, WebGLShader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLShader).call(this, _));\n    _this._type = type;\n    _this._ctx = ctx;\n    _this._source = '';\n    _this._compileStatus = false;\n    _this._compileInfo = '';\n    return _this;\n  }\n\n  _createClass(WebGLShader, [{\n    key: \"_performDelete\",\n    value: function _performDelete() {\n      var ctx = this._ctx;\n      delete ctx._shaders[this._ | 0];\n      gl.deleteShader.call(ctx, this._ | 0);\n    }\n  }]);\n\n  return WebGLShader;\n}(Linkable);\n\nmodule.exports = {\n  WebGLShader: WebGLShader\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar WebGLShaderPrecisionFormat = function WebGLShaderPrecisionFormat(_) {\n  \"use strict\";\n\n  _classCallCheck(this, WebGLShaderPrecisionFormat);\n\n  this.rangeMin = _.rangeMin;\n  this.rangeMax = _.rangeMax;\n  this.precision = _.precision;\n};\n\nmodule.exports = {\n  WebGLShaderPrecisionFormat: WebGLShaderPrecisionFormat\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('./linkable'),\n    Linkable = _require.Linkable;\n\nvar _require2 = require('./native-gl'),\n    gl = _require2.gl;\n\nvar WebGLTexture =\n/*#__PURE__*/\nfunction (_Linkable) {\n  \"use strict\";\n\n  _inherits(WebGLTexture, _Linkable);\n\n  function WebGLTexture(_, ctx) {\n    var _this;\n\n    _classCallCheck(this, WebGLTexture);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebGLTexture).call(this, _));\n    _this._ctx = ctx;\n    _this._binding = 0;\n    _this._levelWidth = new Int32Array(32);\n    _this._levelHeight = new Int32Array(32);\n    _this._format = 0;\n    _this._type = 0;\n    _this._complete = true;\n    return _this;\n  }\n\n  _createClass(WebGLTexture, [{\n    key: \"_performDelete\",\n    value: function _performDelete() {\n      var ctx = this._ctx;\n      delete ctx._textures[this._ | 0];\n      gl.deleteTexture.call(ctx, this._ | 0);\n    }\n  }]);\n\n  return WebGLTexture;\n}(Linkable);\n\nmodule.exports = {\n  WebGLTexture: WebGLTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar WebGLTextureUnit = function WebGLTextureUnit(ctx, idx) {\n  \"use strict\";\n\n  _classCallCheck(this, WebGLTextureUnit);\n\n  this._ctx = ctx;\n  this._idx = idx;\n  this._mode = 0;\n  this._bind2D = null;\n  this._bindCube = null;\n};\n\nmodule.exports = {\n  WebGLTextureUnit: WebGLTextureUnit\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _require = require('./native-gl'),\n    gl = _require.gl;\n\nvar WebGLVertexAttribute = function WebGLVertexAttribute(ctx, idx) {\n  \"use strict\";\n\n  _classCallCheck(this, WebGLVertexAttribute);\n\n  this._ctx = ctx;\n  this._idx = idx;\n  this._isPointer = false;\n  this._pointerBuffer = null;\n  this._pointerOffset = 0;\n  this._pointerSize = 0;\n  this._pointerStride = 0;\n  this._pointerType = gl.FLOAT;\n  this._pointerNormal = false;\n  this._divisor = 0;\n  this._inputSize = 4;\n  this._inputStride = 0;\n  this._data = new Float32Array([0, 0, 0, 1]);\n};\n\nmodule.exports = {\n  WebGLVertexAttribute: WebGLVertexAttribute\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray2Float =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray2Float, _GLTextureFloat);\n\n  function GLTextureArray2Float(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray2Float);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray2Float).call(this, settings));\n    _this.type = 'ArrayTexture(2)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray2Float, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n    }\n  }]);\n\n  return GLTextureArray2Float;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray2Float: GLTextureArray2Float\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray2Float2D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray2Float2D, _GLTextureFloat);\n\n  function GLTextureArray2Float2D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray2Float2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray2Float2D).call(this, settings));\n    _this.type = 'ArrayTexture(2)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray2Float2D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n    }\n  }]);\n\n  return GLTextureArray2Float2D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray2Float2D: GLTextureArray2Float2D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray2Float3D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray2Float3D, _GLTextureFloat);\n\n  function GLTextureArray2Float3D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray2Float3D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray2Float3D).call(this, settings));\n    _this.type = 'ArrayTexture(2)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray2Float3D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n    }\n  }]);\n\n  return GLTextureArray2Float3D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray2Float3D: GLTextureArray2Float3D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray3Float =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray3Float, _GLTextureFloat);\n\n  function GLTextureArray3Float(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray3Float);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray3Float).call(this, settings));\n    _this.type = 'ArrayTexture(3)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray3Float, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erectArray3(this.renderValues(), this.output[0]);\n    }\n  }]);\n\n  return GLTextureArray3Float;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray3Float: GLTextureArray3Float\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray3Float2D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray3Float2D, _GLTextureFloat);\n\n  function GLTextureArray3Float2D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray3Float2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray3Float2D).call(this, settings));\n    _this.type = 'ArrayTexture(3)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray3Float2D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n    }\n  }]);\n\n  return GLTextureArray3Float2D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray3Float2D: GLTextureArray3Float2D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray3Float3D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray3Float3D, _GLTextureFloat);\n\n  function GLTextureArray3Float3D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray3Float3D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray3Float3D).call(this, settings));\n    _this.type = 'ArrayTexture(3)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray3Float3D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n    }\n  }]);\n\n  return GLTextureArray3Float3D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray3Float3D: GLTextureArray3Float3D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray4Float =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray4Float, _GLTextureFloat);\n\n  function GLTextureArray4Float(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray4Float);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray4Float).call(this, settings));\n    _this.type = 'ArrayTexture(4)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray4Float, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erectArray4(this.renderValues(), this.output[0]);\n    }\n  }]);\n\n  return GLTextureArray4Float;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray4Float: GLTextureArray4Float\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray4Float2D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray4Float2D, _GLTextureFloat);\n\n  function GLTextureArray4Float2D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray4Float2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray4Float2D).call(this, settings));\n    _this.type = 'ArrayTexture(4)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray4Float2D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n    }\n  }]);\n\n  return GLTextureArray4Float2D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray4Float2D: GLTextureArray4Float2D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureArray4Float3D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureArray4Float3D, _GLTextureFloat);\n\n  function GLTextureArray4Float3D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureArray4Float3D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureArray4Float3D).call(this, settings));\n    _this.type = 'ArrayTexture(4)';\n    return _this;\n  }\n\n  _createClass(GLTextureArray4Float3D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n    }\n  }]);\n\n  return GLTextureArray4Float3D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureArray4Float3D: GLTextureArray4Float3D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureFloat2D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureFloat2D, _GLTextureFloat);\n\n  function GLTextureFloat2D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureFloat2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureFloat2D).call(this, settings));\n    _this.type = 'ArrayTexture(1)';\n    return _this;\n  }\n\n  _createClass(GLTextureFloat2D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n    }\n  }]);\n\n  return GLTextureFloat2D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureFloat2D: GLTextureFloat2D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureFloat3D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureFloat3D, _GLTextureFloat);\n\n  function GLTextureFloat3D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureFloat3D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureFloat3D).call(this, settings));\n    _this.type = 'ArrayTexture(1)';\n    return _this;\n  }\n\n  _createClass(GLTextureFloat3D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n    }\n  }]);\n\n  return GLTextureFloat3D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureFloat3D: GLTextureFloat3D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureMemoryOptimized =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureMemoryOptimized, _GLTextureFloat);\n\n  function GLTextureMemoryOptimized(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureMemoryOptimized);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureMemoryOptimized).call(this, settings));\n    _this.type = 'MemoryOptimizedNumberTexture';\n    return _this;\n  }\n\n  _createClass(GLTextureMemoryOptimized, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n    }\n  }]);\n\n  return GLTextureMemoryOptimized;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureMemoryOptimized: GLTextureMemoryOptimized\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureMemoryOptimized2D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureMemoryOptimized2D, _GLTextureFloat);\n\n  function GLTextureMemoryOptimized2D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureMemoryOptimized2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureMemoryOptimized2D).call(this, settings));\n    _this.type = 'MemoryOptimizedNumberTexture';\n    return _this;\n  }\n\n  _createClass(GLTextureMemoryOptimized2D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n    }\n  }]);\n\n  return GLTextureMemoryOptimized2D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D: GLTextureMemoryOptimized2D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./float'),\n    GLTextureFloat = _require2.GLTextureFloat;\n\nvar GLTextureMemoryOptimized3D =\n/*#__PURE__*/\nfunction (_GLTextureFloat) {\n  \"use strict\";\n\n  _inherits(GLTextureMemoryOptimized3D, _GLTextureFloat);\n\n  function GLTextureMemoryOptimized3D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureMemoryOptimized3D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureMemoryOptimized3D).call(this, settings));\n    _this.type = 'MemoryOptimizedNumberTexture';\n    return _this;\n  }\n\n  _createClass(GLTextureMemoryOptimized3D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n    }\n  }]);\n\n  return GLTextureMemoryOptimized3D;\n}(GLTextureFloat);\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D: GLTextureMemoryOptimized3D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./unsigned'),\n    GLTextureUnsigned = _require2.GLTextureUnsigned;\n\nvar GLTextureUnsigned2D =\n/*#__PURE__*/\nfunction (_GLTextureUnsigned) {\n  \"use strict\";\n\n  _inherits(GLTextureUnsigned2D, _GLTextureUnsigned);\n\n  function GLTextureUnsigned2D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureUnsigned2D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureUnsigned2D).call(this, settings));\n    _this.type = 'NumberTexture';\n    return _this;\n  }\n\n  _createClass(GLTextureUnsigned2D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n    }\n  }]);\n\n  return GLTextureUnsigned2D;\n}(GLTextureUnsigned);\n\nmodule.exports = {\n  GLTextureUnsigned2D: GLTextureUnsigned2D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./unsigned'),\n    GLTextureUnsigned = _require2.GLTextureUnsigned;\n\nvar GLTextureUnsigned3D =\n/*#__PURE__*/\nfunction (_GLTextureUnsigned) {\n  \"use strict\";\n\n  _inherits(GLTextureUnsigned3D, _GLTextureUnsigned);\n\n  function GLTextureUnsigned3D(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureUnsigned3D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureUnsigned3D).call(this, settings));\n    _this.type = 'NumberTexture';\n    return _this;\n  }\n\n  _createClass(GLTextureUnsigned3D, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n    }\n  }]);\n\n  return GLTextureUnsigned3D;\n}(GLTextureUnsigned);\n\nmodule.exports = {\n  GLTextureUnsigned3D: GLTextureUnsigned3D\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('./unsigned'),\n    GLTextureUnsigned = _require.GLTextureUnsigned;\n\nvar GLTextureGraphical =\n/*#__PURE__*/\nfunction (_GLTextureUnsigned) {\n  \"use strict\";\n\n  _inherits(GLTextureGraphical, _GLTextureUnsigned);\n\n  function GLTextureGraphical(settings) {\n    var _this;\n\n    _classCallCheck(this, GLTextureGraphical);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GLTextureGraphical).call(this, settings));\n    _this.type = 'ArrayTexture(4)';\n    return _this;\n  }\n\n  _createClass(GLTextureGraphical, [{\n    key: \"toArray\",\n    value: function toArray() {\n      return this.renderValues();\n    }\n  }]);\n\n  return GLTextureGraphical;\n}(GLTextureUnsigned);\n\nmodule.exports = {\n  GLTextureGraphical: GLTextureGraphical\n};","var source = \"\\n\\nuniform highp float triangle_noise_seed;\\nhighp float triangle_noise_shift = 0.000001;\\n\\n//https://www.shadertoy.com/view/4t2SDh\\n//note: uniformly distributed, normalized rand, [0;1[\\nfloat nrand( vec2 n )\\n{\\n  return fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\\n}\\n//note: remaps v to [0;1] in interval [a;b]\\nfloat remap( float a, float b, float v )\\n{\\n  return clamp( (v-a) / (b-a), 0.0, 1.0 );\\n}\\n\\nfloat n4rand( vec2 n )\\n{\\n  float t = fract( triangle_noise_seed + triangle_noise_shift );\\n  float nrnd0 = nrand( n + 0.07*t );\\n  float nrnd1 = nrand( n + 0.11*t );  \\n  float nrnd2 = nrand( n + 0.13*t );\\n  float nrnd3 = nrand( n + 0.17*t );\\n  float result = (nrnd0+nrnd1+nrnd2+nrnd3) / 4.0;\\n  triangle_noise_shift = result + 0.000001;\\n  return result;\\n}\";\nvar name = 'triangle-noise-noise';\nvar functionMatch = 'Math.random()';\nvar functionReplace = 'n4rand(vTexCoord)';\nvar functionReturnType = 'Number';\n\nvar onBeforeRun = function onBeforeRun(kernel) {\n  kernel.setUniform1f('triangle_noise_seed', Math.random());\n};\n/**\n *\n * @type IPlugin\n */\n\n\nmodule.exports = {\n  name: name,\n  onBeforeRun: onBeforeRun,\n  functionMatch: functionMatch,\n  functionReplace: functionReplace,\n  functionReturnType: functionReturnType,\n  source: source\n};","// language=GLSL\nvar fragmentShader = \"__HEADER__;\\n__FLOAT_TACTIC_DECLARATION__;\\n__INT_TACTIC_DECLARATION__;\\n__SAMPLER_2D_TACTIC_DECLARATION__;\\n\\nconst int LOOP_MAX = __LOOP_MAX__;\\n\\n__PLUGINS__;\\n__CONSTANTS__;\\n\\nvarying vec2 vTexCoord;\\n\\nvec4 round(vec4 x) {\\n  return floor(x + 0.5);\\n}\\n\\nfloat round(float x) {\\n  return floor(x + 0.5);\\n}\\n\\nconst int BIT_COUNT = 32;\\nint modi(int x, int y) {\\n  return x - y * (x / y);\\n}\\n\\nint bitwiseOr(int a, int b) {\\n  int result = 0;\\n  int n = 1;\\n  \\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\\n      result += n;\\n    }\\n    a = a / 2;\\n    b = b / 2;\\n    n = n * 2;\\n    if(!(a > 0 || b > 0)) {\\n      break;\\n    }\\n  }\\n  return result;\\n}\\nint bitwiseXOR(int a, int b) {\\n  int result = 0;\\n  int n = 1;\\n  \\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\\n      result += n;\\n    }\\n    a = a / 2;\\n    b = b / 2;\\n    n = n * 2;\\n    if(!(a > 0 || b > 0)) {\\n      break;\\n    }\\n  }\\n  return result;\\n}\\nint bitwiseAnd(int a, int b) {\\n  int result = 0;\\n  int n = 1;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\\n      result += n;\\n    }\\n    a = a / 2;\\n    b = b / 2;\\n    n = n * 2;\\n    if(!(a > 0 && b > 0)) {\\n      break;\\n    }\\n  }\\n  return result;\\n}\\nint bitwiseNot(int a) {\\n  int result = 0;\\n  int n = 1;\\n  \\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (modi(a, 2) == 0) {\\n      result += n;    \\n    }\\n    a = a / 2;\\n    n = n * 2;\\n  }\\n  return result;\\n}\\nint bitwiseZeroFillLeftShift(int n, int shift) {\\n  int maxBytes = BIT_COUNT;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (maxBytes >= n) {\\n      break;\\n    }\\n    maxBytes *= 2;\\n  }\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (i >= shift) {\\n      break;\\n    }\\n    n *= 2;\\n  }\\n\\n  int result = 0;\\n  int byteVal = 1;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (i >= maxBytes) break;\\n    if (modi(n, 2) > 0) { result += byteVal; }\\n    n = int(n / 2);\\n    byteVal *= 2;\\n  }\\n  return result;\\n}\\n\\nint bitwiseSignedRightShift(int num, int shifts) {\\n  return int(floor(float(num) / pow(2.0, float(shifts))));\\n}\\n\\nint bitwiseZeroFillRightShift(int n, int shift) {\\n  int maxBytes = BIT_COUNT;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (maxBytes >= n) {\\n      break;\\n    }\\n    maxBytes *= 2;\\n  }\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (i >= shift) {\\n      break;\\n    }\\n    n /= 2;\\n  }\\n  int result = 0;\\n  int byteVal = 1;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (i >= maxBytes) break;\\n    if (modi(n, 2) > 0) { result += byteVal; }\\n    n = int(n / 2);\\n    byteVal *= 2;\\n  }\\n  return result;\\n}\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nfloat integerMod(float x, float y) {\\n  float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nint integerMod(int x, int y) {\\n  return x - (y * int(x / y));\\n}\\n\\n__DIVIDE_WITH_INTEGER_CHECK__;\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nfloat decode32(vec4 texel) {\\n  __DECODE32_ENDIANNESS__;\\n  texel *= 255.0;\\n  vec2 gte128;\\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  texel.b = texel.b - 128.0 * gte128.x;\\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nfloat decode16(vec4 texel, int index) {\\n  int channel = integerMod(index, 2);\\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\\n  return 0.0;\\n}\\n\\nfloat decode8(vec4 texel, int index) {\\n  int channel = integerMod(index, 4);\\n  if (channel == 0) return texel.r * 255.0;\\n  if (channel == 1) return texel.g * 255.0;\\n  if (channel == 2) return texel.b * 255.0;\\n  if (channel == 3) return texel.a * 255.0;\\n  return 0.0;\\n}\\n\\nvec4 legacyEncode32(float f) {\\n  float F = abs(f);\\n  float sign = f < 0.0 ? 1.0 : 0.0;\\n  float exponent = floor(log2(F));\\n  float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  texel.rg = integerMod(texel.rg, 256.0);\\n  texel.b = integerMod(texel.b, 128.0);\\n  texel.a = exponent*0.5 + 63.5;\\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  texel = floor(texel);\\n  texel *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return texel;\\n}\\n\\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\\nvec4 encode32(float value) {\\n  if (value == 0.0) return vec4(0, 0, 0, 0);\\n\\n  float exponent;\\n  float mantissa;\\n  vec4  result;\\n  float sgn;\\n\\n  sgn = step(0.0, -value);\\n  value = abs(value);\\n\\n  exponent = floor(log2(value));\\n\\n  mantissa = value*pow(2.0, -exponent)-1.0;\\n  exponent = exponent+127.0;\\n  result   = vec4(0,0,0,0);\\n\\n  result.a = floor(exponent/2.0);\\n  exponent = exponent - result.a*2.0;\\n  result.a = result.a + 128.0*sgn;\\n\\n  result.b = floor(mantissa * 128.0);\\n  mantissa = mantissa - result.b / 128.0;\\n  result.b = result.b + exponent*128.0;\\n\\n  result.g = floor(mantissa*32768.0);\\n  mantissa = mantissa - result.g/32768.0;\\n\\n  result.r = floor(mantissa*8388608.0);\\n  return result/255.0;\\n}\\n// Dragons end here\\n\\nint index;\\nivec3 threadId;\\n\\nivec3 indexTo3D(int idx, ivec3 texDim) {\\n  int z = int(idx / (texDim.x * texDim.y));\\n  idx -= z * int(texDim.x * texDim.y);\\n  int y = int(idx / texDim.x);\\n  int x = int(integerMod(idx, texDim.x));\\n  return ivec3(x, y, z);\\n}\\n\\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture2D(tex, st / vec2(texSize));\\n  return decode32(texel);\\n}\\n\\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int w = texSize.x * 2;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\\n  return decode16(texel, index);\\n}\\n\\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int w = texSize.x * 4;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\\n  return decode8(texel, index);\\n}\\n\\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int channel = integerMod(index, 4);\\n  index = index / 4;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture2D(tex, st / vec2(texSize));\\n  if (channel == 0) return texel.r;\\n  if (channel == 1) return texel.g;\\n  if (channel == 2) return texel.b;\\n  if (channel == 3) return texel.a;\\n  return 0.0;\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  return texture2D(tex, st / vec2(texSize));\\n}\\n\\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\\n  return result[0];\\n}\\n\\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\\n  return vec2(result[0], result[1]);\\n}\\n\\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + (texDim.x * (y + (texDim.y * z)));\\n  int channel = integerMod(index, 2);\\n  index = index / 2;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture2D(tex, st / vec2(texSize));\\n  if (channel == 0) return vec2(texel.r, texel.g);\\n  if (channel == 1) return vec2(texel.b, texel.a);\\n  return vec2(0.0, 0.0);\\n}\\n\\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\\n  return vec3(result[0], result[1], result[2]);\\n}\\n\\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\\n  int vectorIndex = fieldIndex / 4;\\n  int vectorOffset = fieldIndex - vectorIndex * 4;\\n  int readY = vectorIndex / texSize.x;\\n  int readX = vectorIndex - readY * texSize.x;\\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\\n  \\n  if (vectorOffset == 0) {\\n    return tex1.xyz;\\n  } else if (vectorOffset == 1) {\\n    return tex1.yzw;\\n  } else {\\n    readX++;\\n    if (readX >= texSize.x) {\\n      readX = 0;\\n      readY++;\\n    }\\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\\n    if (vectorOffset == 2) {\\n      return vec3(tex1.z, tex1.w, tex2.x);\\n    } else {\\n      return vec3(tex1.w, tex2.x, tex2.y);\\n    }\\n  }\\n}\\n\\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  return getImage2D(tex, texSize, texDim, z, y, x);\\n}\\n\\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int channel = integerMod(index, 2);\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture2D(tex, st / vec2(texSize));\\n  return vec4(texel.r, texel.g, texel.b, texel.a);\\n}\\n\\nvec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\nvoid color(sampler2D image) {\\n  actualColor = texture2D(image, vTexCoord);\\n}\\n\\n__MAIN_CONSTANTS__;\\n__MAIN_ARGUMENTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";\nmodule.exports = {\n  fragmentShader: fragmentShader\n};","// language=GLSL\nvar vertexShader = \"__FLOAT_TACTIC_DECLARATION__;\\n__INT_TACTIC_DECLARATION__;\\n__SAMPLER_2D_TACTIC_DECLARATION__;\\n\\nattribute vec2 aPos;\\nattribute vec2 aTexCoord;\\n\\nvarying vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";\nmodule.exports = {\n  vertexShader: vertexShader\n};","/**\n *\n * @param {WebGLRenderingContext} gl\n * @param {IGLWiretapOptions} [options]\n * @returns {GLWiretapProxy}\n */\nfunction glWiretap(gl) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$contextName = options.contextName,\n      contextName = _options$contextName === void 0 ? 'gl' : _options$contextName,\n      throwGetError = options.throwGetError,\n      useTrackablePrimitives = options.useTrackablePrimitives,\n      readPixelsFile = options.readPixelsFile,\n      _options$recording = options.recording,\n      recording = _options$recording === void 0 ? [] : _options$recording,\n      _options$variables = options.variables,\n      variables = _options$variables === void 0 ? {} : _options$variables,\n      onReadPixels = options.onReadPixels,\n      onUnrecognizedArgumentLookup = options.onUnrecognizedArgumentLookup;\n  var proxy = new Proxy(gl, {\n    get: listen\n  });\n  var contextVariables = [];\n  var entityNames = {};\n  var imageCount = 0;\n  var indent = '';\n  var readPixelsVariableName;\n  return proxy;\n\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment':\n        return addComment;\n\n      case 'checkThrowError':\n        return checkThrowError;\n\n      case 'getReadPixelsVariableName':\n        return readPixelsVariableName;\n\n      case 'insertVariable':\n        return insertVariable;\n\n      case 'reset':\n        return reset;\n\n      case 'setIndent':\n        return setIndent;\n\n      case 'toString':\n        return toString;\n\n      case 'getContextVariableName':\n        return getContextVariableName;\n    }\n\n    if (typeof gl[property] === 'function') {\n      return function () {\n        // need arguments from this, fyi\n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(\"\".concat(indent, \"if (\").concat(contextName, \".getError() !== \").concat(contextName, \".NONE) throw new Error('error');\"));\n            } else {\n              recording.push(\"\".concat(indent).concat(contextName, \".getError();\")); // flush out errors\n            }\n\n            return gl.getError();\n\n          case 'getExtension':\n            {\n              var variableName = \"\".concat(contextName, \"Variables\").concat(contextVariables.length);\n              recording.push(\"\".concat(indent, \"const \").concat(variableName, \" = \").concat(contextName, \".getExtension('\").concat(arguments[0], \"');\"));\n              var extension = gl.getExtension(arguments[0]);\n\n              if (extension && typeof extension === 'object') {\n                var tappedExtension = glExtensionWiretap(extension, {\n                  getEntity: getEntity,\n                  useTrackablePrimitives: useTrackablePrimitives,\n                  recording: recording,\n                  contextName: variableName,\n                  contextVariables: contextVariables,\n                  variables: variables,\n                  indent: indent,\n                  onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup\n                });\n                contextVariables.push(tappedExtension);\n                return tappedExtension;\n              } else {\n                contextVariables.push(null);\n              }\n\n              return extension;\n            }\n\n          case 'readPixels':\n            var i = contextVariables.indexOf(arguments[6]);\n            var targetVariableName;\n\n            if (i === -1) {\n              var _variableName = getVariableName(arguments[6]);\n\n              if (_variableName) {\n                targetVariableName = _variableName;\n                recording.push(\"\".concat(indent).concat(_variableName));\n              } else {\n                targetVariableName = \"\".concat(contextName, \"Variable\").concat(contextVariables.length);\n                contextVariables.push(arguments[6]);\n                recording.push(\"\".concat(indent, \"const \").concat(targetVariableName, \" = new \").concat(arguments[6].constructor.name, \"(\").concat(arguments[6].length, \");\"));\n              }\n            } else {\n              targetVariableName = \"\".concat(contextName, \"Variable\").concat(i);\n            }\n\n            readPixelsVariableName = targetVariableName;\n            var argumentAsStrings = [arguments[0], arguments[1], arguments[2], arguments[3], getEntity(arguments[4]), getEntity(arguments[5]), targetVariableName];\n            recording.push(\"\".concat(indent).concat(contextName, \".readPixels(\").concat(argumentAsStrings.join(', '), \");\"));\n\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n\n            return gl.readPixels.apply(gl, arguments);\n\n          case 'drawBuffers':\n            recording.push(\"\".concat(indent).concat(contextName, \".drawBuffers([\").concat(argumentsToString(arguments[0], {\n              contextName: contextName,\n              contextVariables: contextVariables,\n              getEntity: getEntity,\n              addVariable: addVariable,\n              variables: variables,\n              onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup\n            }), \"]);\"));\n            return gl.drawBuffers(arguments[0]);\n        }\n\n        var result = gl[property].apply(gl, arguments);\n\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(\"\".concat(indent).concat(methodCallToString(property, arguments), \";\"));\n            return;\n\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(\"\".concat(indent, \"const \").concat(contextName, \"Variable\").concat(contextVariables.length, \" = \").concat(methodCallToString(property, arguments), \";\"));\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n\n          default:\n            if (result === null) {\n              recording.push(\"\".concat(methodCallToString(property, arguments), \";\"));\n            } else {\n              recording.push(\"\".concat(indent, \"const \").concat(contextName, \"Variable\").concat(contextVariables.length, \" = \").concat(methodCallToString(property, arguments), \";\"));\n            }\n\n            contextVariables.push(result);\n        }\n\n        return result;\n      };\n    }\n\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n\n  function toString() {\n    return recording.join('\\n');\n  }\n\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n\n  function getEntity(value) {\n    var name = entityNames[value];\n\n    if (name) {\n      return contextName + '.' + name;\n    }\n\n    return value;\n  }\n\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n\n  function addVariable(value, source) {\n    var variableName = \"\".concat(contextName, \"Variable\").concat(contextVariables.length);\n    recording.push(\"\".concat(indent, \"const \").concat(variableName, \" = \").concat(source, \";\"));\n    contextVariables.push(value);\n    return variableName;\n  }\n\n  function writePPM(width, height) {\n    var sourceVariable = \"\".concat(contextName, \"Variable\").concat(contextVariables.length);\n    var imageVariable = \"imageDatum\".concat(imageCount);\n    recording.push(\"\".concat(indent, \"let \").concat(imageVariable, \" = [\\\"P3\\\\n# \").concat(readPixelsFile, \".ppm\\\\n\\\", \").concat(width, \", ' ', \").concat(height, \", \\\"\\\\n255\\\\n\\\"].join(\\\"\\\");\"));\n    recording.push(\"\".concat(indent, \"for (let i = 0; i < \").concat(imageVariable, \".length; i += 4) {\"));\n    recording.push(\"\".concat(indent, \"  \").concat(imageVariable, \" += \").concat(sourceVariable, \"[i] + ' ' + \").concat(sourceVariable, \"[i + 1] + ' ' + \").concat(sourceVariable, \"[i + 2] + ' ';\"));\n    recording.push(\"\".concat(indent, \"}\"));\n    recording.push(\"\".concat(indent, \"if (typeof require !== \\\"undefined\\\") {\"));\n    recording.push(\"\".concat(indent, \"  require('fs').writeFileSync('./\").concat(readPixelsFile, \".ppm', \").concat(imageVariable, \");\"));\n    recording.push(\"\".concat(indent, \"}\"));\n    imageCount++;\n  }\n\n  function addComment(value) {\n    recording.push(\"\".concat(indent, \"// \").concat(value));\n  }\n\n  function checkThrowError() {\n    recording.push(\"\".concat(indent, \"(() => {\\n\").concat(indent, \"const error = \").concat(contextName, \".getError();\\n\").concat(indent, \"if (error !== \").concat(contextName, \".NONE) {\\n\").concat(indent, \"  const names = Object.getOwnPropertyNames(gl);\\n\").concat(indent, \"  for (let i = 0; i < names.length; i++) {\\n\").concat(indent, \"    const name = names[i];\\n\").concat(indent, \"    if (\").concat(contextName, \"[name] === error) {\\n\").concat(indent, \"      throw new Error('\").concat(contextName, \" threw ' + name);\\n\").concat(indent, \"    }\\n\").concat(indent, \"  }\\n\").concat(indent, \"}\\n\").concat(indent, \"})();\"));\n  }\n\n  function methodCallToString(method, args) {\n    return \"\".concat(contextName, \".\").concat(method, \"(\").concat(argumentsToString(args, {\n      contextName: contextName,\n      contextVariables: contextVariables,\n      getEntity: getEntity,\n      addVariable: addVariable,\n      variables: variables,\n      onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup\n    }), \")\");\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (var name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    var i = contextVariables.indexOf(value);\n\n    if (i !== -1) {\n      return \"\".concat(contextName, \"Variable\").concat(i);\n    }\n\n    return null;\n  }\n}\n/**\n *\n * @param extension\n * @param {IGLExtensionWiretapOptions} options\n * @returns {*}\n */\n\n\nfunction glExtensionWiretap(extension, options) {\n  var proxy = new Proxy(extension, {\n    get: listen\n  });\n  var extensionEntityNames = {};\n  var contextName = options.contextName,\n      contextVariables = options.contextVariables,\n      getEntity = options.getEntity,\n      useTrackablePrimitives = options.useTrackablePrimitives,\n      recording = options.recording,\n      variables = options.variables,\n      indent = options.indent,\n      onUnrecognizedArgumentLookup = options.onUnrecognizedArgumentLookup;\n  return proxy;\n\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function () {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(\"\".concat(indent).concat(contextName, \".drawBuffersWEBGL([\").concat(argumentsToString(arguments[0], {\n              contextName: contextName,\n              contextVariables: contextVariables,\n              getEntity: getExtensionEntity,\n              addVariable: addVariable,\n              variables: variables,\n              onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup\n            }), \"]);\"));\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n\n        var result = extension[property].apply(extension, arguments);\n\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(\"\".concat(indent).concat(methodCallToString(property, arguments), \";\"));\n            return;\n\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(\"\".concat(indent, \"const \").concat(contextName, \"Variable\").concat(contextVariables.length, \" = \").concat(methodCallToString(property, arguments), \";\"));\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(\"\".concat(indent, \"const \").concat(contextName, \"Variable\").concat(contextVariables.length, \" = \").concat(methodCallToString(property, arguments), \";\"));\n              contextVariables.push(result);\n            }\n\n            break;\n\n          default:\n            if (result === null) {\n              recording.push(\"\".concat(methodCallToString(property, arguments), \";\"));\n            } else {\n              recording.push(\"\".concat(indent, \"const \").concat(contextName, \"Variable\").concat(contextVariables.length, \" = \").concat(methodCallToString(property, arguments), \";\"));\n            }\n\n            contextVariables.push(result);\n        }\n\n        return result;\n      };\n    }\n\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return \"\".concat(contextName, \".\").concat(extensionEntityNames[value]);\n    }\n\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return \"\".concat(contextName, \".\").concat(method, \"(\").concat(argumentsToString(args, {\n      contextName: contextName,\n      contextVariables: contextVariables,\n      getEntity: getExtensionEntity,\n      addVariable: addVariable,\n      variables: variables,\n      onUnrecognizedArgumentLookup: onUnrecognizedArgumentLookup\n    }), \")\");\n  }\n\n  function addVariable(value, source) {\n    var variableName = \"\".concat(contextName, \"Variable\").concat(contextVariables.length);\n    contextVariables.push(value);\n    recording.push(\"\".concat(indent, \"const \").concat(variableName, \" = \").concat(source, \";\"));\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  var variables = options.variables;\n  return Array.from(args).map(function (arg) {\n    var variableName = getVariableName(arg);\n\n    if (variableName) {\n      return variableName;\n    }\n\n    return argumentToString(arg, options);\n  }).join(', ');\n\n  function getVariableName(value) {\n    if (variables) {\n      for (var name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  var contextName = options.contextName,\n      contextVariables = options.contextVariables,\n      getEntity = options.getEntity,\n      addVariable = options.addVariable,\n      onUnrecognizedArgumentLookup = options.onUnrecognizedArgumentLookup;\n\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n\n  if (arg === null) {\n    return 'null';\n  }\n\n  var i = contextVariables.indexOf(arg);\n\n  if (i > -1) {\n    return \"\".concat(contextName, \"Variable\").concat(i);\n  }\n\n  switch (arg.constructor.name) {\n    case 'String':\n      var hasLines = /\\n/.test(arg);\n      var hasSingleQuotes = /'/.test(arg);\n      var hasDoubleQuotes = /\"/.test(arg);\n\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n\n    case 'Number':\n      return getEntity(arg);\n\n    case 'Boolean':\n      return getEntity(arg);\n\n    case 'Array':\n      return addVariable(arg, \"new \".concat(arg.constructor.name, \"(\").concat(Array.from(arg).join(','), \")\"));\n\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, \"new \".concat(arg.constructor.name, \"(\").concat(JSON.stringify(Array.from(arg)), \")\"));\n\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        var instantiationString = onUnrecognizedArgumentLookup(arg);\n\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n\n      throw new Error(\"unrecognized argument type \".concat(arg.constructor.name));\n  }\n}\n\nfunction trackablePrimitive(value) {\n  // wrapped in object, so track-able\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = {\n    glWiretap: glWiretap,\n    glExtensionWiretap: glExtensionWiretap\n  };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}","var _defineProperty = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _dynamic;\n\nvar _require = require('./kernel-value/boolean'),\n    WebGLKernelValueBoolean = _require.WebGLKernelValueBoolean;\n\nvar _require2 = require('./kernel-value/float'),\n    WebGLKernelValueFloat = _require2.WebGLKernelValueFloat;\n\nvar _require3 = require('./kernel-value/integer'),\n    WebGLKernelValueInteger = _require3.WebGLKernelValueInteger;\n\nvar _require4 = require('./kernel-value/html-image'),\n    WebGLKernelValueHTMLImage = _require4.WebGLKernelValueHTMLImage;\n\nvar _require5 = require('./kernel-value/dynamic-html-image'),\n    WebGLKernelValueDynamicHTMLImage = _require5.WebGLKernelValueDynamicHTMLImage;\n\nvar _require6 = require('./kernel-value/single-input'),\n    WebGLKernelValueSingleInput = _require6.WebGLKernelValueSingleInput;\n\nvar _require7 = require('./kernel-value/dynamic-single-input'),\n    WebGLKernelValueDynamicSingleInput = _require7.WebGLKernelValueDynamicSingleInput;\n\nvar _require8 = require('./kernel-value/unsigned-input'),\n    WebGLKernelValueUnsignedInput = _require8.WebGLKernelValueUnsignedInput;\n\nvar _require9 = require('./kernel-value/dynamic-unsigned-input'),\n    WebGLKernelValueDynamicUnsignedInput = _require9.WebGLKernelValueDynamicUnsignedInput;\n\nvar _require10 = require('./kernel-value/memory-optimized-number-texture'),\n    WebGLKernelValueMemoryOptimizedNumberTexture = _require10.WebGLKernelValueMemoryOptimizedNumberTexture;\n\nvar _require11 = require('./kernel-value/dynamic-memory-optimized-number-texture'),\n    WebGLKernelValueDynamicMemoryOptimizedNumberTexture = _require11.WebGLKernelValueDynamicMemoryOptimizedNumberTexture;\n\nvar _require12 = require('./kernel-value/number-texture'),\n    WebGLKernelValueNumberTexture = _require12.WebGLKernelValueNumberTexture;\n\nvar _require13 = require('./kernel-value/dynamic-number-texture'),\n    WebGLKernelValueDynamicNumberTexture = _require13.WebGLKernelValueDynamicNumberTexture;\n\nvar _require14 = require('./kernel-value/single-array'),\n    WebGLKernelValueSingleArray = _require14.WebGLKernelValueSingleArray;\n\nvar _require15 = require('./kernel-value/dynamic-single-array'),\n    WebGLKernelValueDynamicSingleArray = _require15.WebGLKernelValueDynamicSingleArray;\n\nvar _require16 = require('./kernel-value/single-array1d-i'),\n    WebGLKernelValueSingleArray1DI = _require16.WebGLKernelValueSingleArray1DI;\n\nvar _require17 = require('./kernel-value/dynamic-single-array1d-i'),\n    WebGLKernelValueDynamicSingleArray1DI = _require17.WebGLKernelValueDynamicSingleArray1DI;\n\nvar _require18 = require('./kernel-value/single-array2d-i'),\n    WebGLKernelValueSingleArray2DI = _require18.WebGLKernelValueSingleArray2DI;\n\nvar _require19 = require('./kernel-value/dynamic-single-array2d-i'),\n    WebGLKernelValueDynamicSingleArray2DI = _require19.WebGLKernelValueDynamicSingleArray2DI;\n\nvar _require20 = require('./kernel-value/single-array3d-i'),\n    WebGLKernelValueSingleArray3DI = _require20.WebGLKernelValueSingleArray3DI;\n\nvar _require21 = require('./kernel-value/dynamic-single-array3d-i'),\n    WebGLKernelValueDynamicSingleArray3DI = _require21.WebGLKernelValueDynamicSingleArray3DI;\n\nvar _require22 = require('./kernel-value/single-array2'),\n    WebGLKernelValueSingleArray2 = _require22.WebGLKernelValueSingleArray2;\n\nvar _require23 = require('./kernel-value/single-array3'),\n    WebGLKernelValueSingleArray3 = _require23.WebGLKernelValueSingleArray3;\n\nvar _require24 = require('./kernel-value/single-array4'),\n    WebGLKernelValueSingleArray4 = _require24.WebGLKernelValueSingleArray4;\n\nvar _require25 = require('./kernel-value/unsigned-array'),\n    WebGLKernelValueUnsignedArray = _require25.WebGLKernelValueUnsignedArray;\n\nvar _require26 = require('./kernel-value/dynamic-unsigned-array'),\n    WebGLKernelValueDynamicUnsignedArray = _require26.WebGLKernelValueDynamicUnsignedArray;\n\nvar kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false\n    }\n  },\n  single: {\n    dynamic: (_dynamic = {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI\n    }, _defineProperty(_dynamic, \"Array\", WebGLKernelValueDynamicSingleArray), _defineProperty(_dynamic, 'Input', WebGLKernelValueDynamicSingleInput), _defineProperty(_dynamic, 'NumberTexture', WebGLKernelValueDynamicNumberTexture), _defineProperty(_dynamic, 'ArrayTexture(1)', WebGLKernelValueDynamicNumberTexture), _defineProperty(_dynamic, 'ArrayTexture(2)', WebGLKernelValueDynamicNumberTexture), _defineProperty(_dynamic, 'ArrayTexture(3)', WebGLKernelValueDynamicNumberTexture), _defineProperty(_dynamic, 'ArrayTexture(4)', WebGLKernelValueDynamicNumberTexture), _defineProperty(_dynamic, 'MemoryOptimizedNumberTexture', WebGLKernelValueDynamicMemoryOptimizedNumberTexture), _defineProperty(_dynamic, 'HTMLImage', WebGLKernelValueDynamicHTMLImage), _defineProperty(_dynamic, 'HTMLImageArray', false), _dynamic),\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false\n    }\n  }\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n\n  if (value.type) {\n    type = value.type;\n  }\n\n  var types = kernelValueMaps[precision][dynamic];\n\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(\"Could not find a KernelValue for \".concat(type));\n  }\n\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType: lookupKernelValueType\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * @class KernelValue\n */\nvar KernelValue =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   *\n   * @param {IKernelArgumentSettings} settings\n   */\n  function KernelValue(value, settings) {\n    _classCallCheck(this, KernelValue);\n\n    var name = settings.name,\n        kernel = settings.kernel,\n        context = settings.context,\n        checkContext = settings.checkContext,\n        onRequestContextHandle = settings.onRequestContextHandle,\n        onUpdateValueMismatch = settings.onUpdateValueMismatch,\n        origin = settings.origin,\n        strictIntegers = settings.strictIntegers,\n        type = settings.type,\n        tactic = settings.tactic;\n\n    if (!name) {\n      throw new Error('name not set');\n    }\n\n    if (!type) {\n      throw new Error('type not set');\n    }\n\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n\n    if (!tactic) {\n      throw new Error('tactic not set');\n    }\n\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(\"origin must be \\\"user\\\" or \\\"constants\\\" value is \\\"\".concat(origin, \"\\\"\"));\n    }\n\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.id = \"\".concat(this.origin, \"_\").concat(name);\n    this.varName = origin === 'constants' ? \"constants.\".concat(name) : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers; // handle textures\n\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n  }\n\n  _createClass(KernelValue, [{\n    key: \"getSource\",\n    value: function getSource() {\n      throw new Error(\"\\\"getSource\\\" not defined on \".concat(this.constructor.name));\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      throw new Error(\"\\\"updateValue\\\" not defined on \".concat(this.constructor.name));\n    }\n  }, {\n    key: \"getFocusString\",\n    value: function getFocusString() {\n      throw new Error(\"\\\"getFocusString\\\" not defined on \".concat(this.constructor.name));\n    }\n  }]);\n\n  return KernelValue;\n}();\n\nmodule.exports = {\n  KernelValue: KernelValue\n};","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./single-input'),\n    WebGLKernelValueSingleInput = _require2.WebGLKernelValueSingleInput;\n\nvar WebGLKernelValueDynamicSingleInput =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicSingleInput, _WebGLKernelValueSing);\n\n  function WebGLKernelValueDynamicSingleInput() {\n    _classCallCheck(this, WebGLKernelValueDynamicSingleInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicSingleInput).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicSingleInput, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      var _value$size = _slicedToArray(value.size, 3),\n          w = _value$size[0],\n          h = _value$size[1],\n          d = _value$size[2];\n\n      this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n      this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n      this.uploadValue = new Float32Array(this.uploadArrayLength);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicSingleInput.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicSingleInput;\n}(WebGLKernelValueSingleInput);\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput: WebGLKernelValueDynamicSingleInput\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./single-array'),\n    WebGLKernelValueSingleArray = _require2.WebGLKernelValueSingleArray;\n\nvar WebGLKernelValueDynamicSingleArray =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicSingleArray, _WebGLKernelValueSing);\n\n  function WebGLKernelValueDynamicSingleArray() {\n    _classCallCheck(this, WebGLKernelValueDynamicSingleArray);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicSingleArray).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicSingleArray, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.dimensions = utils.getDimensions(value, true);\n      this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n      this.uploadValue = new Float32Array(this.uploadArrayLength);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicSingleArray.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicSingleArray;\n}(WebGLKernelValueSingleArray);\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray: WebGLKernelValueDynamicSingleArray\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./single-array1d-i'),\n    WebGLKernelValueSingleArray1DI = _require2.WebGLKernelValueSingleArray1DI;\n\nvar WebGLKernelValueDynamicSingleArray1DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicSingleArray1DI, _WebGLKernelValueSing);\n\n  function WebGLKernelValueDynamicSingleArray1DI() {\n    _classCallCheck(this, WebGLKernelValueDynamicSingleArray1DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicSingleArray1DI).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicSingleArray1DI, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.setShape(value);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicSingleArray1DI.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicSingleArray1DI;\n}(WebGLKernelValueSingleArray1DI);\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI: WebGLKernelValueDynamicSingleArray1DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./single-array2d-i'),\n    WebGLKernelValueSingleArray2DI = _require2.WebGLKernelValueSingleArray2DI;\n\nvar WebGLKernelValueDynamicSingleArray2DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicSingleArray2DI, _WebGLKernelValueSing);\n\n  function WebGLKernelValueDynamicSingleArray2DI() {\n    _classCallCheck(this, WebGLKernelValueDynamicSingleArray2DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicSingleArray2DI).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicSingleArray2DI, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.setShape(value);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicSingleArray2DI.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicSingleArray2DI;\n}(WebGLKernelValueSingleArray2DI);\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI: WebGLKernelValueDynamicSingleArray2DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('./single-array3d-i'),\n    WebGLKernelValueSingleArray3DI = _require2.WebGLKernelValueSingleArray3DI;\n\nvar WebGLKernelValueDynamicSingleArray3DI =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGLKernelValueDynamicSingleArray3DI, _WebGLKernelValueSing);\n\n  function WebGLKernelValueDynamicSingleArray3DI() {\n    _classCallCheck(this, WebGLKernelValueDynamicSingleArray3DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGLKernelValueDynamicSingleArray3DI).apply(this, arguments));\n  }\n\n  _createClass(WebGLKernelValueDynamicSingleArray3DI, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.setShape(value);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGLKernelValueDynamicSingleArray3DI.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGLKernelValueDynamicSingleArray3DI;\n}(WebGLKernelValueSingleArray3DI);\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI: WebGLKernelValueDynamicSingleArray3DI\n};","// language=GLSL\nvar fragmentShader = \"#version 300 es\\n__HEADER__;\\n__FLOAT_TACTIC_DECLARATION__;\\n__INT_TACTIC_DECLARATION__;\\n__SAMPLER_2D_TACTIC_DECLARATION__;\\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\\n\\nconst int LOOP_MAX = __LOOP_MAX__;\\n\\n__PLUGINS__;\\n__CONSTANTS__;\\n\\nin vec2 vTexCoord;\\n\\nconst int BIT_COUNT = 32;\\nint modi(int x, int y) {\\n  return x - y * (x / y);\\n}\\n\\nint bitwiseOr(int a, int b) {\\n  int result = 0;\\n  int n = 1;\\n  \\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\\n      result += n;\\n    }\\n    a = a / 2;\\n    b = b / 2;\\n    n = n * 2;\\n    if(!(a > 0 || b > 0)) {\\n      break;\\n    }\\n  }\\n  return result;\\n}\\nint bitwiseXOR(int a, int b) {\\n  int result = 0;\\n  int n = 1;\\n  \\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\\n      result += n;\\n    }\\n    a = a / 2;\\n    b = b / 2;\\n    n = n * 2;\\n    if(!(a > 0 || b > 0)) {\\n      break;\\n    }\\n  }\\n  return result;\\n}\\nint bitwiseAnd(int a, int b) {\\n  int result = 0;\\n  int n = 1;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\\n      result += n;\\n    }\\n    a = a / 2;\\n    b = b / 2;\\n    n = n * 2;\\n    if(!(a > 0 && b > 0)) {\\n      break;\\n    }\\n  }\\n  return result;\\n}\\nint bitwiseNot(int a) {\\n  int result = 0;\\n  int n = 1;\\n  \\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (modi(a, 2) == 0) {\\n      result += n;    \\n    }\\n    a = a / 2;\\n    n = n * 2;\\n  }\\n  return result;\\n}\\nint bitwiseZeroFillLeftShift(int n, int shift) {\\n  int maxBytes = BIT_COUNT;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (maxBytes >= n) {\\n      break;\\n    }\\n    maxBytes *= 2;\\n  }\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (i >= shift) {\\n      break;\\n    }\\n    n *= 2;\\n  }\\n\\n  int result = 0;\\n  int byteVal = 1;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (i >= maxBytes) break;\\n    if (modi(n, 2) > 0) { result += byteVal; }\\n    n = int(n / 2);\\n    byteVal *= 2;\\n  }\\n  return result;\\n}\\n\\nint bitwiseSignedRightShift(int num, int shifts) {\\n  return int(floor(float(num) / pow(2.0, float(shifts))));\\n}\\n\\nint bitwiseZeroFillRightShift(int n, int shift) {\\n  int maxBytes = BIT_COUNT;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (maxBytes >= n) {\\n      break;\\n    }\\n    maxBytes *= 2;\\n  }\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (i >= shift) {\\n      break;\\n    }\\n    n /= 2;\\n  }\\n  int result = 0;\\n  int byteVal = 1;\\n  for (int i = 0; i < BIT_COUNT; i++) {\\n    if (i >= maxBytes) break;\\n    if (modi(n, 2) > 0) { result += byteVal; }\\n    n = int(n / 2);\\n    byteVal *= 2;\\n  }\\n  return result;\\n}\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nfloat integerMod(float x, float y) {\\n  float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nint integerMod(int x, int y) {\\n  return x - (y * int(x/y));\\n}\\n\\n__DIVIDE_WITH_INTEGER_CHECK__;\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nfloat decode32(vec4 texel) {\\n  __DECODE32_ENDIANNESS__;\\n  texel *= 255.0;\\n  vec2 gte128;\\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  texel.b = texel.b - 128.0 * gte128.x;\\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nfloat decode16(vec4 texel, int index) {\\n  int channel = integerMod(index, 2);\\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\\n}\\n\\nfloat decode8(vec4 texel, int index) {\\n  int channel = integerMod(index, 4);\\n  return texel[channel] * 255.0;\\n}\\n\\nvec4 legacyEncode32(float f) {\\n  float F = abs(f);\\n  float sign = f < 0.0 ? 1.0 : 0.0;\\n  float exponent = floor(log2(F));\\n  float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  texel.rg = integerMod(texel.rg, 256.0);\\n  texel.b = integerMod(texel.b, 128.0);\\n  texel.a = exponent*0.5 + 63.5;\\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  texel = floor(texel);\\n  texel *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return texel;\\n}\\n\\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\\nvec4 encode32(float value) {\\n  if (value == 0.0) return vec4(0, 0, 0, 0);\\n\\n  float exponent;\\n  float mantissa;\\n  vec4  result;\\n  float sgn;\\n\\n  sgn = step(0.0, -value);\\n  value = abs(value);\\n\\n  exponent = floor(log2(value));\\n\\n  mantissa = value*pow(2.0, -exponent)-1.0;\\n  exponent = exponent+127.0;\\n  result   = vec4(0,0,0,0);\\n\\n  result.a = floor(exponent/2.0);\\n  exponent = exponent - result.a*2.0;\\n  result.a = result.a + 128.0*sgn;\\n\\n  result.b = floor(mantissa * 128.0);\\n  mantissa = mantissa - result.b / 128.0;\\n  result.b = result.b + exponent*128.0;\\n\\n  result.g = floor(mantissa*32768.0);\\n  mantissa = mantissa - result.g/32768.0;\\n\\n  result.r = floor(mantissa*8388608.0);\\n  return result/255.0;\\n}\\n// Dragons end here\\n\\nint index;\\nivec3 threadId;\\n\\nivec3 indexTo3D(int idx, ivec3 texDim) {\\n  int z = int(idx / (texDim.x * texDim.y));\\n  idx -= z * int(texDim.x * texDim.y);\\n  int y = int(idx / texDim.x);\\n  int x = int(integerMod(idx, texDim.x));\\n  return ivec3(x, y, z);\\n}\\n\\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture(tex, st / vec2(texSize));\\n  return decode32(texel);\\n}\\n\\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + (texDim.x * (y + (texDim.y * z)));\\n  int w = texSize.x * 2;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\\n  return decode16(texel, index);\\n}\\n\\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + (texDim.x * (y + (texDim.y * z)));\\n  int w = texSize.x * 4;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\\n  return decode8(texel, index);\\n}\\n\\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + (texDim.x * (y + (texDim.y * z)));\\n  int channel = integerMod(index, 4);\\n  index = index / 4;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  index = index / 4;\\n  vec4 texel = texture(tex, st / vec2(texSize));\\n  return texel[channel];\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  return texture(tex, st / vec2(texSize));\\n}\\n\\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  return texture(tex, vec3(st / vec2(texSize), z));\\n}\\n\\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\\n  return result[0];\\n}\\n\\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\\n  return vec2(result[0], result[1]);\\n}\\n\\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int channel = integerMod(index, 2);\\n  index = index / 2;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture(tex, st / vec2(texSize));\\n  if (channel == 0) return vec2(texel.r, texel.g);\\n  if (channel == 1) return vec2(texel.b, texel.a);\\n  return vec2(0.0, 0.0);\\n}\\n\\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\\n  return vec3(result[0], result[1], result[2]);\\n}\\n\\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\\n  int vectorIndex = fieldIndex / 4;\\n  int vectorOffset = fieldIndex - vectorIndex * 4;\\n  int readY = vectorIndex / texSize.x;\\n  int readX = vectorIndex - readY * texSize.x;\\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\\n\\n  if (vectorOffset == 0) {\\n    return tex1.xyz;\\n  } else if (vectorOffset == 1) {\\n    return tex1.yzw;\\n  } else {\\n    readX++;\\n    if (readX >= texSize.x) {\\n      readX = 0;\\n      readY++;\\n    }\\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\\n    if (vectorOffset == 2) {\\n      return vec3(tex1.z, tex1.w, tex2.x);\\n    } else {\\n      return vec3(tex1.w, tex2.x, tex2.y);\\n    }\\n  }\\n}\\n\\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  return getImage2D(tex, texSize, texDim, z, y, x);\\n}\\n\\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  int index = x + texDim.x * (y + texDim.y * z);\\n  int channel = integerMod(index, 2);\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  vec4 texel = texture(tex, st / vec2(texSize));\\n  return vec4(texel.r, texel.g, texel.b, texel.a);\\n}\\n\\nvec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\n__MAIN_CONSTANTS__;\\n__MAIN_ARGUMENTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";\nmodule.exports = {\n  fragmentShader: fragmentShader\n};","// language=GLSL\nvar vertexShader = \"#version 300 es\\n__FLOAT_TACTIC_DECLARATION__;\\n__INT_TACTIC_DECLARATION__;\\n__SAMPLER_2D_TACTIC_DECLARATION__;\\n\\nin vec2 aPos;\\nin vec2 aTexCoord;\\n\\nout vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";\nmodule.exports = {\n  vertexShader: vertexShader\n};","var _require = require('./kernel-value/boolean'),\n    WebGL2KernelValueBoolean = _require.WebGL2KernelValueBoolean;\n\nvar _require2 = require('./kernel-value/float'),\n    WebGL2KernelValueFloat = _require2.WebGL2KernelValueFloat;\n\nvar _require3 = require('./kernel-value/integer'),\n    WebGL2KernelValueInteger = _require3.WebGL2KernelValueInteger;\n\nvar _require4 = require('./kernel-value/html-image'),\n    WebGL2KernelValueHTMLImage = _require4.WebGL2KernelValueHTMLImage;\n\nvar _require5 = require('./kernel-value/dynamic-html-image'),\n    WebGL2KernelValueDynamicHTMLImage = _require5.WebGL2KernelValueDynamicHTMLImage;\n\nvar _require6 = require('./kernel-value/html-image-array'),\n    WebGL2KernelValueHtmlImageArray = _require6.WebGL2KernelValueHtmlImageArray;\n\nvar _require7 = require('./kernel-value/dynamic-html-image-array'),\n    WebGL2KernelValueDynamicHtmlImageArray = _require7.WebGL2KernelValueDynamicHtmlImageArray;\n\nvar _require8 = require('./kernel-value/single-input'),\n    WebGL2KernelValueSingleInput = _require8.WebGL2KernelValueSingleInput;\n\nvar _require9 = require('./kernel-value/dynamic-single-input'),\n    WebGL2KernelValueDynamicSingleInput = _require9.WebGL2KernelValueDynamicSingleInput;\n\nvar _require10 = require('./kernel-value/unsigned-input'),\n    WebGL2KernelValueUnsignedInput = _require10.WebGL2KernelValueUnsignedInput;\n\nvar _require11 = require('./kernel-value/dynamic-unsigned-input'),\n    WebGL2KernelValueDynamicUnsignedInput = _require11.WebGL2KernelValueDynamicUnsignedInput;\n\nvar _require12 = require('./kernel-value/memory-optimized-number-texture'),\n    WebGL2KernelValueMemoryOptimizedNumberTexture = _require12.WebGL2KernelValueMemoryOptimizedNumberTexture;\n\nvar _require13 = require('./kernel-value/dynamic-memory-optimized-number-texture'),\n    WebGL2KernelValueDynamicMemoryOptimizedNumberTexture = _require13.WebGL2KernelValueDynamicMemoryOptimizedNumberTexture;\n\nvar _require14 = require('./kernel-value/number-texture'),\n    WebGL2KernelValueNumberTexture = _require14.WebGL2KernelValueNumberTexture;\n\nvar _require15 = require('./kernel-value/dynamic-number-texture'),\n    WebGL2KernelValueDynamicNumberTexture = _require15.WebGL2KernelValueDynamicNumberTexture;\n\nvar _require16 = require('./kernel-value/single-array'),\n    WebGL2KernelValueSingleArray = _require16.WebGL2KernelValueSingleArray;\n\nvar _require17 = require('./kernel-value/dynamic-single-array'),\n    WebGL2KernelValueDynamicSingleArray = _require17.WebGL2KernelValueDynamicSingleArray;\n\nvar _require18 = require('./kernel-value/single-array1d-i'),\n    WebGL2KernelValueSingleArray1DI = _require18.WebGL2KernelValueSingleArray1DI;\n\nvar _require19 = require('./kernel-value/dynamic-single-array1d-i'),\n    WebGL2KernelValueDynamicSingleArray1DI = _require19.WebGL2KernelValueDynamicSingleArray1DI;\n\nvar _require20 = require('./kernel-value/single-array2d-i'),\n    WebGL2KernelValueSingleArray2DI = _require20.WebGL2KernelValueSingleArray2DI;\n\nvar _require21 = require('./kernel-value/dynamic-single-array2d-i'),\n    WebGL2KernelValueDynamicSingleArray2DI = _require21.WebGL2KernelValueDynamicSingleArray2DI;\n\nvar _require22 = require('./kernel-value/single-array3d-i'),\n    WebGL2KernelValueSingleArray3DI = _require22.WebGL2KernelValueSingleArray3DI;\n\nvar _require23 = require('./kernel-value/dynamic-single-array3d-i'),\n    WebGL2KernelValueDynamicSingleArray3DI = _require23.WebGL2KernelValueDynamicSingleArray3DI;\n\nvar _require24 = require('./kernel-value/single-array2'),\n    WebGL2KernelValueSingleArray2 = _require24.WebGL2KernelValueSingleArray2;\n\nvar _require25 = require('./kernel-value/single-array3'),\n    WebGL2KernelValueSingleArray3 = _require25.WebGL2KernelValueSingleArray3;\n\nvar _require26 = require('./kernel-value/single-array4'),\n    WebGL2KernelValueSingleArray4 = _require26.WebGL2KernelValueSingleArray4;\n\nvar _require27 = require('./kernel-value/unsigned-array'),\n    WebGL2KernelValueUnsignedArray = _require27.WebGL2KernelValueUnsignedArray;\n\nvar _require28 = require('./kernel-value/dynamic-unsigned-array'),\n    WebGL2KernelValueDynamicUnsignedArray = _require28.WebGL2KernelValueDynamicUnsignedArray;\n\nvar kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHtmlImageArray\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHtmlImageArray\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHtmlImageArray\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHtmlImageArray\n    }\n  }\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n\n  if (value.type) {\n    type = value.type;\n  }\n\n  var types = kernelValueMaps[precision][dynamic];\n\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(\"Could not find a KernelValue for \".concat(type));\n  }\n\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType: lookupKernelValueType\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../web-gl/kernel-value/boolean'),\n    WebGLKernelValueBoolean = _require.WebGLKernelValueBoolean;\n\nvar WebGL2KernelValueBoolean =\n/*#__PURE__*/\nfunction (_WebGLKernelValueBool) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueBoolean, _WebGLKernelValueBool);\n\n  function WebGL2KernelValueBoolean() {\n    _classCallCheck(this, WebGL2KernelValueBoolean);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueBoolean).apply(this, arguments));\n  }\n\n  return WebGL2KernelValueBoolean;\n}(WebGLKernelValueBoolean);\n\nmodule.exports = {\n  WebGL2KernelValueBoolean: WebGL2KernelValueBoolean\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/float'),\n    WebGLKernelValueFloat = _require2.WebGLKernelValueFloat;\n\nvar WebGL2KernelValueFloat =\n/*#__PURE__*/\nfunction (_WebGLKernelValueFloa) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueFloat, _WebGLKernelValueFloa);\n\n  function WebGL2KernelValueFloat() {\n    _classCallCheck(this, WebGL2KernelValueFloat);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueFloat).apply(this, arguments));\n  }\n\n  return WebGL2KernelValueFloat;\n}(WebGLKernelValueFloat);\n\nmodule.exports = {\n  WebGL2KernelValueFloat: WebGL2KernelValueFloat\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/integer'),\n    WebGLKernelValueInteger = _require2.WebGLKernelValueInteger;\n\nvar WebGL2KernelValueInteger =\n/*#__PURE__*/\nfunction (_WebGLKernelValueInte) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueInteger, _WebGLKernelValueInte);\n\n  function WebGL2KernelValueInteger() {\n    _classCallCheck(this, WebGL2KernelValueInteger);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueInteger).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueInteger, [{\n    key: \"getSource\",\n    value: function getSource(value) {\n      var variablePrecision = this.getVariablePrecisionString();\n\n      if (this.origin === 'constants') {\n        return \"const \".concat(variablePrecision, \" int \").concat(this.id, \" = \").concat(parseInt(value), \";\\n\");\n      }\n\n      return \"uniform \".concat(variablePrecision, \" int \").concat(this.id, \";\\n\");\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.origin === 'constants') return;\n      this.kernel.setUniform1i(this.id, this.uploadValue = value);\n    }\n  }]);\n\n  return WebGL2KernelValueInteger;\n}(WebGLKernelValueInteger);\n\nmodule.exports = {\n  WebGL2KernelValueInteger: WebGL2KernelValueInteger\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/html-image'),\n    WebGLKernelValueHTMLImage = _require2.WebGLKernelValueHTMLImage;\n\nvar WebGL2KernelValueHTMLImage =\n/*#__PURE__*/\nfunction (_WebGLKernelValueHTML) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueHTMLImage, _WebGLKernelValueHTML);\n\n  function WebGL2KernelValueHTMLImage() {\n    _classCallCheck(this, WebGL2KernelValueHTMLImage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueHTMLImage).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueHTMLImage, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"\".concat(variablePrecision, \" ivec2 \").concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"\".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }]);\n\n  return WebGL2KernelValueHTMLImage;\n}(WebGLKernelValueHTMLImage);\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage: WebGL2KernelValueHTMLImage\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/dynamic-html-image'),\n    WebGLKernelValueDynamicHTMLImage = _require2.WebGLKernelValueDynamicHTMLImage;\n\nvar WebGL2KernelValueDynamicHTMLImage =\n/*#__PURE__*/\nfunction (_WebGLKernelValueDyna) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicHTMLImage, _WebGLKernelValueDyna);\n\n  function WebGL2KernelValueDynamicHTMLImage() {\n    _classCallCheck(this, WebGL2KernelValueDynamicHTMLImage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicHTMLImage).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicHTMLImage, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicHTMLImage;\n}(WebGLKernelValueDynamicHTMLImage);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage: WebGL2KernelValueDynamicHTMLImage\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('./html-image-array'),\n    WebGL2KernelValueHtmlImageArray = _require.WebGL2KernelValueHtmlImageArray;\n\nvar WebGL2KernelValueDynamicHtmlImageArray =\n/*#__PURE__*/\nfunction (_WebGL2KernelValueHtm) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicHtmlImageArray, _WebGL2KernelValueHtm);\n\n  function WebGL2KernelValueDynamicHtmlImageArray() {\n    _classCallCheck(this, WebGL2KernelValueDynamicHtmlImageArray);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicHtmlImageArray).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicHtmlImageArray, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2DArray \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(images) {\n      this.dimensions = [images[0].width, images[0].height, images.length];\n      this.textureSize = [images[0].width, images[0].height];\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGL2KernelValueDynamicHtmlImageArray.prototype), \"updateValue\", this).call(this, images);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicHtmlImageArray;\n}(WebGL2KernelValueHtmlImageArray);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHtmlImageArray: WebGL2KernelValueDynamicHtmlImageArray\n};","var _slicedToArray = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl2/kernel-value/single-input'),\n    WebGL2KernelValueSingleInput = _require2.WebGL2KernelValueSingleInput;\n\nvar WebGL2KernelValueDynamicSingleInput =\n/*#__PURE__*/\nfunction (_WebGL2KernelValueSin) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicSingleInput, _WebGL2KernelValueSin);\n\n  function WebGL2KernelValueDynamicSingleInput() {\n    _classCallCheck(this, WebGL2KernelValueDynamicSingleInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicSingleInput).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicSingleInput, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      var _value$size = _slicedToArray(value.size, 3),\n          w = _value$size[0],\n          h = _value$size[1],\n          d = _value$size[2];\n\n      this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n      this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n      this.uploadValue = new Float32Array(this.uploadArrayLength);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleInput.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicSingleInput;\n}(WebGL2KernelValueSingleInput);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput: WebGL2KernelValueDynamicSingleInput\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/unsigned-input'),\n    WebGLKernelValueUnsignedInput = _require2.WebGLKernelValueUnsignedInput;\n\nvar WebGL2KernelValueUnsignedInput =\n/*#__PURE__*/\nfunction (_WebGLKernelValueUnsi) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueUnsignedInput, _WebGLKernelValueUnsi);\n\n  function WebGL2KernelValueUnsignedInput() {\n    _classCallCheck(this, WebGL2KernelValueUnsignedInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueUnsignedInput).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueUnsignedInput, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"\".concat(variablePrecision, \" ivec2 \").concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"\".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }]);\n\n  return WebGL2KernelValueUnsignedInput;\n}(WebGLKernelValueUnsignedInput);\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput: WebGL2KernelValueUnsignedInput\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/dynamic-unsigned-input'),\n    WebGLKernelValueDynamicUnsignedInput = _require2.WebGLKernelValueDynamicUnsignedInput;\n\nvar WebGL2KernelValueDynamicUnsignedInput =\n/*#__PURE__*/\nfunction (_WebGLKernelValueDyna) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicUnsignedInput, _WebGLKernelValueDyna);\n\n  function WebGL2KernelValueDynamicUnsignedInput() {\n    _classCallCheck(this, WebGL2KernelValueDynamicUnsignedInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicUnsignedInput).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicUnsignedInput, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicUnsignedInput;\n}(WebGLKernelValueDynamicUnsignedInput);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput: WebGL2KernelValueDynamicUnsignedInput\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/memory-optimized-number-texture'),\n    WebGLKernelValueMemoryOptimizedNumberTexture = _require2.WebGLKernelValueMemoryOptimizedNumberTexture;\n\nvar WebGL2KernelValueMemoryOptimizedNumberTexture =\n/*#__PURE__*/\nfunction (_WebGLKernelValueMemo) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueMemoryOptimizedNumberTexture, _WebGLKernelValueMemo);\n\n  function WebGL2KernelValueMemoryOptimizedNumberTexture() {\n    _classCallCheck(this, WebGL2KernelValueMemoryOptimizedNumberTexture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueMemoryOptimizedNumberTexture).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueMemoryOptimizedNumberTexture, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"\".concat(variablePrecision, \" ivec2 \").concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"\".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }]);\n\n  return WebGL2KernelValueMemoryOptimizedNumberTexture;\n}(WebGLKernelValueMemoryOptimizedNumberTexture);\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture: WebGL2KernelValueMemoryOptimizedNumberTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture'),\n    WebGLKernelValueDynamicMemoryOptimizedNumberTexture = _require2.WebGLKernelValueDynamicMemoryOptimizedNumberTexture;\n\nvar WebGL2KernelValueDynamicMemoryOptimizedNumberTexture =\n/*#__PURE__*/\nfunction (_WebGLKernelValueDyna) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicMemoryOptimizedNumberTexture, _WebGLKernelValueDyna);\n\n  function WebGL2KernelValueDynamicMemoryOptimizedNumberTexture() {\n    _classCallCheck(this, WebGL2KernelValueDynamicMemoryOptimizedNumberTexture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicMemoryOptimizedNumberTexture).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicMemoryOptimizedNumberTexture, [{\n    key: \"getSource\",\n    value: function getSource() {\n      return utils.linesToString([\"uniform sampler2D \".concat(this.id), \"uniform ivec2 \".concat(this.sizeId), \"uniform ivec3 \".concat(this.dimensionsId)]);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicMemoryOptimizedNumberTexture;\n}(WebGLKernelValueDynamicMemoryOptimizedNumberTexture);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture: WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/number-texture'),\n    WebGLKernelValueNumberTexture = _require2.WebGLKernelValueNumberTexture;\n\nvar WebGL2KernelValueNumberTexture =\n/*#__PURE__*/\nfunction (_WebGLKernelValueNumb) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueNumberTexture, _WebGLKernelValueNumb);\n\n  function WebGL2KernelValueNumberTexture() {\n    _classCallCheck(this, WebGL2KernelValueNumberTexture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueNumberTexture).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueNumberTexture, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"\".concat(variablePrecision, \" ivec2 \").concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"\".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }]);\n\n  return WebGL2KernelValueNumberTexture;\n}(WebGLKernelValueNumberTexture);\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture: WebGL2KernelValueNumberTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/dynamic-number-texture'),\n    WebGLKernelValueDynamicNumberTexture = _require2.WebGLKernelValueDynamicNumberTexture;\n\nvar WebGL2KernelValueDynamicNumberTexture =\n/*#__PURE__*/\nfunction (_WebGLKernelValueDyna) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicNumberTexture, _WebGLKernelValueDyna);\n\n  function WebGL2KernelValueDynamicNumberTexture() {\n    _classCallCheck(this, WebGL2KernelValueDynamicNumberTexture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicNumberTexture).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicNumberTexture, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicNumberTexture;\n}(WebGLKernelValueDynamicNumberTexture);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture: WebGL2KernelValueDynamicNumberTexture\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl2/kernel-value/single-array'),\n    WebGL2KernelValueSingleArray = _require2.WebGL2KernelValueSingleArray;\n\nvar WebGL2KernelValueDynamicSingleArray =\n/*#__PURE__*/\nfunction (_WebGL2KernelValueSin) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicSingleArray, _WebGL2KernelValueSin);\n\n  function WebGL2KernelValueDynamicSingleArray() {\n    _classCallCheck(this, WebGL2KernelValueDynamicSingleArray);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicSingleArray).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicSingleArray, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.dimensions = utils.getDimensions(value, true);\n      this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n      this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n      this.uploadValue = new Float32Array(this.uploadArrayLength);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleArray.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicSingleArray;\n}(WebGL2KernelValueSingleArray);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray: WebGL2KernelValueDynamicSingleArray\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl2/kernel-value/single-array1d-i'),\n    WebGL2KernelValueSingleArray1DI = _require2.WebGL2KernelValueSingleArray1DI;\n\nvar WebGL2KernelValueDynamicSingleArray1DI =\n/*#__PURE__*/\nfunction (_WebGL2KernelValueSin) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicSingleArray1DI, _WebGL2KernelValueSin);\n\n  function WebGL2KernelValueDynamicSingleArray1DI() {\n    _classCallCheck(this, WebGL2KernelValueDynamicSingleArray1DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicSingleArray1DI).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicSingleArray1DI, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.setShape(value);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleArray1DI.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicSingleArray1DI;\n}(WebGL2KernelValueSingleArray1DI);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI: WebGL2KernelValueDynamicSingleArray1DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl2/kernel-value/single-array2d-i'),\n    WebGL2KernelValueSingleArray2DI = _require2.WebGL2KernelValueSingleArray2DI;\n\nvar WebGL2KernelValueDynamicSingleArray2DI =\n/*#__PURE__*/\nfunction (_WebGL2KernelValueSin) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicSingleArray2DI, _WebGL2KernelValueSin);\n\n  function WebGL2KernelValueDynamicSingleArray2DI() {\n    _classCallCheck(this, WebGL2KernelValueDynamicSingleArray2DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicSingleArray2DI).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicSingleArray2DI, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.setShape(value);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleArray2DI.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicSingleArray2DI;\n}(WebGL2KernelValueSingleArray2DI);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI: WebGL2KernelValueDynamicSingleArray2DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl2/kernel-value/single-array3d-i'),\n    WebGL2KernelValueSingleArray3DI = _require2.WebGL2KernelValueSingleArray3DI;\n\nvar WebGL2KernelValueDynamicSingleArray3DI =\n/*#__PURE__*/\nfunction (_WebGL2KernelValueSin) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicSingleArray3DI, _WebGL2KernelValueSin);\n\n  function WebGL2KernelValueDynamicSingleArray3DI() {\n    _classCallCheck(this, WebGL2KernelValueDynamicSingleArray3DI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicSingleArray3DI).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicSingleArray3DI, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      this.setShape(value);\n      this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n      this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n\n      _get(_getPrototypeOf(WebGL2KernelValueDynamicSingleArray3DI.prototype), \"updateValue\", this).call(this, value);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicSingleArray3DI;\n}(WebGL2KernelValueSingleArray3DI);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI: WebGL2KernelValueDynamicSingleArray3DI\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../web-gl/kernel-value/single-array2'),\n    WebGLKernelValueSingleArray2 = _require.WebGLKernelValueSingleArray2;\n\nvar WebGL2KernelValueSingleArray2 =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueSingleArray2, _WebGLKernelValueSing);\n\n  function WebGL2KernelValueSingleArray2() {\n    _classCallCheck(this, WebGL2KernelValueSingleArray2);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueSingleArray2).apply(this, arguments));\n  }\n\n  return WebGL2KernelValueSingleArray2;\n}(WebGLKernelValueSingleArray2);\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2: WebGL2KernelValueSingleArray2\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../web-gl/kernel-value/single-array3'),\n    WebGLKernelValueSingleArray3 = _require.WebGLKernelValueSingleArray3;\n\nvar WebGL2KernelValueSingleArray3 =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueSingleArray3, _WebGLKernelValueSing);\n\n  function WebGL2KernelValueSingleArray3() {\n    _classCallCheck(this, WebGL2KernelValueSingleArray3);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueSingleArray3).apply(this, arguments));\n  }\n\n  return WebGL2KernelValueSingleArray3;\n}(WebGLKernelValueSingleArray3);\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3: WebGL2KernelValueSingleArray3\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../web-gl/kernel-value/single-array4'),\n    WebGLKernelValueSingleArray4 = _require.WebGLKernelValueSingleArray4;\n\nvar WebGL2KernelValueSingleArray4 =\n/*#__PURE__*/\nfunction (_WebGLKernelValueSing) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueSingleArray4, _WebGLKernelValueSing);\n\n  function WebGL2KernelValueSingleArray4() {\n    _classCallCheck(this, WebGL2KernelValueSingleArray4);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueSingleArray4).apply(this, arguments));\n  }\n\n  return WebGL2KernelValueSingleArray4;\n}(WebGLKernelValueSingleArray4);\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray4: WebGL2KernelValueSingleArray4\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/unsigned-array'),\n    WebGLKernelValueUnsignedArray = _require2.WebGLKernelValueUnsignedArray;\n\nvar WebGL2KernelValueUnsignedArray =\n/*#__PURE__*/\nfunction (_WebGLKernelValueUnsi) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueUnsignedArray, _WebGLKernelValueUnsi);\n\n  function WebGL2KernelValueUnsignedArray() {\n    _classCallCheck(this, WebGL2KernelValueUnsignedArray);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueUnsignedArray).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueUnsignedArray, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"\".concat(variablePrecision, \" ivec2 \").concat(this.sizeId, \" = ivec2(\").concat(this.textureSize[0], \", \").concat(this.textureSize[1], \")\"), \"\".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId, \" = ivec3(\").concat(this.dimensions[0], \", \").concat(this.dimensions[1], \", \").concat(this.dimensions[2], \")\")]);\n    }\n  }]);\n\n  return WebGL2KernelValueUnsignedArray;\n}(WebGLKernelValueUnsignedArray);\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray: WebGL2KernelValueUnsignedArray\n};","var _classCallCheck = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/luke/Projects/javscript-gpgpu/javascript-gpgpu/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../../../utils'),\n    utils = _require.utils;\n\nvar _require2 = require('../../web-gl/kernel-value/dynamic-unsigned-array'),\n    WebGLKernelValueDynamicUnsignedArray = _require2.WebGLKernelValueDynamicUnsignedArray;\n\nvar WebGL2KernelValueDynamicUnsignedArray =\n/*#__PURE__*/\nfunction (_WebGLKernelValueDyna) {\n  \"use strict\";\n\n  _inherits(WebGL2KernelValueDynamicUnsignedArray, _WebGLKernelValueDyna);\n\n  function WebGL2KernelValueDynamicUnsignedArray() {\n    _classCallCheck(this, WebGL2KernelValueDynamicUnsignedArray);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WebGL2KernelValueDynamicUnsignedArray).apply(this, arguments));\n  }\n\n  _createClass(WebGL2KernelValueDynamicUnsignedArray, [{\n    key: \"getSource\",\n    value: function getSource() {\n      var variablePrecision = this.getVariablePrecisionString();\n      return utils.linesToString([\"uniform \".concat(variablePrecision, \" sampler2D \").concat(this.id), \"uniform \".concat(variablePrecision, \" ivec2 \").concat(this.sizeId), \"uniform \".concat(variablePrecision, \" ivec3 \").concat(this.dimensionsId)]);\n    }\n  }]);\n\n  return WebGL2KernelValueDynamicUnsignedArray;\n}(WebGLKernelValueDynamicUnsignedArray);\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray: WebGL2KernelValueDynamicUnsignedArray\n};","var _require = require('./utils'),\n    utils = _require.utils;\n/**\n * Makes kernels easier for mortals (including me)\n * @param kernel\n * @returns {function()}\n */\n\n\nfunction kernelRunShortcut(kernel) {\n  var _run = function run() {\n    kernel.build.apply(kernel, arguments);\n\n    if (kernel.renderKernels) {\n      _run = function run() {\n        kernel.run.apply(kernel, arguments);\n\n        if (kernel.switchingKernels) {\n          kernel.switchingKernels = false;\n          return kernel.onRequestSwitchKernel(arguments, kernel);\n        }\n\n        return kernel.renderKernels();\n      };\n    } else if (kernel.renderOutput) {\n      _run = function run() {\n        kernel.run.apply(kernel, arguments);\n\n        if (kernel.switchingKernels) {\n          kernel.switchingKernels = false;\n          return kernel.onRequestSwitchKernel(arguments, kernel);\n        }\n\n        return kernel.renderOutput();\n      };\n    } else {\n      _run = function run() {\n        return kernel.run.apply(kernel, arguments);\n      };\n    }\n\n    return _run.apply(kernel, arguments);\n  };\n\n  var shortcut = function shortcut() {\n    return _run.apply(kernel, arguments);\n  };\n  /**\n   * Run kernel in async mode\n   * @returns {Promise<KernelOutput>}\n   */\n\n\n  shortcut.exec = function () {\n    var _this = this,\n        _arguments = arguments;\n\n    return new Promise(function (accept, reject) {\n      try {\n        accept(_run.apply(_this, _arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n\n  shortcut.replaceKernel = function (replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n    shortcut.kernel = kernel;\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  shortcut.kernel = kernel;\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  var properties = utils.allPropertiesOf(kernel);\n\n  var _loop = function _loop(i) {\n    var property = properties[i];\n    if (property[0] === '_' && property[1] === '_') return \"continue\";\n\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function () {\n          kernel[property].apply(kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        if (property === 'toString') {\n          shortcut.toString = function () {\n            return kernel.toString.apply(kernel, arguments);\n          };\n        } else {\n          shortcut[property] = kernel[property].bind(kernel);\n        }\n      }\n    } else {\n      shortcut.__defineGetter__(property, function () {\n        return kernel[property];\n      });\n\n      shortcut.__defineSetter__(property, function (value) {\n        kernel[property] = value;\n      });\n    }\n  };\n\n  for (var i = 0; i < properties.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n\nmodule.exports = {\n  kernelRunShortcut: kernelRunShortcut\n};","var _require = require('./utils'),\n    utils = _require.utils;\n/**\n *\n * @param name\n * @param source\n * @returns {Function}\n */\n\n\nfunction alias(name, source) {\n  var fnString = source.toString();\n  return new Function(\"return function \".concat(name, \" (\").concat(utils.getArgumentNamesFromString(fnString).join(', '), \") {\\n  \").concat(utils.getFunctionBodyFromString(fnString), \"\\n}\"))();\n}\n\nmodule.exports = {\n  alias: alias\n};","export default function gpuMultiply(input: Number[]) {\n  let accumulator = 0;\n  for (let i = 1; i <= 5000; i++) {\n    // @ts-ignore\n    accumulator += (input[this.thread.x] + 1) / i;\n  }\n  return accumulator;\n};","import { GPU } from \"gpu.js\";\nimport workload from '../workloads/gpuMultiply';\n\nconst ctx: Worker = self as any;\nconst n = 50000;\nconst n_2 = n;\n\nconst gpu = new GPU();\nconst doWork = gpu\n  .createKernel(workload)\n  .setImmutable(true)\n  .setPipeline(true)\n  .setOutput([n]);\n\nconst input = new Array(n_2).fill(1).map(() => Math.random());\n\nctx.addEventListener(\"message\", event => {\n  Array(100)\n    .fill(0)\n    .forEach((_, i) => {\n      console.log(doWork(input));\n      ctx.postMessage(\"message\");\n    });\n});\n\nexport default ctx;\n"],"sourceRoot":""}